{
  "objects": [
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command sends out a noise signal sequentially on all audio output connectors and measures the room impulse response (RIR) between the output and the microphones. If a RIR is detected, the detected number of microphones (input), the detected number of output connectors, and the detected delay between the output and input is reported back. Example: xCommand Audio Diagnostics Advanced Run Volume: 50 MeasurementLength: 1 Result returned -> OK *r AdvancedRunResult (status=OK): *r AdvancedRunResult HdmiSpeakersDelay: \"100 ms\" *r AdvancedRunResult NumHdmiSpeakersDetected: 2 *r AdvancedRunResult NumMicsDetected: 1 ** end",
        "params": [
          {
            "default": "0",
            "description": "The channel number, from left to right, of the selected output.",
            "name": "Channel",
            "required": false,
            "valuespace": {
              "Max": "13",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "3",
            "description": "The length of the measurement in number of seconds. In a noisy environment a longer measurement duration will give a more reliable and robust result.",
            "name": "MeasurementLength",
            "required": false,
            "valuespace": {
              "Max": "100",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "All",
            "description": "The output where the test signal should be directed. HDMI: Measure the room impulse response (RIR)  of the device connected to the HDMI output. Line: Measure the RIR of the device connected to the Line output (only available on video conferencing devices that have a Line output). Internal: Measure the RIR of the internal loudspeaker (only available on video conferencing devices that have an internal loudspeaker). Headset: Measure the RIR of the headset (only available on video conferencing devices that have a headset). All: Measure the RIR on all outputs.",
            "name": "Output",
            "required": false,
            "valuespace": {
              "Values": [
                "HDMI",
                "Line",
                "Internal",
                "Headset",
                "All"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "20",
            "description": "The volume of the test signal. In a noisy environment a higher volume gives more reliable and robust results.",
            "name": "Volume",
            "required": false,
            "valuespace": {
              "Max": "50",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31497,
      "normPath": "Audio Diagnostics Advanced Run",
      "path": "Audio Diagnostics Advanced Run",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reset the acoustic echo cancellation. This command is useful when making changes in the acoustical treatment of the room. All previous adaptations are cleared and a new measurement of the reverberation time is made. This is not allowed during a call.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33712,
      "normPath": "Audio Diagnostics AecReverb Reset",
      "path": "Audio Diagnostics AecReverb Reset",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The command uses the acoustic echo canceller to give an estimate of the reverberation time in the room. This is done transparently, without interruption of the normal operation of the endpoint.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33713,
      "normPath": "Audio Diagnostics AecReverb Run",
      "path": "Audio Diagnostics AecReverb Run",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command measures the audio delay/latency in a device that is connected to the video conferencing device. A typical use case it to measure the delay in a TV connected to the video conferencing device via the HDMI connector. If the delay in a TV is too high, the real-time experience of a video call will be substantially degraded. If the delay is more than 50 ms we recommend the user to find a TV setting that has shorter delay. Typical TV settings that can reduce the delay are: Gaming Mode and PC Mode. This command will measure the delay between output and input (microphone). This means that if you are using an external acoustic echo canceller or audio mixer, this command will also measure the delay of these devices.",
        "params": [
          {
            "default": "6",
            "description": "The length of the measurement in number of seconds. In a noisy environment a longer measurement duration will give a more reliable and robust result.",
            "name": "MeasurementLength",
            "required": false,
            "valuespace": {
              "Max": "100",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "HDMI",
            "description": "HDMI: Measure the delay of the device connected to the HDMI output. Line: Measure the delay of the device connected to the Line output (only available on video conferencing devices that have a Line output). Internal: Measure the delay of the internal loudspeaker (only available on video conferencing devices that have an internal loudspeaker). Headset: Measure the delay of the headset (only available on video conferencing devices that have a headset). All: Measure the maximum delay of all outputs.",
            "name": "Output",
            "required": false,
            "valuespace": {
              "Values": [
                "HDMI",
                "Line",
                "Internal",
                "Headset",
                "All"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "20",
            "description": "The volume of the test signal. In a noisy environment a higher volume gives more reliable and robust results.",
            "name": "Volume",
            "required": false,
            "valuespace": {
              "Max": "50",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31498,
      "normPath": "Audio Diagnostics MeasureDelay",
      "path": "Audio Diagnostics MeasureDelay",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command lists the current equalizer parameters. If no EqualizerId is specified, the command lists all 8 equalizers.",
        "params": [
          {
            "description": "Each EqualizerId has 6 second-order filter sections with these parameters: FilterType, Frequency, Gain and Q-value.",
            "name": "EqualizerId",
            "required": false,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31649,
      "normPath": "Audio Equalizer List",
      "path": "Audio Equalizer List",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "There are 8 audio equalizers; each one has 6 adjustable filter sections. Each section is a second-order filter, which can be configured to modify the signal passing through the selected equalizer. This command sets the equalizer parameters for the selected EqualizerId and Section.",
        "params": [
          {
            "description": "True: The modifications set for the section will be applied to the signal. False: No modifications will be applied to the signal.",
            "name": "Enabled",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique equalizer to which the modified settings apply.",
            "name": "EqualizerId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The shape of the curve. highpass: Attenuate signals below a given frequency. highshelf: Amplify or attenuate signals above a given frequency. lowpass: Attenuate signals above a given frequency. lowshelf: Amplify or attenuate signals below a given frequency. none: Straight pass through of the signal (the same as Enabled: False). peaking: Amplify or attenuate signals around a given frequency.",
            "name": "FilterType",
            "required": true,
            "valuespace": {
              "Values": [
                "highpass",
                "highshelf",
                "lowpass",
                "lowshelf",
                "none",
                "peaking"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The frequency in Hertz [Hz] around which the filter is tuned. A number in the range 20 – 20 000.",
            "name": "Frequency",
            "required": true,
            "valuespace": {
              "MaxLength": "32",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The gain in deciBels [dB] applied to either the entire curve or a selected part of the curve, depending on the filtertype. A number in the range -100 to 20.",
            "name": "Gain",
            "required": true,
            "valuespace": {
              "MaxLength": "32",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "This describes the \"sharpness\" of the filter. A lower value means a smoother curve. A number in the range 0.1 to 50.",
            "name": "Q",
            "required": true,
            "valuespace": {
              "MaxLength": "32",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Each audio equalizer has 6 adjustable filter sections. Each section is a second-order filter, which can be configured to modify the signal passing through the selected equalizer.",
            "name": "Section",
            "required": true,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 33911,
      "normPath": "Audio Equalizer Update",
      "path": "Audio Equalizer Update",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Create a virtual local input, and generate an identifier for it (InputId). A local input is associated with a set of input connectors, and you can specify the following: a name for the local input, how to mix the signals from the associated input connectors, the use of Automatic Gain Control (AGC) and mute, whether to make a mono or stereo signal, and whether to use direct mode to bypass input processing. The maximum number of local input modules is 8. You get an error message if you exceed the limit. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "On: Adjusts the gain continuously to maintain a constant sound level (default). Off: No automatic gain control.",
            "name": "AGC",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "1: Mixes the input signals into a mono signal (default). 2: Mixes the input signals into a stereo signal.",
            "name": "Channels",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "On: Bypass input processing such as acoustic echo cancellation and noise reduction, regardless of the configuration for each connected input connector. Bypassing the input processing reduces the audio input delay, which is useful when doing local sound reinforcement. Off: All regular input processing is performed, according to the configuration of each connector (default).",
            "name": "Direct",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "A unique identifier for the local input. If you don't specify an InputID, the device will automatically create one for you. We recommend that you specify the InputId yourself in case you need to refer to the local input at a later stage.",
            "name": "InputId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Auto: If one input signal is dominating, the signal on the other connectors are attenuated with 20 dB each. Fixed: The input signals all have the same weight, and consequently they are mixed together with equal gains (default). GainShared: If one or some of the input signals dominate, the rest of the input signals are attenuated by a few dB so that the total gain of the mixed signal remains the same all the time. Auto and GainShared are intended for the microphone inputs; Fixed is recommended for Line and HDMI inputs.",
            "name": "MixerMode",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Fixed",
                "GainShared"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "On: Mutes the mix of input signals (default). Off: No muting.",
            "name": "Mute",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Choose a name that describes the local input. If you don't specify a name, the string will be empty.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 33912,
      "normPath": "Audio LocalInput Add",
      "path": "Audio LocalInput Add",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Attach an input connector to the local input given by the input ID. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. A connector can only be attached to one local input. Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type. ARC: HDMI with ARC (Audio Return Channel) is input connector. HDMI: HDMI cable input connector. Microphone: Microphone input connector. WebView: WebView input connector.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone",
                "ARC",
                "WebView",
                "USBInterface"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier of the local input. It was generated when the local input was created with the xCommand Audio LocalInput Add command.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35194,
      "normPath": "Audio LocalInput AddConnector",
      "path": "Audio LocalInput AddConnector",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Attach an input connector to the local input given by the input ID. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. A connector can only be attached to one local input. Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type. ARC: HDMI with ARC (Audio Return Channel) is input connector. HDMI: HDMI cable input connector. Microphone: Microphone input connector. WebView: WebView input connector.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone",
                "ARC",
                "WebView",
                "Ethernet",
                "USBInterface"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier of the local input. It was generated when the local input was created with the xCommand Audio LocalInput Add command.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35226,
      "normPath": "Audio LocalInput AddConnector",
      "path": "Audio LocalInput AddConnector",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove the local input given by the input ID. Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "The unique identifier of the local input. It was generated when the local input was created with the xCommand Audio LocalInput Add command.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31652,
      "normPath": "Audio LocalInput Remove",
      "path": "Audio LocalInput Remove",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Detach an input connector from the local input given by the input ID. You need to enter both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type. ARC: HDMI with ARC (Audio Return Channel) is input connector. HDMI: HDMI cable input connector. Microphone: Microphone input connector. WebView: WebView input connector.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone",
                "ARC",
                "WebView",
                "USBInterface"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier for the local input. It was generated when the local input was created with the xCommand Audio LocalInput Add command.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35195,
      "normPath": "Audio LocalInput RemoveConnector",
      "path": "Audio LocalInput RemoveConnector",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Detach an input connector from the local input given by the input ID. You need to enter both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type. ARC: HDMI with ARC (Audio Return Channel) is input connector. HDMI: HDMI cable input connector. Microphone: Microphone input connector. WebView: WebView input connector.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone",
                "ARC",
                "WebView",
                "Ethernet",
                "USBInterface"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier for the local input. It was generated when the local input was created with the xCommand Audio LocalInput Add command.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35227,
      "normPath": "Audio LocalInput RemoveConnector",
      "path": "Audio LocalInput RemoveConnector",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Update the settings of the local input given by the input ID. Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "On: Adjust the gain continuously to maintain a constant sound level). Off: No automatic gain control.",
            "name": "AGC",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "1: Mix the input signals into a mono signal. 2: Mix the input signals into a stereo signal.",
            "name": "Channels",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "On: Bypass input processing such as acoustic echo cancellation and noise reduction, regardless of the configuration for each connected input connector. Bypassing the input processing reduces the audio input delay, which is useful when doing local sound reinforcement. Off: All regular input processing is performed, according to the configuration of each connector.",
            "name": "Direct",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier for the local input. It was generated when the local input was created with the xCommand Audio LocalInput Add command.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Auto: If one input signal is dominating, the signal on the other connectors are attenuated with 20 dB each. Fixed: The input signals all have the same weight, and consequently they are mixed together with equal gains. GainShared: If one or some of the input signals dominate, the rest of the input signals are attenuated by a few dB so that the total gain of the mixed signal remains the same all the time. Auto and GainShared are intended for the microphones; Fixed is recommended for Line and HDMI inputs.",
            "name": "MixerMode",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Fixed",
                "GainShared"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "On: Mutes the mix of input signals. Off: No muting.",
            "name": "Mute",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Choose a name that describes the local input.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31654,
      "normPath": "Audio LocalInput Update",
      "path": "Audio LocalInput Update",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Create a virtual local output and generate an identifier for it (OutputId). A local output is a mix of local inputs and the remote input signals. Use the xCommand Audio LocalOutput ConnectInput command to specify which local inputs to include. The remote input signal (from far-end) is by default automatically added to this local output when in a call.Use the AutoconnectRemote parameter if you want to override the default behavior. A local output is associated with a set of output connectors, which all receive the same signal. The maximum number of local output modules is 6. You get an error message if you exceed the limit. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "default": "On",
            "description": "On: The remote input signal is automatically added to the local output when in a call. Off: The remote input signal is not added to the local output.",
            "name": "AutoconnectRemote",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "1",
            "description": "1: Mix the local and remote input signals into a mono signal. 2: Mix the local and remote input signals into a stereo signal.",
            "name": "Channels",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "Off",
            "description": "On: Choose On if at least one of the associated connectors are connected to a loudspeaker. This is important because it tells the echo canceler to use this signal as a reference signal. Off: Choose Off if no loudspeaker is connected to the associated connectors. Note that only one of the local outputs should have a loudspeaker connected.",
            "name": "Loudspeaker",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "Choose a name that describes the local output.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "0",
            "description": "A unique identifier for the local output. If you don't specify an OutputId, the device will automatically create one for you. We recommend that you specify the OutputId yourself in case you need to refer to the output module at a later stage.",
            "name": "OutputId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "Off",
            "description": "On: The volume will change according to the level set with the volume controls on the user interface, or with the xCommand Audio Volume commands. If Loudspeaker is On, VolumeControlled is forced to On no matter what you specify here. Off: The volume is neither influenced by the volume controls on the user interface, nor the xCommand Audio Volume commands.",
            "name": "VolumeControlled",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 33915,
      "normPath": "Audio LocalOutput Add",
      "path": "Audio LocalOutput Add",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Attach an output connector to the local output given by the output ID. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. A connector can only be attached to one local output. Run xStatus Audio Output LocalOutput to get an overview of all local outputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Line",
                "ARC",
                "USBInterface"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier of the local output. It was generated when the local output was created with the xCommand Audio LocalOutput Add command.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35196,
      "normPath": "Audio LocalOutput AddConnector",
      "path": "Audio LocalOutput AddConnector",
      "products": [
        "barents"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Attach an output connector to the local output given by the output ID. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. A connector can only be attached to one local output. Run xStatus Audio Output LocalOutput to get an overview of all local outputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Line",
                "InternalSpeaker",
                "ARC",
                "USBInterface"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier of the local output. It was generated when the local output was created with the xCommand Audio LocalOutput Add command.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35224,
      "normPath": "Audio LocalOutput AddConnector",
      "path": "Audio LocalOutput AddConnector",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Attach an output connector to the local output given by the output ID. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. A connector can only be attached to one local output. Run xStatus Audio Output LocalOutput to get an overview of all local outputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "ARC",
                "Ethernet",
                "Line",
                "InternalSpeaker",
                "USBInterface"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier of the local output. It was generated when the local output was created with the xCommand Audio LocalOutput Add command.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35228,
      "normPath": "Audio LocalOutput AddConnector",
      "path": "Audio LocalOutput AddConnector",
      "products": [
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Connect a local or remote input to a local output by giving their IDs as parameters. A local input can be connected to any number of local outputs. Likewise, any number of local inputs can be connected to each local output. Note that the remote input signal (from far-end) is automatically added to all local outputs when a call is made, and automatically disconnected when the call is ended. Run xStatus Audio Output LocalOutput to get an overview of all local outputs, xStatus Audio Input LocalInput to get an overview of all local inputs, and xStatus Audio Input RemoteInput to see the remote input details. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "default": "0",
            "description": "Set the gain on the input signal. The gain can also be negative (attenuation). The value -54 dB equals Off.",
            "name": "InputGain",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "-54",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The unique identifier of the local or remote input. The local input's ID was generated when the local input was created with the xCommand Audio LocalInput Add command. The remote input's ID was generated automatically when the call was made.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The unique identifier of the local output. It was generated when the local output was created with the xCommand Audio LocalOutput Add command.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31657,
      "normPath": "Audio LocalOutput ConnectInput",
      "path": "Audio LocalOutput ConnectInput",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Disconnect a local or remote input from a local output. Note that the remote input signal (from far-end) is automatically disconnected when a call is ended. Run xStatus Audio Output LocalOutput to get an overview of all local outputs, xStatus Audio Input LocalInput to get an overview of all local inputs, and xStatus Audio Input RemoteInput to see the remote input details. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "The unique identifier of the local or remote input. The local input's ID was generated when the local input was created with the xCommand Audio LocalInput Add command. The remote input's ID was generated automatically when the call was made.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The unique identifier of the local output. It was generated when the local output was created with the xCommand Audio LocalOutput Add command.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31658,
      "normPath": "Audio LocalOutput DisconnectInput",
      "path": "Audio LocalOutput DisconnectInput",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove the local output given by the output ID. Run xStatus Audio Output LocalOutput to get an overview of all local outputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "The unique identifier of the local output. It was generated when the local output was created with the xCommand Audio LocalOutput Add command.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31659,
      "normPath": "Audio LocalOutput Remove",
      "path": "Audio LocalOutput Remove",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Detach an output connector from the local output given by the output ID. You need to enter both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. Run xStatus Audio Output LocalOutput to get an overview of all local outputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Line",
                "ARC",
                "USBInterface"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier of the local output. It was generated when the local output was created with the xCommand Audio LocalOutput Add command.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35197,
      "normPath": "Audio LocalOutput RemoveConnector",
      "path": "Audio LocalOutput RemoveConnector",
      "products": [
        "barents"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Detach an output connector from the local output given by the output ID. You need to enter both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. Run xStatus Audio Output LocalOutput to get an overview of all local outputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Line",
                "InternalSpeaker",
                "ARC",
                "USBInterface"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier of the local output. It was generated when the local output was created with the xCommand Audio LocalOutput Add command.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35225,
      "normPath": "Audio LocalOutput RemoveConnector",
      "path": "Audio LocalOutput RemoveConnector",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Detach an output connector from the local output given by the output ID. You need to enter both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. Run xStatus Audio Output LocalOutput to get an overview of all local outputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "ARC",
                "Ethernet",
                "Line",
                "InternalSpeaker",
                "USBInterface"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier of the local output. It was generated when the local output was created with the xCommand Audio LocalOutput Add command.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35229,
      "normPath": "Audio LocalOutput RemoveConnector",
      "path": "Audio LocalOutput RemoveConnector",
      "products": [
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Update the settings of the local output given by the output ID. Run xStatus Audio Output LocalOutput to get an overview of all local outputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "On: The remote input signal is automatically added to the local output when in a call. Off: The remote input signal is not added to the local output.",
            "name": "AutoconnectRemote",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "1: Mix the local and remote input signals into a mono signal. 2: Mix the local and remote input signals into a stereo signal.",
            "name": "Channels",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "On: Choose On if at least one of the associated connectors are connected to a loudspeaker. This is important because it tells the echo canceler to use this signal as a reference signal. Off: Choose Off if no loudspeaker is connected to the associated connectors. Note that only one of the local outputs should have a loudspeaker connected.",
            "name": "Loudspeaker",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Choose a name that describes the local output.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The unique identifier of the local output. It was generated when the local output was created with the xCommand Audio LocalOutput Add command.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "On: The volume will change according to the level set by the volume controls on the user interface, or the xCommand Audio Volume commands. If Loudspeaker is On, VolumeControlled is forced to On no matter what you specify here. Off: The volume is neither influenced by the volume controls on the user interface, nor the xCommand Audio Volume commands.",
            "name": "VolumeControlled",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31661,
      "normPath": "Audio LocalOutput Update",
      "path": "Audio LocalOutput Update",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "default": "0",
            "name": "InputGain",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "-54",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ],
        "description": "Update the gain of a local or remote input that is connected to a local output. Note that the remote input signal (from far-end) is automatically added to all local outputs when a call is made, and automatically disconnected when the call is ended. Run xStatus Audio Output LocalOutput to get an overview of all local outputs, xStatus Audio Input LocalInput to get an overview of all local inputs, and xStatus Audio Input RemoteInput to see the remote input details. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot."
      },
      "id": 31431,
      "normPath": "Audio LocalOutput UpdateInputGain",
      "path": "Audio LocalOutput UpdateInputGain",
      "products": [
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Update the gain of a local or remote input that is connected to a local output. Note that the remote input signal (from far-end) is automatically added to all local outputs when a call is made, and automatically disconnected when the call is ended. Run xStatus Audio Output LocalOutput to get an overview of all local outputs, xStatus Audio Input LocalInput to get an overview of all local inputs, and xStatus Audio Input RemoteInput to see the remote input details. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "default": "0",
            "description": "Set the gain on the input signal. The gain can also be negative (attenuation). The value -54 dB equals Off.",
            "name": "InputGain",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "-54",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The unique identifier of the local or remote input. The local input's ID was generated when the local input was created with the xCommand Audio LocalInput Add command. The remote input's ID was generated automatically when the call was made.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The unique identifier of the local output. It was generated when the local output was created with the xCommand Audio LocalOutput Add command.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31662,
      "normPath": "Audio LocalOutput UpdateInputGain",
      "path": "Audio LocalOutput UpdateInputGain",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start using MusicMode in the current call. Music mode allows the dynamic range of music go through. When Music mode is in use, sound level variations are transmitted intact and the noise filtering is kept to a minimum. MusicMode is automatically turned off when the call ends.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33714,
      "normPath": "Audio Microphones MusicMode Start",
      "path": "Audio Microphones MusicMode Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop using MusicMode in the current call.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33715,
      "normPath": "Audio Microphones MusicMode Stop",
      "path": "Audio Microphones MusicMode Stop",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Mute all microphones.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 26305,
      "normPath": "Audio Microphones Mute",
      "path": "Audio Microphones Mute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Activate noise removal on the device. For this to take effect, you need to enable xConfiguration Audio Microphones NoiseRemoval Mode to enable the noise removal feature on the device.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33716,
      "normPath": "Audio Microphones NoiseRemoval Activate",
      "path": "Audio Microphones NoiseRemoval Activate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deactivate noise removal on the device.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33717,
      "normPath": "Audio Microphones NoiseRemoval Deactivate",
      "path": "Audio Microphones NoiseRemoval Deactivate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Toggle the microphone between muted and unmuted.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 26306,
      "normPath": "Audio Microphones ToggleMute",
      "path": "Audio Microphones ToggleMute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Unmute all microphones.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 26307,
      "normPath": "Audio Microphones Unmute",
      "path": "Audio Microphones Unmute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Connect an input to a remote output by giving their IDs as parameters. An input can be connected to any number of remote output gates, and any number of inputs can be connected to one remote output gate. Note that all local inputs are automatically added to all remote output gates when a call is made, and automatically disconnected when the call is ended. Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. It is only applicable during a call.",
        "params": [
          {
            "default": "0",
            "description": "Set the gain on the input signal. The gain can also be negative (attenuation). The value -54 dB equals Off.",
            "name": "InputGain",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "-54",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The unique identifier of the input. It was either generated when the input was created with the xCommand Audio Local Input Add command, or when the call was set up (remote input).",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The unique identifier of the remote output. It was automatically generated when the call was made.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31663,
      "normPath": "Audio RemoteOutput ConnectInput",
      "path": "Audio RemoteOutput ConnectInput",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Disconnect an input from a remote output by giving their IDs as parameters. Note that the remote output is automatically removed when the call has ended. Run xStatus Audio Output RemoteOutput to get an overview of the remote outputs, and xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. It is only applicable during a call.",
        "params": [
          {
            "description": "The unique identifier of the input. It was either generated when the input was created with the xCommand Audio Local Input Add command, or when the call was set up (remote input).",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The unique identifier of the remote output. It was automatically generated when the call was made.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31664,
      "normPath": "Audio RemoteOutput DisconnectInput",
      "path": "Audio RemoteOutput DisconnectInput",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "default": "0",
            "name": "InputGain",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "-54",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ],
        "description": "Update the gain of an input that is connected to a remote output. Note that the remote output is automatically removed when the call has ended. Run xStatus Audio Output RemoteOutput to get an overview of the remote outputs, and xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. It is only applicable during a call."
      },
      "id": 31432,
      "normPath": "Audio RemoteOutput UpdateInputGain",
      "path": "Audio RemoteOutput UpdateInputGain",
      "products": [
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Update the gain of an input that is connected to a remote output. Note that the remote output is automatically removed when the call has ended. Run xStatus Audio Output RemoteOutput to get an overview of the remote outputs, and xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. It is only applicable during a call.",
        "params": [
          {
            "default": "0",
            "description": "Set the gain on the input signal. The gain can also be negative (attenuation). The value -54 dB equals Off.",
            "name": "InputGain",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "-54",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The unique identifier of the input. It was either generated when the input was created with the xCommand Audio Local Input Add command, or when the call was set up (remote input).",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The unique identifier of the remote output. It was automatically generated when the call was made.",
            "name": "OutputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31665,
      "normPath": "Audio RemoteOutput UpdateInputGain",
      "path": "Audio RemoteOutput UpdateInputGain",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Device",
            "required": true,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetBluetooth",
                "HeadsetUSB",
                "HeadsetAnalog",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ],
        "description": "Select which type of audio device to use (built-in loudspeakers and microphone, headsets, or handset)."
      },
      "id": 29260,
      "normPath": "Audio Select",
      "path": "Audio Select",
      "products": [
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Select which type of audio device to use (built-in loudspeakers and microphone, headsets, or handset).",
        "params": [
          {
            "description": "Choose whether to use the built-in loudspeakers and microphone (internal), a Bluetooth® headset (Desk Pro and Desk Limited Edition only), an analog headset (Desk Pro and Desk Limited Edition only), a USB headset, or a USB handset.",
            "name": "Device",
            "required": true,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetUSB",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34032,
      "normPath": "Audio Select",
      "path": "Audio Select",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Device",
            "required": true,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetBluetooth",
                "HeadsetUSB",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ],
        "description": "Select which type of audio device to use (built-in loudspeakers and microphone, headsets, or handset)."
      },
      "id": 35109,
      "normPath": "Audio Select",
      "path": "Audio Select",
      "products": [
        "octavio"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove all local inputs and local outputs.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 28181,
      "normPath": "Audio Setup Clear",
      "path": "Audio Setup Clear",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command resets the audio setup of the video conferencing device (as set up using the Audio Console application or API commands). In effect it removes all local inputs and local outputs, sets connectors and groups back to their default values, and rebuilds the audio setup the same way as after a restart.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30674,
      "normPath": "Audio Setup Reset",
      "path": "Audio Setup Reset",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Play a specified audio sound.",
        "params": [
          {
            "default": "Off",
            "description": "Determines whether or not to loop the playout of the audio sound. The sound is looped by default. Irrespective of how this parameter is set, some of the sounds (Busy, CallWaiting, Dial, Ringing, and SpecialInfo) will play until the Audio Sound Stop command is issued.",
            "name": "Loop",
            "required": false,
            "valuespace": {
              "Values": [
                "Off",
                "On"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Choose which ringtone to play.",
            "name": "Sound",
            "required": true,
            "valuespace": {
              "Values": [
                "Alert",
                "Announcement",
                "Binding",
                "Bump",
                "Busy",
                "CallDisconnect",
                "CallInitiate",
                "CallWaiting",
                "Dial",
                "KeyInput",
                "KeyInputDelete",
                "KeyTone",
                "Nav",
                "NavBack",
                "Notification",
                "OK",
                "Pairing",
                "PresentationConnect",
                "Ringing",
                "SignIn",
                "SpecialInfo",
                "StartListening",
                "TelephoneCall",
                "VideoCall",
                "VolumeAdjust",
                "WakeUp"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31499,
      "normPath": "Audio Sound Play",
      "path": "Audio Sound Play",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "List all available ringtones. Use the xConfiguration Audio SoundsAndAlerts RingTone setting to choose a ringtone.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 26310,
      "normPath": "Audio SoundsAndAlerts Ringtone List",
      "path": "Audio SoundsAndAlerts Ringtone List",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Play one of the available ringtones. Use the xCommand Audio SoundsAndAlerts Ringtone List command to get a list of the available ringtones.",
        "params": [
          {
            "default": "Off",
            "description": "Repeats the chosen ringtone in a loop. To turn off the audio, use the Audio SoundsAndAlerts Ringtone Stop xCommand.",
            "name": "Loop",
            "required": false,
            "valuespace": {
              "Values": [
                "Off",
                "On"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The name of the ringtone.",
            "name": "RingTone",
            "required": true,
            "valuespace": {
              "MaxLength": "100",
              "MinLength": "1",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31500,
      "normPath": "Audio SoundsAndAlerts Ringtone Play",
      "path": "Audio SoundsAndAlerts Ringtone Play",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stops the chosen ringtone from playing. To start playing the ringtone again, use the Audio SoundsAndAlerts Ringtone Play xCommand.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 26312,
      "normPath": "Audio SoundsAndAlerts Ringtone Stop",
      "path": "Audio SoundsAndAlerts Ringtone Stop",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop playing audio sound.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 26309,
      "normPath": "Audio Sound Stop",
      "path": "Audio Sound Stop",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Runs a test that you can use to check that all the internal speakers are connected correctly. A test tone will be emitted from each speaker in sequence, from left to right. If the speakers don't play in correct order, reconnect the loudspeaker cables to obtain the correct sequence. All speakers are part of the test sequence, and you must be in the same room as the device to verify that the test sequence plays correctly. The device uses the connected microphones to listen for the test signal, and the result of the test is returned in the API.",
        "params": [
          {
            "default": "1",
            "description": "Test signal duration for each speaker in seconds.",
            "name": "MeasurementLength",
            "required": false,
            "valuespace": {
              "Max": "5",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "1",
            "description": "Test signal level.",
            "name": "Volume",
            "required": false,
            "valuespace": {
              "Max": "30",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31716,
      "normPath": "Audio SpeakerCheck",
      "path": "Audio SpeakerCheck",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Decrease the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset). By default, the volume is decreased by 5 steps (each step is 0.5 dB). Use the Steps parameter if you want to override the default behavior. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "default": "5",
            "description": "Choose the number of steps to decrease the volume with. One step is 0.5 dB.",
            "name": "Steps",
            "required": false,
            "valuespace": {
              "Max": "10",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31501,
      "normPath": "Audio Volume Decrease",
      "path": "Audio Volume Decrease",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Decrease the volume on the device. By default, the volume is decreased by 5 steps (each step is 0.5 dB). Use the Steps parameter if you want to override the default behavior.",
        "params": [
          {
            "default": "5",
            "description": "Choose the number of steps to decrease the volume with. One step is 0.5 dB.",
            "name": "Steps",
            "required": false,
            "valuespace": {
              "Max": "10",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31666,
      "normPath": "Audio Volume Decrease",
      "path": "Audio Volume Decrease",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Decrease the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset). By default, the volume is decreased by 5 steps (each step is 0.5 dB). Use the Steps parameter if you want to override the default behavior. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "description": "Choose whether to decrease the volume on the built-in loudspeakers, a USB headset, or a USB handset.",
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetUSB",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "5",
            "description": "Choose the number of steps to decrease the volume with. One step is 0.5 dB.",
            "name": "Steps",
            "required": false,
            "valuespace": {
              "Max": "10",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31763,
      "normPath": "Audio Volume Decrease",
      "path": "Audio Volume Decrease",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Decrease the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset). By default, the volume is decreased by 5 steps (each step is 0.5 dB). Use the Steps parameter if you want to override the default behavior. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetBluetooth",
                "HeadsetUSB",
                "HeadsetAnalog",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "5",
            "description": "Choose the number of steps to decrease the volume with. One step is 0.5 dB.",
            "name": "Steps",
            "required": false,
            "valuespace": {
              "Max": "10",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31816,
      "normPath": "Audio Volume Decrease",
      "path": "Audio Volume Decrease",
      "products": [
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Decrease the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset). By default, the volume is decreased by 5 steps (each step is 0.5 dB). Use the Steps parameter if you want to override the default behavior. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetBluetooth",
                "HeadsetUSB",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "5",
            "description": "Choose the number of steps to decrease the volume with. One step is 0.5 dB.",
            "name": "Steps",
            "required": false,
            "valuespace": {
              "Max": "10",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35110,
      "normPath": "Audio Volume Decrease",
      "path": "Audio Volume Decrease",
      "products": [
        "octavio"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Increase the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset). By default, the volume is increased by 5 steps (each step is 0.5 dB). Use the Steps parameter if you want to override the default behavior. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "default": "5",
            "description": "Choose the number of steps to increase the volume with. One step is 0.5 dB.",
            "name": "Steps",
            "required": false,
            "valuespace": {
              "Max": "10",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31502,
      "normPath": "Audio Volume Increase",
      "path": "Audio Volume Increase",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Increase the volume on the video conferencing device. By default, the volume is increased by 5 steps (each step is 0.5 dB). Use the Steps parameter if you want to override the default behavior.",
        "params": [
          {
            "default": "5",
            "description": "Choose the number of steps to increase the volume with. One step is 0.5 dB.",
            "name": "Steps",
            "required": false,
            "valuespace": {
              "Max": "10",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31667,
      "normPath": "Audio Volume Increase",
      "path": "Audio Volume Increase",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Increase the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset). By default, the volume is increased by 5 steps (each step is 0.5 dB). Use the Steps parameter if you want to override the default behavior. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "description": "Choose whether to increase the volume on the built-in loudspeakers, a USB headset, or a USB handset.",
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetUSB",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "5",
            "description": "Choose the number of steps to increase the volume with. One step is 0.5 dB.",
            "name": "Steps",
            "required": false,
            "valuespace": {
              "Max": "10",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31764,
      "normPath": "Audio Volume Increase",
      "path": "Audio Volume Increase",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Increase the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset). By default, the volume is increased by 5 steps (each step is 0.5 dB). Use the Steps parameter if you want to override the default behavior. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetBluetooth",
                "HeadsetUSB",
                "HeadsetAnalog",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "5",
            "description": "Choose the number of steps to increase the volume with. One step is 0.5 dB.",
            "name": "Steps",
            "required": false,
            "valuespace": {
              "Max": "10",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31817,
      "normPath": "Audio Volume Increase",
      "path": "Audio Volume Increase",
      "products": [
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Increase the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset). By default, the volume is increased by 5 steps (each step is 0.5 dB). Use the Steps parameter if you want to override the default behavior. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetBluetooth",
                "HeadsetUSB",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "5",
            "description": "Choose the number of steps to increase the volume with. One step is 0.5 dB.",
            "name": "Steps",
            "required": false,
            "valuespace": {
              "Max": "10",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35111,
      "normPath": "Audio Volume Increase",
      "path": "Audio Volume Increase",
      "products": [
        "octavio"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Mute the volume on the selected audio unit (built-in loudspeakers, headsets, or handset). Refer to the xStatus Audio SelectedDevice and xCommand Audio Select commands for more information about the selected audio unit.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26315,
      "normPath": "Audio Volume Mute",
      "path": "Audio Volume Mute",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Mute the volume on the video conferencing device.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30677,
      "normPath": "Audio Volume Mute",
      "path": "Audio Volume Mute",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Mute the volume on the selected audio unit (built-in loudspeakers, headsets, or handset). Refer to the xStatus Audio SelectedDevice and xCommand Audio Select commands for more information about the selected audio unit.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30888,
      "normPath": "Audio Volume Mute",
      "path": "Audio Volume Mute",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset) to a specified level. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "description": "Select the gain level. 70 equals 0 dB gain, and 100 equals 15 dB gain.",
            "name": "Level",
            "required": true,
            "valuespace": {
              "Max": "100",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31503,
      "normPath": "Audio Volume Set",
      "path": "Audio Volume Set",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the volume on the video conferencing device to a specified level.",
        "params": [
          {
            "description": "Select the gain level. 70 equals 0 dB gain, and 100 equals 15 dB gain.",
            "name": "Level",
            "required": true,
            "valuespace": {
              "Max": "100",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31668,
      "normPath": "Audio Volume Set",
      "path": "Audio Volume Set",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset) to a specified level. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "description": "Choose whether to set the volume on the built-in loudspeakers, a USB headset, or a USB handset.",
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetUSB",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the gain level. 70 equals 0 dB gain, and 100 equals 15 dB gain.",
            "name": "Level",
            "required": true,
            "valuespace": {
              "Max": "100",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31765,
      "normPath": "Audio Volume Set",
      "path": "Audio Volume Set",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset) to a specified level. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetBluetooth",
                "HeadsetUSB",
                "HeadsetAnalog",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the gain level. 70 equals 0 dB gain, and 100 equals 15 dB gain.",
            "name": "Level",
            "required": true,
            "valuespace": {
              "Max": "100",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31818,
      "normPath": "Audio Volume Set",
      "path": "Audio Volume Set",
      "products": [
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset) to a specified level. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetBluetooth",
                "HeadsetUSB",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the gain level. 70 equals 0 dB gain, and 100 equals 15 dB gain.",
            "name": "Level",
            "required": true,
            "valuespace": {
              "Max": "100",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35112,
      "normPath": "Audio Volume Set",
      "path": "Audio Volume Set",
      "products": [
        "octavio"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset) to the default level as defined in the xConfiguration Audio DefaultVolume setting. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26317,
      "normPath": "Audio Volume SetToDefault",
      "path": "Audio Volume SetToDefault",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the volume to the default level that is defined in the xConfiguration Audio DefaultVolume setting.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 28187,
      "normPath": "Audio Volume SetToDefault",
      "path": "Audio Volume SetToDefault",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset) to the default level as defined in the xConfiguration Audio DefaultVolume setting. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetBluetooth",
                "HeadsetUSB",
                "HeadsetAnalog",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 29264,
      "normPath": "Audio Volume SetToDefault",
      "path": "Audio Volume SetToDefault",
      "products": [
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset) to the default level as defined in the xConfiguration Audio DefaultVolume setting. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "description": "Choose whether to set the volume on the built-in loudspeakers, a USB headset, or a USB handset.",
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetUSB",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31766,
      "normPath": "Audio Volume SetToDefault",
      "path": "Audio Volume SetToDefault",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the volume on one of the video conferencing device's audio units (built-in loudspeakers, headsets, or handset) to the default level as defined in the xConfiguration Audio DefaultVolume setting. You can use the optional Device parameter to specify which audio unit to address. The most recently selected unit is chosen if you don't specify a unit (see xStatus Audio SelectedDevice). Also refer to xCommand Audio Select.",
        "params": [
          {
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "HeadsetBluetooth",
                "HeadsetUSB",
                "HandsetUSB"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35113,
      "normPath": "Audio Volume SetToDefault",
      "path": "Audio Volume SetToDefault",
      "products": [
        "octavio"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Toggle the loudspeaker between muted and unmuted.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26318,
      "normPath": "Audio Volume ToggleMute",
      "path": "Audio Volume ToggleMute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the volume on the device back on after muting.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30504,
      "normPath": "Audio Volume Unmute",
      "path": "Audio Volume Unmute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start a VU meter to show the audio signal level on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. The VU meter measures the input level for frequencies below 20 kHz.",
        "params": [
          {
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Off",
            "description": "The device can measure the pairing quality (value 0 to 100). With no other ultrasound sources in the same room this value will be high, but if there are other ultrasound sources in the same room the value will be low. To monitor the pairing quality, sign in to the device's web interface, navigate to Setup > Peripherals > Microphones and tick the Show Pairing Rate check box. Or, use the xFeedback and xEvents commands to monitor the value. Read more about the xFeedback and xEvents commands in the API introduction section in this guide.",
            "name": "IncludePairingQuality",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "100",
            "description": "Specifies the update interval in milliseconds of the VuMeter values. The values can be specified in 10 ms steps.",
            "name": "IntervalMs",
            "required": false,
            "valuespace": {
              "Max": "1000",
              "Min": "10",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "BeforeAEC",
            "description": "The \"Source\" parameter for the VU meter determines whether the VU meter responds to sounds played out by the loudspeaker system in the endpoint. By default the VU meter gets its source signal prior to AEC processing, which means that it will respond to sounds played out by the loudspeaker such as a local presentation audio track or remote participant voices. If the source is extracted after AEC processing then the VU meter will not respond to sounds that are played out through the loudspeaker system in the endpoint. ",
            "name": "Source",
            "required": false,
            "valuespace": {
              "Values": [
                "BeforeAEC",
                "AfterAEC"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33718,
      "normPath": "Audio VuMeter Start",
      "path": "Audio VuMeter Start",
      "products": [
        "bandai",
        "octavio"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start a VU meter to show the audio signal level on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. The VU meter measures the input level for frequencies below 20 kHz.",
        "params": [
          {
            "description": "Select a connector number.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Off",
            "description": "The device can measure the pairing quality (value 0 to 100). With no other ultrasound sources in the same room this value will be high, but if there are other ultrasound sources in the same room the value will be low. To monitor the pairing quality, sign in to the device's web interface, navigate to Setup > Peripherals > Microphones and tick the Show Pairing Rate check box. Or, use the xFeedback and xEvents commands to monitor the value. Read more about the xFeedback and xEvents commands in the API introduction section in this guide.",
            "name": "IncludePairingQuality",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "100",
            "description": "Specifies the update interval in milliseconds of the VuMeter values. The values can be specified in 10 ms steps.",
            "name": "IntervalMs",
            "required": false,
            "valuespace": {
              "Max": "1000",
              "Min": "10",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "BeforeAEC",
            "description": "The \"Source\" parameter for the VU meter determines whether the VU meter responds to sounds played out by the loudspeaker system in the endpoint. By default the VU meter gets its source signal prior to AEC processing, which means that it will respond to sounds played out by the loudspeaker such as a local presentation audio track or remote participant voices. If the source is extracted after AEC processing then the VU meter will not respond to sounds that are played out through the loudspeaker system in the endpoint. ",
            "name": "Source",
            "required": false,
            "valuespace": {
              "Values": [
                "BeforeAEC",
                "AfterAEC"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33916,
      "normPath": "Audio VuMeter Start",
      "path": "Audio VuMeter Start",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start a VU meter to show the audio signal level on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. The VU meter measures the input level for frequencies below 20 kHz.",
        "params": [
          {
            "description": "Select a connector number.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "24",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone",
                "Ethernet"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Off",
            "description": "The device can measure the pairing quality (value 0 to 100). With no other ultrasound sources in the same room this value will be high, but if there are other ultrasound sources in the same room the value will be low. To monitor the pairing quality, sign in to the device's web interface, navigate to Setup > Peripherals > Microphones and tick the Show Pairing Rate check box. Or, use the xFeedback and xEvents commands to monitor the value. Read more about the xFeedback and xEvents commands in the API introduction section in this guide.",
            "name": "IncludePairingQuality",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "100",
            "description": "Specifies the update interval in milliseconds of the VuMeter values. The values can be specified in 10 ms steps.",
            "name": "IntervalMs",
            "required": false,
            "valuespace": {
              "Max": "1000",
              "Min": "10",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "BeforeAEC",
            "description": "The \"Source\" parameter for the VU meter determines whether the VU meter responds to sounds played out by the loudspeaker system in the endpoint. By default the VU meter gets its source signal prior to AEC processing, which means that it will respond to sounds played out by the loudspeaker such as a local presentation audio track or remote participant voices. If the source is extracted after AEC processing then the VU meter will not respond to sounds that are played out through the loudspeaker system in the endpoint. ",
            "name": "Source",
            "required": false,
            "valuespace": {
              "Values": [
                "BeforeAEC",
                "AfterAEC"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34008,
      "normPath": "Audio VuMeter Start",
      "path": "Audio VuMeter Start",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start a VU meter to show the audio signal level on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. The VU meter measures the input level for frequencies below 20 kHz.",
        "params": [
          {
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "5",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "MicArray",
                "Microphone"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Off",
            "description": "The device can measure the pairing quality (value 0 to 100). With no other ultrasound sources in the same room this value will be high, but if there are other ultrasound sources in the same room the value will be low. To monitor the pairing quality, sign in to the device's web interface, navigate to Setup > Peripherals > Microphones and tick the Show Pairing Rate check box. Or, use the xFeedback and xEvents commands to monitor the value. Read more about the xFeedback and xEvents commands in the API introduction section in this guide.",
            "name": "IncludePairingQuality",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "100",
            "description": "Specifies the update interval in milliseconds of the VuMeter values. The values can be specified in 10 ms steps.",
            "name": "IntervalMs",
            "required": false,
            "valuespace": {
              "Max": "1000",
              "Min": "10",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "BeforeAEC",
            "description": "The \"Source\" parameter for the VU meter determines whether the VU meter responds to sounds played out by the loudspeaker system in the endpoint. By default the VU meter gets its source signal prior to AEC processing, which means that it will respond to sounds played out by the loudspeaker such as a local presentation audio track or remote participant voices. If the source is extracted after AEC processing then the VU meter will not respond to sounds that are played out through the loudspeaker system in the endpoint. ",
            "name": "Source",
            "required": false,
            "valuespace": {
              "Values": [
                "BeforeAEC",
                "AfterAEC"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34023,
      "normPath": "Audio VuMeter Start",
      "path": "Audio VuMeter Start",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start a VU meter to show the audio signal level on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. The VU meter measures the input level for frequencies below 20 kHz.",
        "params": [
          {
            "description": "Select a connector number. Microphone [1] is the built-in microphone.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Off",
            "description": "The device can measure the pairing quality (value 0 to 100). With no other ultrasound sources in the same room this value will be high, but if there are other ultrasound sources in the same room the value will be low. To monitor the pairing quality, sign in to the device's web interface, navigate to Setup > Peripherals > Microphones and tick the Show Pairing Rate check box. Or, use the xFeedback and xEvents commands to monitor the value. Read more about the xFeedback and xEvents commands in the API introduction section in this guide.",
            "name": "IncludePairingQuality",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "100",
            "description": "Specifies the update interval in milliseconds of the VuMeter values. The values can be specified in 10 ms steps.",
            "name": "IntervalMs",
            "required": false,
            "valuespace": {
              "Max": "1000",
              "Min": "10",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "BeforeAEC",
            "description": "The \"Source\" parameter for the VU meter determines whether the VU meter responds to sounds played out by the loudspeaker system in the endpoint. By default the VU meter gets its source signal prior to AEC processing, which means that it will respond to sounds played out by the loudspeaker such as a local presentation audio track or remote participant voices. If the source is extracted after AEC processing then the VU meter will not respond to sounds that are played out through the loudspeaker system in the endpoint. ",
            "name": "Source",
            "required": false,
            "valuespace": {
              "Values": [
                "BeforeAEC",
                "AfterAEC"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34033,
      "normPath": "Audio VuMeter Start",
      "path": "Audio VuMeter Start",
      "products": [
        "havella"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start a VU meter to show the audio signal level on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. The VU meter measures the input level for frequencies below 20 kHz.",
        "params": [
          {
            "description": "Select a connector number. Microphone [1] is the built-in microphone, and Microphone [2..3] are microphones connected to the mini-jack input connectors.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Off",
            "description": "The device can measure the pairing quality (value 0 to 100). With no other ultrasound sources in the same room this value will be high, but if there are other ultrasound sources in the same room the value will be low. To monitor the pairing quality, sign in to the device's web interface, navigate to Setup > Peripherals > Microphones and tick the Show Pairing Rate check box. Or, use the xFeedback and xEvents commands to monitor the value. Read more about the xFeedback and xEvents commands in the API introduction section in this guide.",
            "name": "IncludePairingQuality",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "100",
            "description": "Specifies the update interval in milliseconds of the VuMeter values. The values can be specified in 10 ms steps.",
            "name": "IntervalMs",
            "required": false,
            "valuespace": {
              "Max": "1000",
              "Min": "10",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "BeforeAEC",
            "description": "The \"Source\" parameter for the VU meter determines whether the VU meter responds to sounds played out by the loudspeaker system in the endpoint. By default the VU meter gets its source signal prior to AEC processing, which means that it will respond to sounds played out by the loudspeaker such as a local presentation audio track or remote participant voices. If the source is extracted after AEC processing then the VU meter will not respond to sounds that are played out through the loudspeaker system in the endpoint. ",
            "name": "Source",
            "required": false,
            "valuespace": {
              "Values": [
                "BeforeAEC",
                "AfterAEC"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34050,
      "normPath": "Audio VuMeter Start",
      "path": "Audio VuMeter Start",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop the VU meter on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector.",
        "params": [
          {
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31505,
      "normPath": "Audio VuMeter Stop",
      "path": "Audio VuMeter Stop",
      "products": [
        "bandai",
        "octavio"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop the VU meter on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector.",
        "params": [
          {
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "MicArray",
                "Microphone"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31732,
      "normPath": "Audio VuMeter Stop",
      "path": "Audio VuMeter Stop",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop the VU meter on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector.",
        "params": [
          {
            "description": "Select a connector number.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33917,
      "normPath": "Audio VuMeter Stop",
      "path": "Audio VuMeter Stop",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop the VU meter on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector.",
        "params": [
          {
            "description": "Select a connector number.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "24",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone",
                "Ethernet"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34015,
      "normPath": "Audio VuMeter Stop",
      "path": "Audio VuMeter Stop",
      "products": [
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop the VU meter on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector.",
        "params": [
          {
            "description": "Select a connector number. Microphone [1] is the built-in microphone.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34034,
      "normPath": "Audio VuMeter Stop",
      "path": "Audio VuMeter Stop",
      "products": [
        "havella"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop the VU meter on the specified connector. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector.",
        "params": [
          {
            "description": "Select a connector number. Microphone [1] is the built-in microphone, and Microphone [2..3] are microphones connected to the mini-jack input connectors.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type.",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34051,
      "normPath": "Audio VuMeter Stop",
      "path": "Audio VuMeter Stop",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop all VU meters.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26322,
      "normPath": "Audio VuMeter StopAll",
      "path": "Audio VuMeter StopAll",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Book the meeting room for the specified period. If you don’t specify the start time and duration, the room will be booked from now on and for 30 minutes. This command is only available for devices that support the room scheduling feature, refer to the RoomScheduler Enabled setting.",
        "params": [
          {
            "description": "A unique identifier for the booking request. If this parameter is omitted, a booking request identifier will be assigned automatically.",
            "name": "BookingRequestUUID",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "1",
              "type": "String"
            }
          },
          {
            "default": "30",
            "description": "The duration of the meeting, in minutes.",
            "name": "Duration",
            "required": false,
            "valuespace": {
              "Max": "1440",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The start time of the meeting in the following UTC format: YYYY-MM-DDThh:mm:ssZ. Example: 2021-01-24T01:29:00Z.",
            "name": "StartTime",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The title or subject field in the calendar booking. It will also be displayed on screen in the today’s bookings list.",
            "name": "Title",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33719,
      "normPath": "Bookings Book",
      "path": "Bookings Book",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Clear the current stored list of bookings.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26335,
      "normPath": "Bookings Clear",
      "path": "Bookings Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove the meeting that is identified by the Id parameter (meeting id). Then the room becomes available for new bookings. This command is only available for devices that support the room scheduling feature, refer to the RoomScheduler Enabled setting.",
        "params": [
          {
            "name": "MeetingId",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "1",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33720,
      "normPath": "Bookings Delete",
      "path": "Bookings Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Get the booking information for a specific ID.",
        "params": [
          {
            "description": "A unique meeting identifier. It is assigned to the meeting by the calendar service backend. The meeting identifier is returned by the Bookings List command. Note that this is different from the booking request identifier (BookingRequestUUID) that is provided when issuing the Bookings Book command.",
            "name": "Id",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "1",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33721,
      "normPath": "Bookings Get",
      "path": "Bookings Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "List the stored bookings for the device. The list of booking details is received from the management system. All parameters are optional, and can be used to limit the search result. If no parameters are set, past, present and future bookings are all listed. To avoid listing bookings from yesterday and before, use DayOffset = 0.",
        "params": [
          {
            "default": "0",
            "description": "Which day to start the search from (today: 0, tomorrow: 1, …).",
            "name": "DayOffset",
            "required": false,
            "valuespace": {
              "Max": "365",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Number of days to retrieve bookings from.",
            "name": "Days",
            "required": false,
            "valuespace": {
              "Max": "365",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Max number of bookings to list.",
            "name": "Limit",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "0",
            "description": "Offset number of bookings for this search.",
            "name": "Offset",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33722,
      "normPath": "Bookings List",
      "path": "Bookings List",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sets notifications for the stored bookings in this device to snooze.",
        "params": [
          {
            "default": "",
            "description": "The ID of the notification snooze setting.",
            "name": "Id",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "300",
            "description": "The duration of the snooze period, in seconds.",
            "name": "SecondsToSnooze",
            "required": false,
            "valuespace": {
              "Max": "3600",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31508,
      "normPath": "Bookings NotificationSnooze",
      "path": "Bookings NotificationSnooze",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command applies to devices that are either registered to the Webex cloud service or registered to an on-premises service and linked to Webex Edge for Devices. NOTE: This API has special terms and conditions, please refer to the “About the API – Terms and Conditions” section. Replace the list of stored bookings. This is a multiline command, with with details of the stored bookings as payload. The meeting information is provided in JSON format. For example: {  \"Bookings\": [   {    \"Id\": \"1\",    \"Number\": \"number@example.com\",    \"Organizer\": {     \"Name\": \"John Doe\"    },    \"Protocol\": \"SIP\",    \"Time\": {     \"Duration\": 60,     \"EndTimeBuffer\": 50,     \"StartTime\": \"2024-06-04T08:40:42.300000000Z\"    },    \"Title\": \"Booking Title\"   }  ] }  The JSON structure supports the following fields: { { \"Id\", \"id\" }, { \"MeetingId\", \"MyMeeting\" }, { \"Agenda\", \"MyAgenda\" }, { \"Title\", \"MyBookingTitle\" }, { \"Privacy\", “Private/Public” }, { \"Protocol\", \"SIP/H323/ISDN/IP/Spark\" }, { \"MetaInfo\", \"....\" }, { \"Time\", {    { \"StartTime\", \"2020-06-10T09:31:42Z\"},    { \"Duration\", 60 },    { \"StartTimeBuffer\", 300 },    { \"EndTimeBuffer\", 0 }, }}, { \"Organizer\", {    { \"Name\", \"John Doe\" },    { \"Email\", \"johndoe@example.com\" },    { \"Id\", \"\" }, }}, { \"Number\", \"number@example.com\" }, { \"CallType\", \"Audio/Video\" }, { \"Encryption\", \"On/Off\" } }  The required fields are: Id, Title, Number, Protocol, Organizer/Name, Time/StartTime, and Time/Duration. StartTime: The meeting start time in UTC/Zulu time. Duration: Meeting duration in minutes. StartTimeBuffer: The number of seconds before the meeting start time that people can join the meeting. EndTimeBuffer: The number of seconds longer than the scheduled hours (StartTime + Duration) that the meeting can last. Number: This is the number that will be dialed. ",
        "multiline": "True",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 33723,
      "normPath": "Bookings Put",
      "path": "Bookings Put",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "MeetingId",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "1",
              "type": "String"
            }
          },
          {
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Accept",
                "Decline"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35076,
      "normPath": "Bookings Respond",
      "path": "Bookings Respond",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Accept an incoming call. If no CallId is specified, all incoming calls are accepted.",
        "params": [
          {
            "default": "0",
            "description": "The CallID is returned when the xCommand Dial command is run. During the call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31509,
      "normPath": "Call Accept",
      "path": "Call Accept",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Disconnect a call.",
        "params": [
          {
            "default": "0",
            "description": "The CallID is returned when the xCommand Dial command is run. During the call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31511,
      "normPath": "Call Disconnect",
      "path": "Call Disconnect",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Send DTMF tones to the far end.",
        "params": [
          {
            "default": "-1",
            "description": "The CallID is returned when the xCommand Dial command is run. During the call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Enter the DTMF string.",
            "name": "DTMFString",
            "required": true,
            "valuespace": {
              "MaxLength": "32",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "Audible",
            "description": "Silence or make audible the tones that are provided as feedback when keys are entered during a call (such as are heard when entering a password).",
            "name": "Feedback",
            "required": false,
            "valuespace": {
              "Values": [
                "Audible",
                "Silent"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33724,
      "normPath": "Call DTMFSend",
      "path": "Call DTMFSend",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Move the far end camera (the remote camera). This command can be issued from a device that is participating in a call and can be used to control the camera of another device within the same call. Speakertrack must be disabled on the far end camera. Once the Move command is issued, the far end camera will continue to move in the specified direction until the stop command (ref: xCommand FarEndControl Camera Stop) is issued. For on-premises and CMS, this command accesses the camera of the active speaker. For cloud, this command accesses the camera of the specified participant. An additional constraint is that you cannot control the camera of a cloud-based personal mode device. This is for privacy reasons (i.e., home office).",
        "params": [
          {
            "default": "-1",
            "description": "The CallId is a unique number used to address an active call. You can get the callId during the call, by running xStatus Call from one of the devices participating in the call.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "(Cloud only) The ParticipantId is a unique number used to address a participant in a call. ParticipantId is ignored for on-premises or CMS, as these always control the camera of the active speaker. The ParticipantId is not needed if there are only 2 participants in a call, as it is implied. To see the ParticipantIds for participants in a call, you can run the xCommand Conference ParticipantList Search. Scan the list for the participant and use the subfield, \"ParticipantId\". During the call, you can  run the xCommand Call FarEndControl RequestCapabilities to check if Far End Camera Control is supported.",
            "name": "ParticipantId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Select the action for how to move the camera.",
            "name": "Value",
            "required": true,
            "valuespace": {
              "Values": [
                "Left",
                "Right",
                "Up",
                "Down",
                "ZoomIn",
                "ZoomOut"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33725,
      "normPath": "Call FarEndControl Camera Move",
      "path": "Call FarEndControl Camera Move",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop the far end camera after the xCommand FarEndControl Camera Move has been issued. This command can be issued from a device that is participating in a call and can be used to control the camera of another device within the same call. Speakertrack must be disabled on the far end camera. For on-premises and CMS, this command accesses the camera of the active speaker. For cloud, this command accesses the camera of the specified participant. An additional constraint is that you cannot control the camera of a cloud-based personal mode device. This is for privacy reasons (i.e., home office).",
        "params": [
          {
            "default": "-1",
            "description": "The CallId is a unique number used to address an active call. You can get the callId during the call, by running xStatus Call from one of the devices participating in the call.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "(Cloud only) The ParticipantId is a unique number used to address a participant in a call. ParticipantId is ignored for on-premises or CMS, as these always control the camera of the active speaker. The ParticipantId is not needed if there are only 2 participants in a call, as it is implied. To see the ParticipantIds for participants in a call, you can run the xCommand Conference ParticipantList Search. Scan the list for the participant and use the subfield, \"ParticipantId\". During the call, you can  run the xCommand Call FarEndControl RequestCapabilities to check if Far End Camera Control is supported.",
            "name": "ParticipantId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33726,
      "normPath": "Call FarEndControl Camera Stop",
      "path": "Call FarEndControl Camera Stop",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Send a request to find out what capabilities a far end camera has for remote control. This command can be issued from a device that is participating in a call and can be used to control the camera of another device within the same call. For on-premises and CMS, this command accesses the camera of the active speaker. For cloud, this command accesses the camera of the specified participant. An additional constraint is that you cannot control the camera of a cloud-based personal mode device. This is for privacy reasons (i.e., home office).",
        "params": [
          {
            "default": "-1",
            "description": "The CallId is a unique number used to address an active call. You can get the callId during the call, by running xStatus Call from one of the devices participating in the call.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "(Cloud only) The ParticipantId is a unique number used to address a participant in a call. ParticipantId is ignored for on-premises or CMS, as these always control the camera of the active speaker. The ParticipantId is not needed if there are only 2 participants in a call, as it is implied. To see the ParticipantIds for participants in a call, you can run the xCommand Conference ParticipantList Search. Scan the list for the participant and use the subfield, \"ParticipantId\". During the call, you can  run the xCommand Call FarEndControl RequestCapabilities to check if Far End Camera Control is supported.",
            "name": "ParticipantId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33727,
      "normPath": "Call FarEndControl RequestCapabilities",
      "path": "Call FarEndControl RequestCapabilities",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "While in a call, this command is used to activate a preset on the far end device. The preset covers the far end device's camera positions and input video switcher settings. The preset must be stored on the far end device beforehand, either by using the xCommand Preset Store command locally on the far end device, or by using the xCommand FarEndControl Preset Store command from a remote device. Note: The far end device's xConfiguration Conference FarEndControl Mode setting must be switched On for the FarEndControl commands to work. ",
        "params": [
          {
            "default": "-1",
            "description": "The CallId is required to identify the far end device only when in a Multipoint call. The CallId is returned when issuing the xCommand Dial command. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "(Cloud only) The ParticipantId is a unique number used to address a participant in a call. ParticipantId is ignored for on-premises or CMS, as these always control the camera of the active speaker. The ParticipantId is not needed if there are only 2 participants in a call, as it is implied. To see the ParticipantIds for participants in a call, you can run the xCommand Conference ParticipantList Search. Scan the list for the participant and use the subfield, \"ParticipantId\". During the call, you can  run the xCommand Call FarEndControl RequestCapabilities to check if Far End Camera Control is supported.",
            "name": "ParticipantId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The ID of the preset that is stored on the far end device.",
            "name": "PresetId",
            "required": true,
            "valuespace": {
              "Max": "15",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33728,
      "normPath": "Call FarEndControl RoomPreset Activate",
      "path": "Call FarEndControl RoomPreset Activate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "While in a call, this command is used to store a preset on the far end device. The preset covers the far end device's camera positions and input video switcher settings. Note: The far end device's xConfiguration Conference FarEndControl Mode setting must be switched On for the FarEndControl commands to work.",
        "params": [
          {
            "default": "-1",
            "description": "The CallId is required to identify the far end device only when in a Multipoint call. The CallId is returned when issuing the xCommand Dial command. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "(Cloud only) The ParticipantId is a unique number used to address a participant in a call. ParticipantId is ignored for on-premises or CMS, as these always control the camera of the active speaker. The ParticipantId is not needed if there are only 2 participants in a call, as it is implied. To see the ParticipantIds for participants in a call, you can run the xCommand Conference ParticipantList Search. Scan the list for the participant and use the subfield, \"ParticipantId\". During the call, you can  run the xCommand Call FarEndControl RequestCapabilities to check if Far End Camera Control is supported.",
            "name": "ParticipantId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The ID of the preset that is stored on the far end device.",
            "name": "PresetId",
            "required": true,
            "valuespace": {
              "Max": "15",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33729,
      "normPath": "Call FarEndControl RoomPreset Store",
      "path": "Call FarEndControl RoomPreset Store",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Select which video input source to use as the main source on the far end device. This command can be issued from a device that is participating in a call and can be used to select the source for another device within the same call. For on-premises and CMS, this command selects the source for the active speaker. For cloud, this command selects the source of the specified participant. An additional constraint is that you cannot control the source of a cloud-based personal mode device. This is for privacy reasons (i.e., home office).",
        "params": [
          {
            "default": "-1",
            "description": "The CallId is required to identify the far end device only when in a Multipoint call. The CallId is returned when issuing the xCommand Dial command. You can get the callId during the call, by running xStatus Call from one of the devices participating in the call.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "(Cloud only) The ParticipantId is a unique number used to address a participant in a call. ParticipantId is ignored for on-premises or CMS, as these always control the device of the active speaker. The ParticipantId is not needed if there are only 2 participants in a call, as it is implied. To see the ParticipantIds for participants in a call, you can run the xCommand Conference ParticipantList Search. Scan the list for the participant and use the subfield, \"ParticipantId\". During the call, you can  run the xCommand Call FarEndControl RequestCapabilities to check if Far End Camera Control is supported.",
            "name": "ParticipantId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Select a video input source on the far end.",
            "name": "SourceId",
            "required": true,
            "valuespace": {
              "Max": "15",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33730,
      "normPath": "Call FarEndControl Source Select",
      "path": "Call FarEndControl Source Select",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Send data between two codecs in a point-to-point call, for use with control systems or macros.  Works with SIP calls only. Requires that the Conference FarEndMessage Mode is set to On.",
        "params": [
          {
            "description": "The CallID is returned when the xCommand Dial command is run. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Enter the message to be sent to the far end.",
            "name": "Text",
            "required": true,
            "valuespace": {
              "MaxLength": "1450",
              "MinLength": "1",
              "type": "String"
            }
          },
          {
            "description": "Enter the message type to be sent to the far end.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31516,
      "normPath": "Call FarEndMessage Send",
      "path": "Call FarEndMessage Send",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Specifies what number or URI you want to forward your incoming calls to. The display name is a local reference for the forwarded destination. A message, together with the local reference, is shown on screen when you have configured the device to forward all calls.",
        "params": [
          {
            "description": "The local reference for the forwarded destination.",
            "name": "DisplayName",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The directory number or URI which you want to forward the incoming calls to.",
            "name": "Number",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31517,
      "normPath": "Call Forward",
      "path": "Call Forward",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Turns off the missed calls indicator on the touch controller for all missed calls.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 28188,
      "normPath": "CallHistory AcknowledgeAllMissedCalls",
      "path": "CallHistory AcknowledgeAllMissedCalls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Turns off the missed calls indicator on the touch controller for the specified call.",
        "params": [
          {
            "default": "False",
            "description": "You can include or exclude all surrounding calls with duplicate information.",
            "name": "AcknowledgeConsecutiveDuplicates",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "CallHistoryId for the call in question. Run xCommand CallHistory Get to get the id number.",
            "name": "CallHistoryId",
            "required": true,
            "valuespace": {
              "Max": "2147483647",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31595,
      "normPath": "CallHistory AcknowledgeMissedCall",
      "path": "CallHistory AcknowledgeMissedCall",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deletes all information on previous calls.",
        "params": [
          {
            "default": "All",
            "description": "You can filter which calls to delete.",
            "name": "Filter",
            "required": false,
            "valuespace": {
              "Values": [
                "All",
                "Missed",
                "Placed",
                "Received"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31596,
      "normPath": "CallHistory DeleteAll",
      "path": "CallHistory DeleteAll",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deletes all information on the specified call.",
        "params": [
          {
            "description": "CallHistoryId for the call in question. Run xCommand CallHistory Get to get the id number.",
            "name": "CallHistoryId",
            "required": true,
            "valuespace": {
              "Max": "2147483647",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "False",
            "description": "You can delete the surrounding calls with duplicate information or not.",
            "name": "DeleteConsecutiveDuplicates",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31597,
      "normPath": "CallHistory DeleteEntry",
      "path": "CallHistory DeleteEntry",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Retrieve all information on previous calls made on the device.",
        "params": [
          {
            "description": "CallHistoryId for the call in question.",
            "name": "CallHistoryId",
            "required": false,
            "valuespace": {
              "Max": "2147483647",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "Basic",
            "description": "Sets the level of detail for the information on these calls.",
            "name": "DetailLevel",
            "required": false,
            "valuespace": {
              "Values": [
                "Basic",
                "Full"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "All",
            "description": "You can filter which calls to retrieve. Pmr refers to a personal meeting room.",
            "name": "Filter",
            "required": false,
            "valuespace": {
              "Values": [
                "All",
                "Missed",
                "AnsweredElsewhere",
                "Forwarded",
                "Placed",
                "NoAnswer",
                "Received",
                "Rejected",
                "UnacknowledgedMissed",
                "Pmr"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "65534",
            "description": "Defines the amount of calls in the output.",
            "name": "Limit",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "0",
            "description": "Sets the call from which to start.",
            "name": "Offset",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "Allows you to set the command to apply to a specified display name or call back number.",
            "name": "SearchString",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31598,
      "normPath": "CallHistory Get",
      "path": "CallHistory Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Retrieve aggregated information on previous calls made on the device.",
        "params": [
          {
            "default": "Basic",
            "description": "Sets the level of detail for the information on these calls.",
            "name": "DetailLevel",
            "required": false,
            "valuespace": {
              "Values": [
                "Basic",
                "Full"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "All",
            "description": "You can filter which calls to retrieve. Pmr refers to a personal meeting room.",
            "name": "Filter",
            "required": false,
            "valuespace": {
              "Values": [
                "All",
                "Missed",
                "AnsweredElsewhere",
                "Forwarded",
                "Placed",
                "NoAnswer",
                "Received",
                "Rejected",
                "UnacknowledgedMissed",
                "Pmr"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "65534",
            "description": "Defines the amount of calls in the output.",
            "name": "Limit",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "0",
            "description": "Sets the call from which to start.",
            "name": "Offset",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "OccurrenceTime",
            "description": "Define the order in which the previous calls are presented.",
            "name": "Order",
            "required": false,
            "valuespace": {
              "Values": [
                "OccurrenceTime",
                "OccurrenceFrequency"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "Allows you to set the command to apply to a specified display name or call back number.",
            "name": "SearchString",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31599,
      "normPath": "CallHistory Recents",
      "path": "CallHistory Recents",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Put a call on hold.",
        "params": [
          {
            "default": "0",
            "description": "The CallID is returned when the xCommand Dial command is run. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "Other",
            "description": "Internal usage only.",
            "name": "Reason",
            "required": false,
            "valuespace": {
              "Values": [
                "Conference",
                "Transfer",
                "Other"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31518,
      "normPath": "Call Hold",
      "path": "Call Hold",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Turns off the ringtone for the incoming call. The call can still be answered.",
        "params": [
          {
            "description": "The CallID is returned when the xCommand Dial command is run. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31519,
      "normPath": "Call Ignore",
      "path": "Call Ignore",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Internal usage only.",
        "params": [
          {
            "description": "You can have from 1 to 10 CallId parameters in the same command.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "multiple": "10",
              "type": "IntegerArray"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31520,
      "normPath": "Call Join",
      "path": "Call Join",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reject incoming call. If no call id is specified, all incoming calls are rejected.",
        "params": [
          {
            "default": "0",
            "description": "The CallID is returned when the xCommand Dial command is run. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31521,
      "normPath": "Call Reject",
      "path": "Call Reject",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Resume a call that have been put on hold.",
        "params": [
          {
            "default": "0",
            "description": "The CallID is returned when the xCommand Dial command is run. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31522,
      "normPath": "Call Resume",
      "path": "Call Resume",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Transfers an ongoing call to another participant. Fully supported for SIP calls only.",
        "params": [
          {
            "description": "The CallID is returned when the xCommand Dial command is run. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The number the call is transfered to.",
            "name": "Number",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31523,
      "normPath": "Call UnattendedTransfer",
      "path": "Call UnattendedTransfer",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "default": "All",
            "name": "Axis",
            "required": false,
            "valuespace": {
              "Values": [
                "All",
                "Focus",
                "PanTilt",
                "Zoom"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "description": "Reset the camera position to default position."
      },
      "id": 26356,
      "normPath": "Camera PositionReset",
      "path": "Camera PositionReset",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "default": "All",
            "name": "Axis",
            "required": false,
            "valuespace": {
              "Values": [
                "All",
                "Focus",
                "PanTilt",
                "Zoom"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "description": "Reset the camera position to default position."
      },
      "id": 29265,
      "normPath": "Camera PositionReset",
      "path": "Camera PositionReset",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reset the camera position to default position.",
        "params": [
          {
            "default": "All",
            "description": "Select which function to reset. If not specified all are reset.",
            "name": "Axis",
            "required": false,
            "valuespace": {
              "Values": [
                "All",
                "Focus",
                "PanTilt",
                "Zoom"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The ID of the camera preset you want to reset.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31669,
      "normPath": "Camera PositionReset",
      "path": "Camera PositionReset",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the camera position. If the combination of the pan, tilt, zoom, and roll values is not possible, the camera automatically adjusts the values to a valid combination.",
        "params": [
          {
            "description": "The ID of the camera preset you want to reset.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Focus the camera near or far.",
            "name": "Focus",
            "required": false,
            "valuespace": {
              "Max": "65535",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Set the camera's lens position. This parameter only applies to the Quad Camera and the integrated cameras in Room 55 Dual, Room 70, Room 70G2, Room 70 Panorama, and Room Panorama.",
            "name": "Lens",
            "required": false,
            "valuespace": {
              "Values": [
                "Wide",
                "Center",
                "Left",
                "Right"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Move the camera to the left or right. The unit is 1/100 degree, that is 100 corresponds to 1 degree. A positive value moves the camera to the left, and a negative value moves the camera to the right. Left and right refers to when looking from the back of the camera out into the room. This is the opposite of what is seen when looking at the camera lens from the room.",
            "name": "Pan",
            "required": false,
            "valuespace": {
              "Max": "17000",
              "Min": "-17000",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Move the camera up or down. The unit is 1/100 degree, that is 100 corresponds to 1 degree. A positive value tilts the camera up, and a negative value tilts the camera down.",
            "name": "Tilt",
            "required": false,
            "valuespace": {
              "Max": "9000",
              "Min": "-9000",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Zoom in or out. The unit is HFOV (horizontal field of view) in 1/100 degree, that is 100 corresponds to 1 degree. A low value corresponds to maximum zoom and the largest value corresponds to minimum zoom (full wide).",
            "name": "Zoom",
            "required": false,
            "valuespace": {
              "Max": "11800",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33731,
      "normPath": "Camera PositionSet",
      "path": "Camera PositionSet",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the camera position. If the combination of the pan, tilt, zoom, and roll values is not possible, the camera automatically adjusts the values to a valid combination.",
        "params": [
          {
            "description": "The ID of the camera preset you want to reset.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Focus the camera near or far.",
            "name": "Focus",
            "required": false,
            "valuespace": {
              "Max": "65535",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Set the camera's lens position. This parameter only applies to the Quad Camera and the integrated cameras in Room 55 Dual, Room 70, Room 70G2, Room 70 Panorama, and Room Panorama.",
            "name": "Lens",
            "required": false,
            "valuespace": {
              "Values": [
                "Wide",
                "Center",
                "Left",
                "Right"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Move the camera to the left or right. The unit is 1/100 degree, that is 100 corresponds to 1 degree. A positive value moves the camera to the left, and a negative value moves the camera to the right. Left and right refers to when looking from the back of the camera out into the room. This is the opposite of what is seen when looking at the camera lens from the room.",
            "name": "Pan",
            "required": false,
            "valuespace": {
              "Max": "17000",
              "Min": "-17000",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Move the camera up or down. The unit is 1/100 degree, that is 100 corresponds to 1 degree. A positive value tilts the camera up, and a negative value tilts the camera down.",
            "name": "Tilt",
            "required": false,
            "valuespace": {
              "Max": "9000",
              "Min": "-9000",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Zoom in or out. The unit is HFOV (horizontal field of view) in 1/100 degree, that is 100 corresponds to 1 degree. A low value corresponds to maximum zoom and the largest value corresponds to minimum zoom (full wide).",
            "name": "Zoom",
            "required": false,
            "valuespace": {
              "Max": "11800",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33867,
      "normPath": "Camera PositionSet",
      "path": "Camera PositionSet",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the camera position. If the combination of the pan, tilt, zoom, and roll values is not possible, the camera automatically adjusts the values to a valid combination.",
        "params": [
          {
            "description": "The ID of the camera preset you want to reset.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Focus the camera near or far.",
            "name": "Focus",
            "required": false,
            "valuespace": {
              "Max": "65535",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Set the camera's lens position. This parameter only applies to the Quad Camera and the integrated cameras in Room 55 Dual, Room 70, Room 70G2, Room 70 Panorama, and Room Panorama.",
            "name": "Lens",
            "required": false,
            "valuespace": {
              "Values": [
                "Wide",
                "Center",
                "Left",
                "Right"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Move the camera to the left or right. The unit is 1/100 degree, that is 100 corresponds to 1 degree. A positive value moves the camera to the left, and a negative value moves the camera to the right. Left and right refers to when looking from the back of the camera out into the room. This is the opposite of what is seen when looking at the camera lens from the room.",
            "name": "Pan",
            "required": false,
            "valuespace": {
              "Max": "17000",
              "Min": "-17000",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Rotate the camera view. The observed image rotates counterclockwise when the value is positive, and clockwise when the value is negative. The unit is 1/100 degree, that is 100 corresponds to 1 degree.",
            "name": "Roll",
            "required": false,
            "valuespace": {
              "Max": "300",
              "Min": "-300",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Move the camera up or down. The unit is 1/100 degree, that is 100 corresponds to 1 degree. A positive value tilts the camera up, and a negative value tilts the camera down.",
            "name": "Tilt",
            "required": false,
            "valuespace": {
              "Max": "9000",
              "Min": "-9000",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Zoom in or out. The unit is HFOV (horizontal field of view) in 1/100 degree, that is 100 corresponds to 1 degree. A low value corresponds to maximum zoom and the largest value corresponds to minimum zoom (full wide).",
            "name": "Zoom",
            "required": false,
            "valuespace": {
              "Max": "11800",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33918,
      "normPath": "Camera PositionSet",
      "path": "Camera PositionSet",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the camera position. If the combination of the pan, tilt, zoom, and roll values is not possible, the camera automatically adjusts the values to a valid combination.",
        "params": [
          {
            "description": "The ID of the camera preset you want to reset.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Focus the camera near or far.",
            "name": "Focus",
            "required": false,
            "valuespace": {
              "Max": "65535",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Set the camera's lens position. This parameter only applies to the Quad Camera and the integrated cameras in Room 55 Dual, Room 70, Room 70G2, Room 70 Panorama, and Room Panorama.",
            "name": "Lens",
            "required": false,
            "valuespace": {
              "Values": [
                "Wide",
                "Center",
                "Left",
                "Right"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Move the camera to the left or right. The unit is 1/100 degree, that is 100 corresponds to 1 degree. A positive value moves the camera to the left, and a negative value moves the camera to the right. Left and right refers to when looking from the back of the camera out into the room. This is the opposite of what is seen when looking at the camera lens from the room.",
            "name": "Pan",
            "required": false,
            "valuespace": {
              "Max": "17000",
              "Min": "-17000",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Move the camera up or down. The unit is 1/100 degree, that is 100 corresponds to 1 degree. A positive value tilts the camera up, and a negative value tilts the camera down.",
            "name": "Tilt",
            "required": false,
            "valuespace": {
              "Max": "9000",
              "Min": "-9000",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Zoom in or out. The unit is HFOV (horizontal field of view) in 1/100 degree, that is 100 corresponds to 1 degree. A low value corresponds to maximum zoom and the largest value corresponds to minimum zoom (full wide).",
            "name": "Zoom",
            "required": false,
            "valuespace": {
              "Max": "11800",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 34079,
      "normPath": "Camera PositionSet",
      "path": "Camera PositionSet",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Activate one of the stored camera presets. This command has no effect on speaker tracking. If speaker tracking is on, it will continue from the preset position. Note that the xCommand Camera Preset commands applies to an individual camera.",
        "params": [
          {
            "description": "The ID of the camera preset you want to activate.",
            "name": "PresetId",
            "required": true,
            "valuespace": {
              "Max": "35",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33732,
      "normPath": "Camera Preset Activate",
      "path": "Camera Preset Activate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sets the cameras to their default position, if one is defined. The default position is defined by xCommand Camera Preset Store or by xCommand Camera Preset Edit. Only one default position can be defined per camera. This command has no effect on speaker tracking. If speaker tracking is on, it will continue from the preset position.",
        "params": [
          {
            "description": "The ID of the camera preset you want to activate. If CameraId is not specified, all cameras will be set in their respective default position, if one is defined.",
            "name": "CameraId",
            "required": false,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33733,
      "normPath": "Camera Preset ActivateDefaultPosition",
      "path": "Camera Preset ActivateDefaultPosition",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sets the cameras to their default position, if one is defined. The default position is defined by xCommand Camera Preset Store or by xCommand Camera Preset Edit. Only one default position can be defined per camera. This command has no effect on speaker tracking. If speaker tracking is on, it will continue from the preset position.",
        "params": [
          {
            "description": "The ID of the camera preset you want to activate. If CameraId is not specified, all cameras will be set in their respective default position, if one is defined.",
            "name": "CameraId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33868,
      "normPath": "Camera Preset ActivateDefaultPosition",
      "path": "Camera Preset ActivateDefaultPosition",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sets the cameras to their default position, if one is defined. The default position is defined by xCommand Camera Preset Store or by xCommand Camera Preset Edit. Only one default position can be defined per camera. This command has no effect on speaker tracking. If speaker tracking is on, it will continue from the preset position.",
        "params": [
          {
            "description": "The ID of the camera preset you want to activate. If CameraId is not specified, all cameras will be set in their respective default position, if one is defined.",
            "name": "CameraId",
            "required": false,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33919,
      "normPath": "Camera Preset ActivateDefaultPosition",
      "path": "Camera Preset ActivateDefaultPosition",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Edit a stored camera preset. You can change the name of the camera preset and its position in the list that is returned by the xCommand Camera Preset List command. You can also change whether or not this preset is the default position for the associated camera. Note that the xCommand Camera Preset commands applies to an individual camera.",
        "params": [
          {
            "name": "DefaultPosition",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The position in the list returned by the xCommand Camera Preset List command.",
            "name": "ListPosition",
            "required": false,
            "valuespace": {
              "Max": "35",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The name of the camera preset. It will be used in the list returned by the xCommand Camera Preset List command.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The ID of the camera preset you want to edit.",
            "name": "PresetId",
            "required": true,
            "valuespace": {
              "Max": "35",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33734,
      "normPath": "Camera Preset Edit",
      "path": "Camera Preset Edit",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "List information about available camera presets. Note that the xCommand Camera Preset commands applies to an individual camera.",
        "params": [
          {
            "description": "Only list presets for the specified camera.",
            "name": "CameraId",
            "required": false,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": " List default positions only, or only those that are not default positions.",
            "name": "DefaultPosition",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33735,
      "normPath": "Camera Preset List",
      "path": "Camera Preset List",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "List information about available camera presets. Note that the xCommand Camera Preset commands applies to an individual camera.",
        "params": [
          {
            "description": "Only list presets for the specified camera.",
            "name": "CameraId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": " List default positions only, or only those that are not default positions.",
            "name": "DefaultPosition",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33869,
      "normPath": "Camera Preset List",
      "path": "Camera Preset List",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "List information about available camera presets. Note that the xCommand Camera Preset commands applies to an individual camera.",
        "params": [
          {
            "description": "Only list presets for the specified camera.",
            "name": "CameraId",
            "required": false,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": " List default positions only, or only those that are not default positions.",
            "name": "DefaultPosition",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33920,
      "normPath": "Camera Preset List",
      "path": "Camera Preset List",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove a camera preset. Note that the xCommand Camera Preset commands applies to an individual camera.",
        "params": [
          {
            "description": "The ID of the camera preset you want to remove.",
            "name": "PresetId",
            "required": true,
            "valuespace": {
              "Max": "35",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33736,
      "normPath": "Camera Preset Remove",
      "path": "Camera Preset Remove",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the preset details for the requested PresetId.",
        "params": [
          {
            "description": "The ID of the camera preset you wish to see.",
            "name": "PresetId",
            "required": true,
            "valuespace": {
              "Max": "35",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31530,
      "normPath": "Camera Preset Show",
      "path": "Camera Preset Show",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Store the current position (pan and tilt), zoom and focus of the chosen camera. The camera is identified by the CameraId parameter. Note that the xCommand Camera Preset commands applies to an individual camera. The xCommand Camera Preset commands are useful when you want to handle multiple camera positions individually per camera, rather than working with complete sets of camera positions. The individual camera presets are not available for far end control.",
        "params": [
          {
            "description": "Select the camera for which to store the preset position.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "DefaultPosition",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The new camera preset's position in the list returned by the xCommand Camera Preset List command.",
            "name": "ListPosition",
            "required": false,
            "valuespace": {
              "Max": "35",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The name of the new camera preset. It will be used in the list returned by the xCommand Camera Preset List command.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The ID of this camera preset. If not set explicitly, the codec will assign a preset ID automatically.",
            "name": "PresetId",
            "required": false,
            "valuespace": {
              "Max": "35",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Allow or disallow snapshot of the preview.",
            "name": "TakeSnapshot",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33737,
      "normPath": "Camera Preset Store",
      "path": "Camera Preset Store",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Store the current position (pan and tilt), zoom and focus of the chosen camera. The camera is identified by the CameraId parameter. Note that the xCommand Camera Preset commands applies to an individual camera. The xCommand Camera Preset commands are useful when you want to handle multiple camera positions individually per camera, rather than working with complete sets of camera positions. The individual camera presets are not available for far end control.",
        "params": [
          {
            "description": "Select the camera for which to store the preset position.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "DefaultPosition",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The new camera preset's position in the list returned by the xCommand Camera Preset List command.",
            "name": "ListPosition",
            "required": false,
            "valuespace": {
              "Max": "35",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The name of the new camera preset. It will be used in the list returned by the xCommand Camera Preset List command.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The ID of this camera preset. If not set explicitly, the codec will assign a preset ID automatically.",
            "name": "PresetId",
            "required": false,
            "valuespace": {
              "Max": "35",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Allow or disallow snapshot of the preview.",
            "name": "TakeSnapshot",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33870,
      "normPath": "Camera Preset Store",
      "path": "Camera Preset Store",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Store the current position (pan and tilt), zoom and focus of the chosen camera. The camera is identified by the CameraId parameter. Note that the xCommand Camera Preset commands applies to an individual camera. The xCommand Camera Preset commands are useful when you want to handle multiple camera positions individually per camera, rather than working with complete sets of camera positions. The individual camera presets are not available for far end control.",
        "params": [
          {
            "description": "Select the camera for which to store the preset position.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "DefaultPosition",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The new camera preset's position in the list returned by the xCommand Camera Preset List command.",
            "name": "ListPosition",
            "required": false,
            "valuespace": {
              "Max": "35",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The name of the new camera preset. It will be used in the list returned by the xCommand Camera Preset List command.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The ID of this camera preset. If not set explicitly, the codec will assign a preset ID automatically.",
            "name": "PresetId",
            "required": false,
            "valuespace": {
              "Max": "35",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Allow or disallow snapshot of the preview.",
            "name": "TakeSnapshot",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33921,
      "normPath": "Camera Preset Store",
      "path": "Camera Preset Store",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Move the camera in a specified direction. The camera moves at specified speed until a stop command is issued. In a daisy chain, you need to know the CameraId for the camera you want to address. Be aware that pan and tilt can be operated simultaneously, but no other combinations. In the latter case only the first operation specified is executed. For example, if you try to run both zoom and pan at the same time, only zoom is executed. NOTE: You must run a stop command to stop the camera, see the example below.",
        "params": [
          {
            "description": "Select the camera.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Focus the camera Far or Near, followed by Stop.",
            "name": "Focus",
            "required": false,
            "valuespace": {
              "Values": [
                "Far",
                "Near",
                "Stop"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Move the camera to the Left or Right, followed by Stop.",
            "name": "Pan",
            "required": false,
            "valuespace": {
              "Values": [
                "Left",
                "Right",
                "Stop"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Set the pan speed.",
            "name": "PanSpeed",
            "required": false,
            "valuespace": {
              "Max": "24",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Move the camera Up or Down, followed by Stop.",
            "name": "Tilt",
            "required": false,
            "valuespace": {
              "Values": [
                "Down",
                "Stop",
                "Up"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Set the tilt speed.",
            "name": "TiltSpeed",
            "required": false,
            "valuespace": {
              "Max": "24",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Zoom the camera In or Out, followed by Stop.",
            "name": "Zoom",
            "required": false,
            "valuespace": {
              "Values": [
                "In",
                "Out",
                "Stop"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Set the zoom speed.",
            "name": "ZoomSpeed",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31532,
      "normPath": "Camera Ramp",
      "path": "Camera Ramp",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Move the camera in a specified direction. The camera moves at specified speed until a stop command is issued. In a daisy chain, you need to know the CameraId for the camera you want to address. Be aware that pan and tilt can be operated simultaneously, but no other combinations. In the latter case only the first operation specified is executed. For example, if you try to run both zoom and pan at the same time, only zoom is executed. NOTE: You must run a stop command to stop the camera, see the example below.",
        "params": [
          {
            "description": "Select the camera.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Focus the camera Far or Near, followed by Stop.",
            "name": "Focus",
            "required": false,
            "valuespace": {
              "Values": [
                "Far",
                "Near",
                "Stop"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Move the camera to the Left or Right, followed by Stop.",
            "name": "Pan",
            "required": false,
            "valuespace": {
              "Values": [
                "Left",
                "Right",
                "Stop"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Set the pan speed.",
            "name": "PanSpeed",
            "required": false,
            "valuespace": {
              "Max": "24",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Move the camera Up or Down, followed by Stop.",
            "name": "Tilt",
            "required": false,
            "valuespace": {
              "Values": [
                "Down",
                "Stop",
                "Up"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Set the tilt speed.",
            "name": "TiltSpeed",
            "required": false,
            "valuespace": {
              "Max": "24",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Zoom the camera In or Out, followed by Stop.",
            "name": "Zoom",
            "required": false,
            "valuespace": {
              "Values": [
                "In",
                "Out",
                "Stop"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Set the zoom speed.",
            "name": "ZoomSpeed",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31674,
      "normPath": "Camera Ramp",
      "path": "Camera Ramp",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Move the camera in a specified direction. The camera moves at specified speed until a stop command is issued. In a daisy chain, you need to know the CameraId for the camera you want to address. Be aware that pan and tilt can be operated simultaneously, but no other combinations. In the latter case only the first operation specified is executed. For example, if you try to run both zoom and pan at the same time, only zoom is executed. NOTE: You must run a stop command to stop the camera, see the example below.",
        "params": [
          {
            "description": "Select the camera.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Focus the camera Far or Near, followed by Stop.",
            "name": "Focus",
            "required": false,
            "valuespace": {
              "Values": [
                "Far",
                "Near",
                "Stop"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Move the camera to the Left or Right, followed by Stop.",
            "name": "Pan",
            "required": false,
            "valuespace": {
              "Values": [
                "Left",
                "Right",
                "Stop"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Set the pan speed.",
            "name": "PanSpeed",
            "required": false,
            "valuespace": {
              "Max": "24",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Move the camera Up or Down, followed by Stop.",
            "name": "Tilt",
            "required": false,
            "valuespace": {
              "Values": [
                "Down",
                "Stop",
                "Up"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Set the tilt speed.",
            "name": "TiltSpeed",
            "required": false,
            "valuespace": {
              "Max": "24",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Zoom the camera In or Out, followed by Stop.",
            "name": "Zoom",
            "required": false,
            "valuespace": {
              "Values": [
                "In",
                "Out",
                "Stop"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Set the zoom speed.",
            "name": "ZoomSpeed",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31737,
      "normPath": "Camera Ramp",
      "path": "Camera Ramp",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start diagnostics on auto focus.",
        "params": [
          {
            "description": "Select which camera to diagnose.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 31676,
      "normPath": "Cameras AutoFocus Diagnostics Start",
      "path": "Cameras AutoFocus Diagnostics Start",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop diagnostics on auto focus.",
        "params": [
          {
            "description": "Select which camera to diagnose.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 31677,
      "normPath": "Cameras AutoFocus Diagnostics Stop",
      "path": "Cameras AutoFocus Diagnostics Stop",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 29954,
      "normPath": "Cameras Background Clear",
      "path": "Cameras Background Clear",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Image",
            "required": true,
            "valuespace": {
              "Values": [
                "User1",
                "User2",
                "User3"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 29955,
      "normPath": "Cameras Background Delete",
      "path": "Cameras Background Delete",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Checksum",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "SHA512",
            "name": "ChecksumType",
            "required": false,
            "valuespace": {
              "Values": [
                "SHA512"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "Image",
            "required": true,
            "valuespace": {
              "Values": [
                "User1",
                "User2",
                "User3"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "Url",
            "required": true,
            "valuespace": {
              "MaxLength": "2048",
              "MinLength": "8",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 29956,
      "normPath": "Cameras Background Fetch",
      "path": "Cameras Background Fetch",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 30365,
      "normPath": "Cameras Background ForegroundParameters Reset",
      "path": "Cameras Background ForegroundParameters Reset",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Composition",
            "required": false,
            "valuespace": {
              "Values": [
                "Blend",
                "CameraPip",
                "VideoPip"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "Opacity",
            "required": false,
            "valuespace": {
              "Max": "100",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Scale",
            "required": false,
            "valuespace": {
              "Max": "100",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "X",
            "required": false,
            "valuespace": {
              "Max": "10000",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Y",
            "required": false,
            "valuespace": {
              "Max": "10000",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31337,
      "normPath": "Cameras Background ForegroundParameters Set",
      "path": "Cameras Background ForegroundParameters Set",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Image",
            "required": true,
            "valuespace": {
              "Values": [
                "User1",
                "User2",
                "User3"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Large",
            "name": "Size",
            "required": false,
            "valuespace": {
              "Values": [
                "Large",
                "Thumbnail"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 29957,
      "normPath": "Cameras Background Get",
      "path": "Cameras Background Get",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 29958,
      "normPath": "Cameras Background List",
      "path": "Cameras Background List",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Image",
            "required": false,
            "valuespace": {
              "Values": [
                "Image1",
                "Image2",
                "Image3",
                "Image4",
                "Image5",
                "Image6",
                "Image7",
                "User1",
                "User2",
                "User3"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "Mode",
            "required": false,
            "valuespace": {
              "Values": [
                "Disabled",
                "Blur",
                "BlurMonochrome",
                "DepthOfField",
                "Monochrome",
                "Hdmi",
                "UsbC",
                "Image"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 30392,
      "normPath": "Cameras Background Set",
      "path": "Cameras Background Set",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "multiline": "True",
        "params": [
          {
            "name": "Image",
            "required": true,
            "valuespace": {
              "Values": [
                "User1",
                "User2",
                "User3"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 29960,
      "normPath": "Cameras Background Upload",
      "path": "Cameras Background Upload",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This setting applies only when using the codec with a Precision 60 camera or SpeakerTrack 60 camera. Clear the stored presenter tracking camera position for the overview image of the stage. The PresenterTrack feature will still work after the camera position has been cleared, but the camera will not view a predefined position upon activation.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 28205,
      "normPath": "Cameras PresenterTrack ClearPosition",
      "path": "Cameras PresenterTrack ClearPosition",
      "products": [
        "barents"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Clear the stored presenter tracking camera position for the overview image of the stage. The PresenterTrack feature will still work after the camera position has been cleared, but the camera will not view a predefined position upon activation.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 28706,
      "normPath": "Cameras PresenterTrack ClearPosition",
      "path": "Cameras PresenterTrack ClearPosition",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "description": "Clear the stored presenter tracking camera position for the overview image of the stage. The PresenterTrack feature will still work after the camera position has been cleared, but the camera will not view a predefined position upon activation."
      },
      "id": 29302,
      "normPath": "Cameras PresenterTrack ClearPosition",
      "path": "Cameras PresenterTrack ClearPosition",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Mode",
            "required": true,
            "valuespace": {
              "Values": [
                "Off",
                "Follow",
                "Diagnostic",
                "Background",
                "Setup",
                "Persistent"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "description": "Set the presenter tracking mode. This command takes effect only if the PresenterTrack feature is enabled. Sign in to the device's web interface and use the Cameras PresenterTrack Enabled setting to enable or disable the feature."
      },
      "id": 29303,
      "normPath": "Cameras PresenterTrack Set",
      "path": "Cameras PresenterTrack Set",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This setting applies only when using the codec with a Precision 60 camera or SpeakerTrack 60 camera. Set the presenter tracking mode. This command takes effect only if the PresenterTrack feature is enabled. Sign in to the device's web interface and use the Cameras PresenterTrack Enabled setting to enable or disable the feature.",
        "params": [
          {
            "description": "Off: Turn off presenter tracking. Follow: Turn on presenter tracking. This is the default mode when the feature is activated from the Touch user interface. Presenter tracking is automatically turned off when camera moves to a different preset, when another camera is selected, or when standby is activated. Diagnostic: Turn on diagnostic mode in order to troubleshoot presenter tracking, or to see exactly what happens on the device screen. In diagnostics mode there are several activities on the screen. The screen will show the overview image, and the rectangles/squares listed below will be visible:   * RED: The trigger zone.   * YELLOW: The cropped image of the presenter. Visible only when a face is being tracked.   * GREEN: Indicates that a face is detected and that it is tracked.   * GREEN BLINKING FILLED: Indicates a positive face detection. If the tracked individual does not get a valid face-read the square becomes red.   * RED BLINKING FILLED: Indicates a false face detection. After some seconds the tracking stops.   * BLUE: A face is detected but the face is not tracked. Background: This setting is used by the codec's internal scripts. Turns on presenter tracking with no cropping of the image. Setup: This setting is used by the codec's web interface to show the trigger zone on the device screen when setting up the PresenterTrack feature. Persistent: This setting is used by the codec's internal scripts. Turns on presenter tracking in persistent mode. Persitent mode is automatically turned off when camera moves to a different preset.",
            "name": "Mode",
            "required": true,
            "valuespace": {
              "Values": [
                "Off",
                "Follow",
                "Diagnostic",
                "Background",
                "Setup",
                "Persistent"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33922,
      "normPath": "Cameras PresenterTrack Set",
      "path": "Cameras PresenterTrack Set",
      "products": [
        "barents"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the presenter tracking mode. This command takes effect only if the PresenterTrack feature is enabled. Sign in to the device's web interface and use the Cameras PresenterTrack Enabled setting to enable or disable the feature.",
        "params": [
          {
            "description": "Off: Turn off presenter tracking. Follow: Turn on presenter tracking. This is the default mode when the feature is activated from the Touch user interface. Presenter tracking is automatically turned off when camera moves to a different preset, when another camera is selected, or when standby is activated. Diagnostic: Turn on diagnostic mode in order to troubleshoot presenter tracking, or to see exactly what happens on the device screen. In diagnostics mode there are several activities on the screen. The screen will show the overview image, and the rectangles/squares listed below will be visible:   * RED: The trigger zone.   * YELLOW: The cropped image of the presenter. Visible only when a face is being tracked.   * GREEN: Indicates that a face is detected and that it is tracked.   * GREEN BLINKING FILLED: Indicates a positive face detection. If the tracked individual does not get a valid face-read the square becomes red.   * RED BLINKING FILLED: Indicates a false face detection. After some seconds the tracking stops.   * BLUE: A face is detected but the face is not tracked. Background: This setting is used by the codec's internal scripts. Turns on presenter tracking with no cropping of the image. Setup: This setting is used by the codec's web interface to show the trigger zone on the device screen when setting up the PresenterTrack feature. Persistent: This setting is used by the codec's internal scripts. Turns on presenter tracking in persistent mode. Persitent mode is automatically turned off when camera moves to a different preset.",
            "name": "Mode",
            "required": true,
            "valuespace": {
              "Values": [
                "Off",
                "Follow",
                "Diagnostic",
                "Background",
                "Setup",
                "Persistent"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 34002,
      "normPath": "Cameras PresenterTrack Set",
      "path": "Cameras PresenterTrack Set",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This setting applies only when using the codec with a Precision 60 camera or SpeakerTrack 60 camera. Store the current position of the presenter tracking camera for the overview image of the stage. The presenter tracking camera will move to this position when activating the feature.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 28207,
      "normPath": "Cameras PresenterTrack StorePosition",
      "path": "Cameras PresenterTrack StorePosition",
      "products": [
        "barents"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Store the current position of the presenter tracking camera for the overview image of the stage. The presenter tracking camera will move to this position when activating the feature.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 28708,
      "normPath": "Cameras PresenterTrack StorePosition",
      "path": "Cameras PresenterTrack StorePosition",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "description": "Store the current position of the presenter tracking camera for the overview image of the stage. The presenter tracking camera will move to this position when activating the feature."
      },
      "id": 29304,
      "normPath": "Cameras PresenterTrack StorePosition",
      "path": "Cameras PresenterTrack StorePosition",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Activate SpeakerTrack mode. Requires that xConfiguration Cameras SpeakerTrack Mode is set to Auto (default). This command applies only to devices with cameras that support speaker tracking.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26370,
      "normPath": "Cameras SpeakerTrack Activate",
      "path": "Cameras SpeakerTrack Activate",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Activate SpeakerTrack mode. Requires that xConfiguration Cameras SpeakerTrack Mode is set to Auto (default).",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 28709,
      "normPath": "Cameras SpeakerTrack Activate",
      "path": "Cameras SpeakerTrack Activate",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "hopen",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Activate Best Overview mode. Requires that xConfiguration Cameras SpeakerTrack Mode is set to Auto (default).",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 28930,
      "normPath": "Cameras SpeakerTrack Activate",
      "path": "Cameras SpeakerTrack Activate",
      "products": [
        "havella"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Activate SpeakerTrack mode. Requires that xConfiguration Cameras SpeakerTrack Mode is set to Auto (default). This command applies only to devices with cameras that support speaker tracking.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33923,
      "normPath": "Cameras SpeakerTrack Activate",
      "path": "Cameras SpeakerTrack Activate",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deactivate SpeakerTrack mode. This command applies only to devices with cameras that support speaker tracking.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26371,
      "normPath": "Cameras SpeakerTrack Deactivate",
      "path": "Cameras SpeakerTrack Deactivate",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deactivate SpeakerTrack mode.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 28710,
      "normPath": "Cameras SpeakerTrack Deactivate",
      "path": "Cameras SpeakerTrack Deactivate",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "hopen",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Dectivate Best Overview mode.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 28931,
      "normPath": "Cameras SpeakerTrack Deactivate",
      "path": "Cameras SpeakerTrack Deactivate",
      "products": [
        "havella"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deactivate SpeakerTrack mode. This command applies only to devices with cameras that support speaker tracking.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33924,
      "normPath": "Cameras SpeakerTrack Deactivate",
      "path": "Cameras SpeakerTrack Deactivate",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Starts diagnostics on the camera's speaker tracking. This command applies only to devices with cameras that support speaker tracking. The Tracking parameter only applies to the SpeakerTrack 60 camera.",
        "params": [
          {
            "default": "On",
            "name": "Tracking",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 26372,
      "normPath": "Cameras SpeakerTrack Diagnostics Start",
      "path": "Cameras SpeakerTrack Diagnostics Start",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Starts diagnostics on the camera's speaker tracking.",
        "params": [
          {
            "default": "On",
            "description": "The Tracking parameter is not applicable for this product.",
            "name": "Tracking",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31718,
      "normPath": "Cameras SpeakerTrack Diagnostics Start",
      "path": "Cameras SpeakerTrack Diagnostics Start",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "hopen",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Starts diagnostics on the camera's tracking for best overview.",
        "params": [
          {
            "default": "On",
            "description": "The Tracking parameter is not applicable for this product.",
            "name": "Tracking",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31767,
      "normPath": "Cameras SpeakerTrack Diagnostics Start",
      "path": "Cameras SpeakerTrack Diagnostics Start",
      "products": [
        "havella"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Starts diagnostics on the camera's speaker tracking. This command applies only to devices with cameras that support speaker tracking.",
        "params": [
          {
            "default": "On",
            "description": "The Tracking parameter is not applicable for this product.",
            "name": "Tracking",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31822,
      "normPath": "Cameras SpeakerTrack Diagnostics Start",
      "path": "Cameras SpeakerTrack Diagnostics Start",
      "products": [
        "svea"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Starts diagnostics on the camera's speaker tracking. This command applies only to devices with cameras that support speaker tracking. The Tracking parameter only applies to the SpeakerTrack 60 camera.",
        "params": [
          {
            "default": "On",
            "description": "On: Displays diagnostics from both cameras simultaneously. In this mode the tracking is determined by who is talking in the room identical to SpeakerTrack's standard behavior. Off: Displays diagnostics from one camera at a time. Diagnostics is switched from one camera to the other in 15 seconds intervals, and camera related diagnostics are shown for the active camera. Both cameras stay in full wide position. Use Tracking: Off when you wish to see the tracking diagnostics from one camera at a time.",
            "name": "Tracking",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33925,
      "normPath": "Cameras SpeakerTrack Diagnostics Start",
      "path": "Cameras SpeakerTrack Diagnostics Start",
      "products": [
        "barents"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stops diagnostics on the camera's tracking.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 26373,
      "normPath": "Cameras SpeakerTrack Diagnostics Stop",
      "path": "Cameras SpeakerTrack Diagnostics Stop",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ],
        "description": "Start using the limited maximum camera view for speaker tracking (see the Cameras SpeakerTrack ViewLimits StorePosition command). The full camera range is always available for manual camera control. For this to come into effect, the xConfiguration Cameras SpeakerTrack ViewLimits Allowed must be set to True."
      },
      "id": 30451,
      "normPath": "Cameras SpeakerTrack ViewLimits Activate",
      "path": "Cameras SpeakerTrack ViewLimits Activate",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start using the limited maximum camera view for speaker tracking (see the Cameras SpeakerTrack ViewLimits StorePosition command). The full camera range is always available for manual camera control. For this to come into effect, the xConfiguration Cameras SpeakerTrack ViewLimits Allowed must be set to True.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 33926,
      "normPath": "Cameras SpeakerTrack ViewLimits Activate",
      "path": "Cameras SpeakerTrack ViewLimits Activate",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ],
        "description": "Stop using the limited maximum camera view for speaker tracking (see the Cameras SpeakerTrack ViewLimits StorePosition command). The fully zoomed-out camera view will be used instead."
      },
      "id": 30452,
      "normPath": "Cameras SpeakerTrack ViewLimits Deactivate",
      "path": "Cameras SpeakerTrack ViewLimits Deactivate",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop using the limited maximum camera view for speaker tracking (see the Cameras SpeakerTrack ViewLimits StorePosition command). The fully zoomed-out camera view will be used instead.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 33927,
      "normPath": "Cameras SpeakerTrack ViewLimits Deactivate",
      "path": "Cameras SpeakerTrack ViewLimits Deactivate",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ],
        "description": "Store the current camera view as the maximum view (room overview) for speaker tracking. This way you can limit the default maximum view to exclude parts of the room. If you don't set a limit, the maximum view for speaker tracking is the fully zoomed-out camera view."
      },
      "id": 30453,
      "normPath": "Cameras SpeakerTrack ViewLimits StorePosition",
      "path": "Cameras SpeakerTrack ViewLimits StorePosition",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Store the current camera view as the maximum view (room overview) for speaker tracking. This way you can limit the default maximum view to exclude parts of the room. If you don't set a limit, the maximum view for speaker tracking is the fully zoomed-out camera view.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 33928,
      "normPath": "Cameras SpeakerTrack ViewLimits StorePosition",
      "path": "Cameras SpeakerTrack ViewLimits StorePosition",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "1",
            "name": "WhiteboardId",
            "required": false,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ],
        "description": "Moves the specified camera to the position stored with xCommand Cameras SpeakerTrack Whiteboard StorePosition."
      },
      "id": 26374,
      "normPath": "Cameras SpeakerTrack Whiteboard ActivatePosition",
      "path": "Cameras SpeakerTrack Whiteboard ActivatePosition",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Moves the specified camera to the position stored with xCommand Cameras SpeakerTrack Whiteboard StorePosition.",
        "params": [
          {
            "description": "The ID of the camera that is being positioned.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "1",
            "description": "The id set for the camera position used for the snap-to-whiteboard feature. Currently only id 1 can be used.",
            "name": "WhiteboardId",
            "required": false,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31680,
      "normPath": "Cameras SpeakerTrack Whiteboard ActivatePosition",
      "path": "Cameras SpeakerTrack Whiteboard ActivatePosition",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Moves the specified camera to the position stored with xCommand Cameras SpeakerTrack Whiteboard StorePosition.",
        "params": [
          {
            "description": "The ID of the camera that is being positioned.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "1",
            "description": "The id set for the camera position used for the snap-to-whiteboard feature. Currently only id 1 can be used.",
            "name": "WhiteboardId",
            "required": false,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31771,
      "normPath": "Cameras SpeakerTrack Whiteboard ActivatePosition",
      "path": "Cameras SpeakerTrack Whiteboard ActivatePosition",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Distance",
            "required": true,
            "valuespace": {
              "Max": "1500",
              "Min": "300",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ],
        "description": "Only applicable if using a SpeakerTrack 60 camera. Align the position of the second camera on a SpeakerTrack 60 to the first camera's stored position. You must also set the distance to a whiteboard."
      },
      "id": 26375,
      "normPath": "Cameras SpeakerTrack Whiteboard AlignPosition",
      "path": "Cameras SpeakerTrack Whiteboard AlignPosition",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Not applicable.",
        "params": [
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Distance",
            "required": true,
            "valuespace": {
              "Max": "1500",
              "Min": "300",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 28957,
      "normPath": "Cameras SpeakerTrack Whiteboard AlignPosition",
      "path": "Cameras SpeakerTrack Whiteboard AlignPosition",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Not applicable.",
        "params": [
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Distance",
            "required": true,
            "valuespace": {
              "Max": "1500",
              "Min": "300",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 29305,
      "normPath": "Cameras SpeakerTrack Whiteboard AlignPosition",
      "path": "Cameras SpeakerTrack Whiteboard AlignPosition",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Only applicable if using a SpeakerTrack 60 camera. Align the position of the second camera on a SpeakerTrack 60 to the first camera's stored position. You must also set the distance to a whiteboard.",
        "params": [
          {
            "description": "The ID of the camera that is being positioned.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Set distance to whiteboard in centimeters. Use an accurate measurement for the feature to work seamlessly.",
            "name": "Distance",
            "required": true,
            "valuespace": {
              "Max": "1500",
              "Min": "300",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31681,
      "normPath": "Cameras SpeakerTrack Whiteboard AlignPosition",
      "path": "Cameras SpeakerTrack Whiteboard AlignPosition",
      "products": [
        "barents"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Only applicable if using a SpeakerTrack 60 camera. Align the position of the second camera on a SpeakerTrack 60 to the first camera's stored position. You must also set the distance to a whiteboard.",
        "params": [
          {
            "description": "The ID of the camera that is being positioned.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Set distance to whiteboard in centimeters. Use an accurate measurement for the feature to work seamlessly.",
            "name": "Distance",
            "required": true,
            "valuespace": {
              "Max": "1500",
              "Min": "300",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31719,
      "normPath": "Cameras SpeakerTrack Whiteboard AlignPosition",
      "path": "Cameras SpeakerTrack Whiteboard AlignPosition",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Distance",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "1",
            "name": "WhiteboardId",
            "required": false,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ],
        "description": "Set the cameras distance to the whiteboard. This information is needed by the camera to frame the whiteboard automatically."
      },
      "id": 26376,
      "normPath": "Cameras SpeakerTrack Whiteboard SetDistance",
      "path": "Cameras SpeakerTrack Whiteboard SetDistance",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the cameras distance to the whiteboard. This information is needed by the camera to frame the whiteboard automatically.",
        "params": [
          {
            "description": "Set distance to whiteboard in centimeters. Use an accurate measurement for the feature to work seamlessly.",
            "name": "Distance",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "1",
            "description": "The id set for the camera position used for the snap-to-whiteboard feature. Currently only id 1 can be used.",
            "name": "WhiteboardId",
            "required": false,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31682,
      "normPath": "Cameras SpeakerTrack Whiteboard SetDistance",
      "path": "Cameras SpeakerTrack Whiteboard SetDistance",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "1",
            "name": "WhiteboardId",
            "required": false,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ],
        "description": "Store the position of the specified camera as the Snap to Whiteboard position. Frame the image so that there is room around the whiteboard for the speaker. To use the Snap to Whiteboard feature it must be enabled with xConfiguration Cameras SpeakerTrack Whiteboard Mode and tracking must be enabled with xConfiguration Cameras SpeakerTrack Mode. Note: If you have a SpeakerTrack 60 camera, you must store a snap-to-whiteboard position for both cameras."
      },
      "id": 26377,
      "normPath": "Cameras SpeakerTrack Whiteboard StorePosition",
      "path": "Cameras SpeakerTrack Whiteboard StorePosition",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Store the position of the specified camera as the Snap to Whiteboard position. Frame the image so that there is room around the whiteboard for the speaker. To use the Snap to Whiteboard feature it must be enabled with xConfiguration Cameras SpeakerTrack Whiteboard Mode and tracking must be enabled with xConfiguration Cameras SpeakerTrack Mode.",
        "params": [
          {
            "description": "The ID of the camera that is being positioned.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "1",
            "description": "You can give the position an id number. Currently the only id that can be used is 1.",
            "name": "WhiteboardId",
            "required": false,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31772,
      "normPath": "Cameras SpeakerTrack Whiteboard StorePosition",
      "path": "Cameras SpeakerTrack Whiteboard StorePosition",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Store the position of the specified camera as the Snap to Whiteboard position. Frame the image so that there is room around the whiteboard for the speaker. To use the Snap to Whiteboard feature it must be enabled with xConfiguration Cameras SpeakerTrack Whiteboard Mode and tracking must be enabled with xConfiguration Cameras SpeakerTrack Mode.",
        "params": [
          {
            "description": "The ID of the camera that is being positioned.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "1",
            "description": "You can give the position an id number. Currently the only id that can be used is 1.",
            "name": "WhiteboardId",
            "required": false,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31823,
      "normPath": "Cameras SpeakerTrack Whiteboard StorePosition",
      "path": "Cameras SpeakerTrack Whiteboard StorePosition",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Store the position of the specified camera as the Snap to Whiteboard position. Frame the image so that there is room around the whiteboard for the speaker. To use the Snap to Whiteboard feature it must be enabled with xConfiguration Cameras SpeakerTrack Whiteboard Mode and tracking must be enabled with xConfiguration Cameras SpeakerTrack Mode. Note: If you have a SpeakerTrack 60 camera, you must store a snap-to-whiteboard position for both cameras.",
        "params": [
          {
            "description": "The ID of the camera that is being positioned.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "1",
            "description": "You can give the position an id number. Currently the only id that can be used is 1.",
            "name": "WhiteboardId",
            "required": false,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33929,
      "normPath": "Cameras SpeakerTrack Whiteboard StorePosition",
      "path": "Cameras SpeakerTrack Whiteboard StorePosition",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ],
        "description": "Trigger the auto-focus functionality. The camera must support auto-focus functionality. If the camera is daisy chained, the CameraId is given by its place in the chain."
      },
      "id": 26369,
      "normPath": "Camera TriggerAutofocus",
      "path": "Camera TriggerAutofocus",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ],
        "description": "Trigger the auto-focus functionality. The camera must support auto-focus functionality. If the camera is daisy chained, the CameraId is given by its place in the chain."
      },
      "id": 29266,
      "normPath": "Camera TriggerAutofocus",
      "path": "Camera TriggerAutofocus",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Trigger the auto-focus functionality. The camera must support auto-focus functionality. If the camera is daisy chained, the CameraId is given by its place in the chain.",
        "params": [
          {
            "description": "Select the camera to auto-focus.",
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31675,
      "normPath": "Camera TriggerAutofocus",
      "path": "Camera TriggerAutofocus",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34266,
      "normPath": "Camera TriggerWhitebalance",
      "path": "Camera TriggerWhitebalance",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34267,
      "normPath": "Camera TriggerWhitebalance",
      "path": "Camera TriggerWhitebalance",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "CameraId",
            "required": true,
            "valuespace": {
              "Max": "7",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34268,
      "normPath": "Camera TriggerWhitebalance",
      "path": "Camera TriggerWhitebalance",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command is only available for Cisco Webex registered devices. The command gives a response to an authentication request based on the Conference Call[n] AuthenticationRequest status.",
        "params": [
          {
            "default": "0",
            "description": "Unique identifier of the call. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Cohost: Join as cohost. The cohost has privileges that allow them to manage the meeting. Guest: Join as guest. Guests have no special privileges. Host: Join as host. The host has privileges that allow them to manage the meeting. Panelist: Join as panelist. In Webex Events, panelists can participate in the presentation. Event attendees must be promoted to a panelist to share video. Presenter: Join as a presenter. The presenter has the ability to share their screen or application. ",
            "name": "ParticipantRole",
            "required": true,
            "valuespace": {
              "Values": [
                "Host",
                "Panelist",
                "Guest",
                "Cohost",
                "Presenter"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "PIN code. The PIN must be entered with a trailing '#'. A PIN code must be provided if joining as host, panelist, or as guest, when the Conference Call[n] AuthenticationRequest status indicates that a PIN code is required.",
            "name": "Pin",
            "required": false,
            "valuespace": {
              "MaxLength": "32",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33871,
      "normPath": "Conference Call AuthenticationResponse",
      "path": "Conference Call AuthenticationResponse",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command switches on the Do Not Disturb mode, and the Timeout parameter allows you to control when it is switched off again. When Do Not Disturb is switched on, all incoming calls are rejected and registered as missed calls. The calling side receives a busy signal.",
        "params": [
          {
            "description": "Set the number of minutes before Do Not Disturb is switched off. If not set, Do Not Disturb times out after 1440 minutes (24 hours).",
            "name": "Timeout",
            "required": false,
            "valuespace": {
              "Max": "1440",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31601,
      "normPath": "Conference DoNotDisturb Activate",
      "path": "Conference DoNotDisturb Activate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Switch off the Do Not Disturb mode. When Do Not Disturb is switched off incoming calls come through as normal.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 28219,
      "normPath": "Conference DoNotDisturb Deactivate",
      "path": "Conference DoNotDisturb Deactivate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lower your hand. Use the raise hand feature to let the host know that you have a question or a comment. Raise Hand is available in meetings with more than two participants. It's not available in meetings started from a Webex space.",
        "params": [
          {
            "description": "Unique identifier of the call. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33872,
      "normPath": "Conference Hand Lower",
      "path": "Conference Hand Lower",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Raise your hand. Use the raise hand feature to let the host know that you have a question or a comment. Raise Hand is available in meetings with more than two participants. It's not available in meetings started from a Webex space.",
        "params": [
          {
            "description": "Unique identifier of the call. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33873,
      "normPath": "Conference Hand Raise",
      "path": "Conference Hand Raise",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lower the hands of all conference participants.",
        "params": [
          {
            "description": "Unique identifier of the call. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33874,
      "normPath": "Conference LowerAllHands",
      "path": "Conference LowerAllHands",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Not applicable in this version.",
        "params": [
          {
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33875,
      "normPath": "Conference MeetingAssistant Start",
      "path": "Conference MeetingAssistant Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Not applicable in this version.",
        "params": [
          {
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33876,
      "normPath": "Conference MeetingAssistant Stop",
      "path": "Conference MeetingAssistant Stop",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Admits or lets in a participant that is waiting to be admitted into the call or meeting. This command is only available Cisco Webex registered devices. A participant is waiting to be admitted if he has status \"waiting\" in the result from the Conference ParticipantList Search command (*r ParticipantListSearchResult Participant [n] Status = \"waiting\").",
        "params": [
          {
            "description": "Unique identifier of the call. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Unique identifier of a participant in the call. To see the ParticipantIds for participants in a call, you can run the xCommand Conference ParticipantList Search.",
            "name": "ParticipantId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33877,
      "normPath": "Conference Participant Admit",
      "path": "Conference Participant Admit",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Disconnects the participant from a call or meeting. It is only possible to disconnect a participant if the Conference Call[n] Capabilities ParticipantDisconnect status for the meeting shows Available.",
        "params": [
          {
            "description": "Unique identifier of the call. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Unique identifier of a participant in the call. To see the ParticipantIds for participants in a call, you can run the xCommand Conference ParticipantList Search.",
            "name": "ParticipantId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33878,
      "normPath": "Conference Participant Disconnect",
      "path": "Conference Participant Disconnect",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Searches the list of participants in the call or meeting. There is a participant list that can be searched only if the Conference Call[n] Capabilities ParticipantList status shows Available.",
        "params": [
          {
            "default": "0",
            "description": "Unique identifier of the call. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "200",
            "description": "Limit the number of records (participants) in the result set to this number. For example, if the limit is set to 10, the result set will contain only 10 entries even if the total number of hits is larger.",
            "name": "Limit",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "0",
            "description": "Get records starting with this offset in a search.",
            "name": "Offset",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "URI or DisplayName. Leave this parameter empty if you want the search to return all participants in the call.",
            "name": "SearchString",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33881,
      "normPath": "Conference ParticipantList Search",
      "path": "Conference ParticipantList Search",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lower the hand of a participant in a conference.",
        "params": [
          {
            "description": "Unique identifier of the call. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Unique identifier of a participant in the call. To see the ParticipantIds for participants in a call, you can run the xCommand Conference ParticipantList Search.",
            "name": "ParticipantId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33879,
      "normPath": "Conference Participant LowerHand",
      "path": "Conference Participant LowerHand",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Mutes the participant in the call or meeting. It is only possible to mute a participant if the Conference Call[n] Capabilities ParticipantMute status shows Available.",
        "params": [
          {
            "description": "Indicate the desired mute state of the participant.",
            "name": "AudioMute",
            "required": true,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Unique identifier of the call. During a call you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Unique identifier of a participant in the call. To see the ParticipantIds for participants in a call, you can run the xCommand Conference ParticipantList Search.",
            "name": "ParticipantId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33880,
      "normPath": "Conference Participant Mute",
      "path": "Conference Participant Mute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Define if the recording of a meeting shall be paused. When you are recording a meeting, you can use this setting if you want to pause the recording. You can resume the recording by using the command Conference Recording Resume.",
        "params": [
          {
            "description": "Identify CallID for the remote participant.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31605,
      "normPath": "Conference Recording Pause",
      "path": "Conference Recording Pause",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Define if the recording of a meeting shall be resumed. When you are recording a meeting, you can use this setting if you want to resume a recording that has previously been paused.",
        "params": [
          {
            "description": "Identify CallID for the remote participant.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31606,
      "normPath": "Conference Recording Resume",
      "path": "Conference Recording Resume",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Define if the meeting shall be recorded. Once you are in a meeting, you can use this setting if you want to start recording. Note that the recording commands are only available if your infrastructure (Cisco Meeting Server) supports recording.",
        "params": [
          {
            "description": "Identify CallID for the remote participant.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31607,
      "normPath": "Conference Recording Start",
      "path": "Conference Recording Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Define if the recording of a meeting shall be stoppped. When you are recording a meeting, you can use this setting to stop recording.",
        "params": [
          {
            "description": "Identify CallID for the remote participant.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31608,
      "normPath": "Conference Recording Stop",
      "path": "Conference Recording Stop",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Releases locked speaker set by xCommand Conference SpeakerLock Set. Default voice switching is switched back on.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 28234,
      "normPath": "Conference SpeakerLock Release",
      "path": "Conference SpeakerLock Release",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "For manually locking one of the speakers to the prominent speaker position. This overrides the default voice switching.",
        "params": [
          {
            "default": "0",
            "description": "Identify CallID for the remote participant. Only relevant if Target is set to \"remote\".",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Identifies local or remote participant.",
            "name": "Target",
            "required": true,
            "valuespace": {
              "Values": [
                "Local",
                "Remote"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31609,
      "normPath": "Conference SpeakerLock Set",
      "path": "Conference SpeakerLock Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lets you leave a meeting you are hosting, but allows the other particpants to continue the meeting. A new host is assigned automatically",
        "params": [
          {
            "description": "Unique identifier of the call. During a call, you can run the xStatus Call command to see the CallId.",
            "name": "CallId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33882,
      "normPath": "Conference TransferHostAndLeave",
      "path": "Conference TransferHostAndLeave",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command runs self-diagnostics commands on the device.",
        "params": [
          {
            "default": "Alerts",
            "description": "You can filter the diagnostics results to alerts, all or none. If not set, the result will show all results.",
            "name": "ResultSet",
            "required": false,
            "valuespace": {
              "Values": [
                "Alerts",
                "All",
                "None"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "TouchUser"
        ]
      },
      "id": 31533,
      "normPath": "Diagnostics Run",
      "path": "Diagnostics Run",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Dial out from the device. Returns information about the CallId and ConferenceId, which are required for some of the other commands.",
        "params": [
          {
            "description": "Not appliable. For internal usage only.",
            "name": "Appearance",
            "required": false,
            "valuespace": {
              "Max": "999999999",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "Any identifier that an external booking system (e.g. TMS, CTS-MAN) can use for its own references to match placed calls with the booking systems internal identifier for a meeting. This can be any string, e.g. a GUID. The booking Id is supplied in call logs, call events etc for the call.",
            "name": "BookingId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Set the call rate.",
            "name": "CallRate",
            "required": false,
            "valuespace": {
              "Max": "6000",
              "Min": "64",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select a call type (audio or video). By selecting Auto, the device will detect the call type automatically.",
            "name": "CallType",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Audio",
                "Video"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "The display name of the remote participant.",
            "name": "DisplayName",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Enter the number or address.",
            "name": "Number",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Select the call protocol.",
            "name": "Protocol",
            "required": false,
            "valuespace": {
              "Values": [
                "H320",
                "H323",
                "Sip",
                "Spark"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "Adds a tag to a call, so that it can be identified in the call history.",
            "name": "TrackingData",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31534,
      "normPath": "Dial",
      "path": "Dial",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70s",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Dial out from the device. Returns information about the CallId and ConferenceId, which are required for some of the other commands.",
        "params": [
          {
            "description": "Not appliable. For internal usage only.",
            "name": "Appearance",
            "required": false,
            "valuespace": {
              "Max": "999999999",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "Any identifier that an external booking system (e.g. TMS, CTS-MAN) can use for its own references to match placed calls with the booking systems internal identifier for a meeting. This can be any string, e.g. a GUID. The booking Id is supplied in call logs, call events etc for the call.",
            "name": "BookingId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Set the call rate.",
            "name": "CallRate",
            "required": false,
            "valuespace": {
              "Max": "20000",
              "Min": "64",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select a call type (audio or video). By selecting Auto, the device will detect the call type automatically.",
            "name": "CallType",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Audio",
                "Video"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "The display name of the remote participant.",
            "name": "DisplayName",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Enter the number or address.",
            "name": "Number",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Select the call protocol.",
            "name": "Protocol",
            "required": false,
            "valuespace": {
              "Values": [
                "H320",
                "H323",
                "Sip",
                "Spark"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "Adds a tag to a call, so that it can be identified in the call history.",
            "name": "TrackingData",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31725,
      "normPath": "Dial",
      "path": "Dial",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Dial out from the device. Returns information about the CallId and ConferenceId, which are required for some of the other commands.",
        "params": [
          {
            "description": "Not appliable. For internal usage only.",
            "name": "Appearance",
            "required": false,
            "valuespace": {
              "Max": "999999999",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "Any identifier that an external booking system (e.g. TMS, CTS-MAN) can use for its own references to match placed calls with the booking systems internal identifier for a meeting. This can be any string, e.g. a GUID. The booking Id is supplied in call logs, call events etc for the call.",
            "name": "BookingId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Set the call rate.",
            "name": "CallRate",
            "required": false,
            "valuespace": {
              "Max": "10000",
              "Min": "64",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select a call type (audio or video). By selecting Auto, the device will detect the call type automatically.",
            "name": "CallType",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Audio",
                "Video"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "The display name of the remote participant.",
            "name": "DisplayName",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Enter the number or address.",
            "name": "Number",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Select the call protocol.",
            "name": "Protocol",
            "required": false,
            "valuespace": {
              "Values": [
                "H320",
                "H323",
                "Sip",
                "Spark"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "Adds a tag to a call, so that it can be identified in the call history.",
            "name": "TrackingData",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31738,
      "normPath": "Dial",
      "path": "Dial",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the state of a GPIO pin that is configured to OutputManualState mode (ref. xConfiguration GPIO Pin [1..4] Mode).",
        "params": [
          {
            "name": "Pin1",
            "required": false,
            "valuespace": {
              "Values": [
                "High",
                "Low"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "Pin2",
            "required": false,
            "valuespace": {
              "Values": [
                "High",
                "Low"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "Pin3",
            "required": false,
            "valuespace": {
              "Values": [
                "High",
                "Low"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "Pin4",
            "required": false,
            "valuespace": {
              "Values": [
                "High",
                "Low"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 28238,
      "normPath": "GPIO ManualState Set",
      "path": "GPIO ManualState Set",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Adds an HTTP(S) server to the list of allowed servers (hosts). The HttpClient Allow Hostname commands let you set up and maintain a list of up to ten allowed hosts. As long as the list is not empty, you can send HTTP(S) requests only to the servers in the list. The check against the list is performed both when using insecure (HTTP) and secure (HTTPS) transfer of data.",
        "params": [
          {
            "description": "Regular expression that matches a host name or IP address of an HTTP(S) server.",
            "name": "Expression",
            "required": true,
            "valuespace": {
              "MaxLength": "200",
              "MinLength": "2",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31610,
      "normPath": "HttpClient Allow Hostname Add",
      "path": "HttpClient Allow Hostname Add",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Removes all HTTP(S) servers from the list of allowed servers (hosts), leaving you with an empty list.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 28240,
      "normPath": "HttpClient Allow Hostname Clear",
      "path": "HttpClient Allow Hostname Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the list of allowed HTTP(S) servers (hosts). The HttpClient Allow Hostname commands let you set up and maintain a list of up to ten allowed hosts. As long as the list is not empty, you can send HTTP(S) requests only to the servers in the list. The check against the list is performed both when using insecure (HTTP) and secure (HTTPS) transfer of data.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 28241,
      "normPath": "HttpClient Allow Hostname List",
      "path": "HttpClient Allow Hostname List",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Removes an HTTP(S) server from the list of allowed servers (hosts). Use the HttpClient Allow Hostname List command to find the indentifier of each entry in the list.",
        "params": [
          {
            "description": "The identifier of the HTTP(S) server you want to remove from the list.",
            "name": "Id",
            "required": true,
            "valuespace": {
              "Max": "9",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31611,
      "normPath": "HttpClient Allow Hostname Remove",
      "path": "HttpClient Allow Hostname Remove",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sends an HTTP(S) Delete request to the server that is specified in the Url parameter. You can use the AllowInsecureHTTPS parameter to specify whether or not to validate the server's certificate before sending data over HTTPS. This parameter has no effect unless the xConfiguration HttpClient AllowInsecureHTTPS is set to On. The command returns the HTTP status code along with the data returned from the server (HTTP headers and body).",
        "params": [
          {
            "default": "False",
            "description": "If set to True the device skips the certificate validation process, and sends data to the server anyway. If set to False, the server certificate is checked, and data is not sent to the server if the certificate validation fails.",
            "name": "AllowInsecureHTTPS",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "An HTTP header field. You can add up 20 Header parameters in one command, each holding one HTTP header field.",
            "name": "Header",
            "required": false,
            "valuespace": {
              "MaxLength": "1536",
              "MinLength": "0",
              "multiple": "20",
              "type": "StringArray"
            }
          },
          {
            "default": "100000",
            "description": "The maximum payload size (bytes) of the response to this request. If the response payload is larger than this maximum size, the command returns a status error with a message saying that the maximum file size is exceeded. However, this has no effect on the server side; the request was received and processed properly by the server.",
            "name": "ResponseSizeLimit",
            "required": false,
            "valuespace": {
              "Max": "100000",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "None",
            "description": "None: The body of the HTTP response (if any) is not included in the command result. PlainText: The body of the HTTP response is included in the command result as plain text. If the response contain non-printable letters, the command returns a status error with a message saying that non-printable data was encountered. Base64: The body of the HTTP response is Base64 encoded before it is included in the command result.",
            "name": "ResultBody",
            "required": false,
            "valuespace": {
              "Values": [
                "None",
                "PlainText",
                "Base64"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "30",
            "description": "Timeout period in seconds. If the request is not completed during this period, the API will return an error.",
            "name": "Timeout",
            "required": false,
            "valuespace": {
              "Max": "30",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The URL that the request will be sent to: <Protocol> + <Host name or IP address of an HTTP(S) server> + <Path>.",
            "name": "Url",
            "required": true,
            "valuespace": {
              "MaxLength": "2048",
              "MinLength": "8",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31612,
      "normPath": "HttpClient Delete",
      "path": "HttpClient Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sends an HTTP(S) Get request to the server that is specified in the Url parameter. You can use the AllowInsecureHTTPS parameter to specify whether or not to validate the server's certificate before sending data over HTTPS. This parameter has no effect unless the xConfiguration HttpClient AllowInsecureHTTPS is set to On. The command returns the HTTP status code along with the data returned from the server (HTTP headers and body).",
        "params": [
          {
            "default": "False",
            "description": "If set to True the device skips the certificate validation process, and sends data to the server anyway. If set to False, the server certificate is checked, and data is not sent to the server if the certificate validation fails.",
            "name": "AllowInsecureHTTPS",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "An HTTP header field. You can add up 20 Header parameters in one command, each holding one HTTP header field.",
            "name": "Header",
            "required": false,
            "valuespace": {
              "MaxLength": "1536",
              "MinLength": "0",
              "multiple": "20",
              "type": "StringArray"
            }
          },
          {
            "default": "100000",
            "description": "The maximum payload size (bytes) of the response to this request. If the response payload is larger than this maximum size, the command returns a status error with a message saying that the maximum file size is exceeded. However, this has no effect on the server side; the request was received and processed properly by the server.",
            "name": "ResponseSizeLimit",
            "required": false,
            "valuespace": {
              "Max": "100000",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "PlainText",
            "description": "None: The body of the HTTP response (if any) is not included in the command result. PlainText: The body of the HTTP response is included in the command result as plain text. If the response contain non-printable letters, the command returns a status error with a message saying that non-printable data was encountered. Base64: The body of the HTTP response is Base64 encoded before it is included in the command result.",
            "name": "ResultBody",
            "required": false,
            "valuespace": {
              "Values": [
                "None",
                "PlainText",
                "Base64"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "30",
            "description": "Timeout period in seconds. If the request is not completed during this period, the API will return an error.",
            "name": "Timeout",
            "required": false,
            "valuespace": {
              "Max": "30",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The URL that the request will be sent to: <Protocol> + <Host name or IP address of an HTTP(S) server> + <Path>.",
            "name": "Url",
            "required": true,
            "valuespace": {
              "MaxLength": "2048",
              "MinLength": "8",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31613,
      "normPath": "HttpClient Get",
      "path": "HttpClient Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sends an HTTP(S) Patch request to the server that is specified in the Url parameter. This is a multiline command, so the payload (data) follows after the parameters. You can use the AllowInsecureHTTPS parameter to specify whether or not to validate the server's certificate before sending data over HTTPS. This parameter has no effect unless the xConfiguration HttpClient AllowInsecureHTTPS is set to On. The command returns the HTTP status code along with the data returned from the server (HTTP headers and body).",
        "multiline": "True",
        "params": [
          {
            "default": "False",
            "description": "If set to True the device skips the certificate validation process, and sends data to the server anyway. If set to False, the server certificate is checked, and data is not sent to the server if the certificate validation fails.",
            "name": "AllowInsecureHTTPS",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "An HTTP header field. You can add up 20 Header parameters in one command, each holding one HTTP header field.",
            "name": "Header",
            "required": false,
            "valuespace": {
              "MaxLength": "1536",
              "MinLength": "0",
              "multiple": "20",
              "type": "StringArray"
            }
          },
          {
            "default": "100000",
            "description": "The maximum payload size (bytes) of the response to this request. If the response payload is larger than this maximum size, the command returns a status error with a message saying that the maximum file size is exceeded. However, this has no effect on the server side; the request was received and processed properly by the server.",
            "name": "ResponseSizeLimit",
            "required": false,
            "valuespace": {
              "Max": "100000",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "None",
            "description": "None: The body of the HTTP response (if any) is not included in the command result. PlainText: The body of the HTTP response is included in the command result as plain text. If the response contain non-printable letters, the command returns a status error with a message saying that non-printable data was encountered. Base64: The body of the HTTP response is Base64 encoded before it is included in the command result.",
            "name": "ResultBody",
            "required": false,
            "valuespace": {
              "Values": [
                "None",
                "PlainText",
                "Base64"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "30",
            "description": "Timeout period in seconds. If the request is not completed during this period, the API will return an error.",
            "name": "Timeout",
            "required": false,
            "valuespace": {
              "Max": "30",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The URL that the request will be sent to: <Protocol> + <Host name or IP address of an HTTP(S) server> + <Path>.",
            "name": "Url",
            "required": true,
            "valuespace": {
              "MaxLength": "2048",
              "MinLength": "8",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31614,
      "normPath": "HttpClient Patch",
      "path": "HttpClient Patch",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sends an HTTP(S) Post request to the server that is specified in the Url parameter. You can use the AllowInsecureHTTPS parameter to specify whether or not to validate the server's certificate before sending data over HTTPS. This parameter has no effect unless the xConfiguration HttpClient AllowInsecureHTTPS is set to On. This is a multiline command, so the payload (data) follows after the parameters.",
        "multiline": "True",
        "params": [
          {
            "default": "False",
            "description": "If set to True the device skips the certificate validation process, and sends data to the server anyway. If set to False, the server certificate is checked, and data is not sent to the server if the certificate validation fails.",
            "name": "AllowInsecureHTTPS",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "An HTTP header field. You can add up 20 Header parameters in one command, each holding one HTTP header field.",
            "name": "Header",
            "required": false,
            "valuespace": {
              "MaxLength": "1536",
              "MinLength": "0",
              "multiple": "20",
              "type": "StringArray"
            }
          },
          {
            "default": "100000",
            "description": "The maximum payload size (bytes) of the response to this request. If the response payload is larger than this maximum size, the command returns a status error with a message saying that the maximum file size is exceeded. However, this has no effect on the server side; the request was received and processed properly by the server.",
            "name": "ResponseSizeLimit",
            "required": false,
            "valuespace": {
              "Max": "100000",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "None",
            "description": "None: The body of the HTTP response (if any) is not included in the command result. PlainText: The body of the HTTP response is included in the command result as plain text. If the response contain non-printable letters, the command returns a status error with a message saying that non-printable data was encountered. Base64: The body of the HTTP response is Base64 encoded before it is included in the command result.",
            "name": "ResultBody",
            "required": false,
            "valuespace": {
              "Values": [
                "None",
                "PlainText",
                "Base64"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "30",
            "description": "Timeout period in seconds. If the request is not completed during this period, the API will return an error.",
            "name": "Timeout",
            "required": false,
            "valuespace": {
              "Max": "30",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The URL that the request will be sent to: <Protocol> + <Host name or IP address of an HTTP(S) server> + <Path>.",
            "name": "Url",
            "required": true,
            "valuespace": {
              "MaxLength": "2048",
              "MinLength": "8",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31615,
      "normPath": "HttpClient Post",
      "path": "HttpClient Post",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sends an HTTP(S) Put request to the server that is specified in the Url parameter. You can use the AllowInsecureHTTPS parameter to specify whether or not to validate the server's certificate before sending data over HTTPS. This parameter has no effect unless the xConfiguration HttpClient AllowInsecureHTTPS is set to On. This is a multiline command, so the payload (data) follows after the parameters.",
        "multiline": "True",
        "params": [
          {
            "default": "False",
            "description": "If set to True the device skips the certificate validation process, and sends data to the server anyway. If set to False, the server certificate is checked, and data is not sent to the server if the certificate validation fails.",
            "name": "AllowInsecureHTTPS",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "An HTTP header field. You can add up 20 Header parameters in one command, each holding one HTTP header field.",
            "name": "Header",
            "required": false,
            "valuespace": {
              "MaxLength": "1536",
              "MinLength": "0",
              "multiple": "20",
              "type": "StringArray"
            }
          },
          {
            "default": "100000",
            "description": "The maximum payload size (bytes) of the response to this request. If the response payload is larger than this maximum size, the command returns a status error with a message saying that the maximum file size is exceeded. However, this has no effect on the server side; the request was received and processed properly by the server.",
            "name": "ResponseSizeLimit",
            "required": false,
            "valuespace": {
              "Max": "100000",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "None",
            "description": "None: The body of the HTTP response (if any) is not included in the command result. PlainText: The body of the HTTP response is included in the command result as plain text. If the response contain non-printable letters, the command returns a status error with a message saying that non-printable data was encountered. Base64: The body of the HTTP response is Base64 encoded before it is included in the command result.",
            "name": "ResultBody",
            "required": false,
            "valuespace": {
              "Values": [
                "None",
                "PlainText",
                "Base64"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "30",
            "description": "Timeout period in seconds. If the request is not completed during this period, the API will return an error.",
            "name": "Timeout",
            "required": false,
            "valuespace": {
              "Max": "30",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The URL that the request will be sent to: <Protocol> + <Host name or IP address of an HTTP(S) server> + <Path>.",
            "name": "Url",
            "required": true,
            "valuespace": {
              "MaxLength": "2048",
              "MinLength": "8",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31616,
      "normPath": "HttpClient Put",
      "path": "HttpClient Put",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deregister the HTTP feedback over HTTP(S).",
        "params": [
          {
            "description": "Deregister the feedback slot that was registered using the xCommand HttpFeedback Register command.",
            "name": "FeedbackSlot",
            "required": true,
            "valuespace": {
              "Max": "4",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31535,
      "normPath": "HttpFeedback Deregister",
      "path": "HttpFeedback Deregister",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Re-enables a previously registered feedback slot after it has failed and become deactivated.",
        "params": [
          {
            "description": "Specifies the feedback slot that is enabled.",
            "name": "FeedbackSlot",
            "required": true,
            "valuespace": {
              "Max": "4",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31536,
      "normPath": "HttpFeedback Enable",
      "path": "HttpFeedback Enable",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Register the device to an HTTP(S) server to return XML feedback over HTTP(S) to specific URLs.",
        "params": [
          {
            "description": "The XPath expression specifies which parts of the Status, Configuration or Event XML documents are monitored. You can have from 0 to 15 XPath expressions in the same command.",
            "name": "Expression",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "1",
              "multiple": "15",
              "type": "StringArray"
            }
          },
          {
            "description": "The codec can register up to 4 slots of servers requesting HTTP feedback. Set the registering to one of them. Note: Avoid using FeedbackSlot 3 in an environment where Cisco TelePresence Management Suite (TMS) is used as TMS uses this feedbackslot to register its expressions.",
            "name": "FeedbackSlot",
            "required": true,
            "valuespace": {
              "Max": "4",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "XML",
            "description": "Set the format for the feedback from the HTTP server to XML or JSON.",
            "name": "Format",
            "required": false,
            "valuespace": {
              "Values": [
                "XML",
                "JSON"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The URL to the HTTP server where you want the codec to post the HTTP feedback messages to.",
            "name": "ServerUrl",
            "required": true,
            "valuespace": {
              "MaxLength": "2048",
              "MinLength": "1",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 33738,
      "normPath": "HttpFeedback Register",
      "path": "HttpFeedback Register",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Send logs to the Cisco Webex cloud. These logs can help diagnose and fix issues with the device. The command returns a log ID, which an administrator or TAC engineer can use to identify and download the logs. For the command to work, the device must either be registered to the Webex cloud service or registered to an on-premises service and linked to Webex Edge for Devices. Additionally, for devices linked to Webex Edge for Devices, the xConfiguration Logging CloudUpload Mode must be set to On.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30516,
      "normPath": "Logging SendLogs",
      "path": "Logging SendLogs",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Clears the Macros Logs.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 28248,
      "normPath": "Macros Log Clear",
      "path": "Macros Log Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the logs for all running macros and for the runtime itself.",
        "params": [
          {
            "default": "0",
            "description": "Shows lines with the same or higher Offset than the one provided.",
            "name": "Offset",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31617,
      "normPath": "Macros Log Get",
      "path": "Macros Log Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Activates a macro created on this device.",
        "params": [
          {
            "description": "Specifies the name of the macro to activate.",
            "name": "Name",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31618,
      "normPath": "Macros Macro Activate",
      "path": "Macros Macro Activate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deactivates a macro currently running on this device.",
        "params": [
          {
            "description": "The name of the macro to deactivate.",
            "name": "Name",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31619,
      "normPath": "Macros Macro Deactivate",
      "path": "Macros Macro Deactivate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the details of a macro created on this device.",
        "params": [
          {
            "default": "False",
            "description": "Shows the content for the specified Macro or not.",
            "name": "Content",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The name of the macro.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31620,
      "normPath": "Macros Macro Get",
      "path": "Macros Macro Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Removes a macro created on this device.",
        "params": [
          {
            "description": "The name of the macro that is removed.",
            "name": "Name",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31621,
      "normPath": "Macros Macro Remove",
      "path": "Macros Macro Remove",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Removes all of the macros created on this device.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30695,
      "normPath": "Macros Macro RemoveAll",
      "path": "Macros Macro RemoveAll",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Renames a macro created on this device.",
        "params": [
          {
            "description": "The name of the macro that is renamed.",
            "name": "Name",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The new name of the macro.",
            "name": "NewName",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "False",
            "description": "Overwrites the existing content or not.",
            "name": "Overwrite",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31622,
      "normPath": "Macros Macro Rename",
      "path": "Macros Macro Rename",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sets the role for a macro.",
        "params": [
          {
            "description": "The name of the macro that is set.",
            "name": "Name",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The role that is set for this macro.",
            "name": "Role",
            "required": false,
            "valuespace": {
              "Values": [
                "Admin",
                "Audit",
                "User",
                "Integrator",
                "RoomControl"
              ],
              "multiple": "255",
              "type": "LiteralArray"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31623,
      "normPath": "Macros Macro Roles Set",
      "path": "Macros Macro Roles Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Saves the details of a macro. This is a multiline command.",
        "multiline": "True",
        "params": [
          {
            "description": "The name of the macro that is saved.",
            "name": "Name",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "True",
            "description": "Overwrites the existing content or not.",
            "name": "Overwrite",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "True",
            "description": "Translates current JavaScript language features into EcmaScript 5.0/5.1.",
            "name": "Transpile",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31624,
      "normPath": "Macros Macro Save",
      "path": "Macros Macro Save",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Restarts all of the macros set up on this device.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 28259,
      "normPath": "Macros Runtime Restart",
      "path": "Macros Runtime Restart",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Starts all of the macros set up on this device.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 28260,
      "normPath": "Macros Runtime Start",
      "path": "Macros Runtime Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the current status of the macros runtime on this device.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 28261,
      "normPath": "Macros Runtime Status",
      "path": "Macros Runtime Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stops all of the macros set up on this device.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 28262,
      "normPath": "Macros Runtime Stop",
      "path": "Macros Runtime Stop",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Triggers a Message Send event which sends text to any listening clients.",
        "params": [
          {
            "description": "The text that the message contains.",
            "name": "Text",
            "required": true,
            "valuespace": {
              "MaxLength": "1024",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 34378,
      "normPath": "Message Send",
      "path": "Message Send",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ],
        "description": "Verifies if the SMTP server is configured in the instance emails are not being sent."
      },
      "id": 29763,
      "normPath": "Network SMTP VerifyConfig",
      "path": "Network SMTP VerifyConfig",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Verifies if the SMTP server is configured in the instance emails are not being sent.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30891,
      "normPath": "Network SMTP VerifyConfig",
      "path": "Network SMTP VerifyConfig",
      "products": [
        "havella"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Configures the device to connect to a specific Wi-Fi network. This is only available if the Wi-Fi is enabled on the device. To do this, you must unplug the ethernet cable. Then, you must connect to the terminal over Wi-Fi.",
        "params": [
          {
            "description": "The policy for allowing a web connection with missing Certificate Authentication (CA). False: Not Allowed, True: Allowed",
            "name": "AllowMissingCA",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The anonymous identity, if applicable.",
            "name": "AnonymousIdentity",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The username for the Wi-Fi connection, if applicable.",
            "name": "Identity",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The password for the Wi-Fi connection, if applicable.",
            "name": "Password",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The SSID for the Wi-Fi connection.",
            "name": "SSID",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The encryption type for the Wi-Fi connection. We support: open networks (not secured), WPA-PSK (AES), WPA2-PSK (AES), EAP-TLS, EAP-TTLS, EAP-FAST, PEAP, EAP-MSCHAPv2, EAP-GTC",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Open",
                "Wpa2-psk",
                "Wpa2-eap-fast",
                "Wpa2-eap-peap",
                "Wpa2-eap-tls",
                "Wpa2-eap-ttls"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33539,
      "normPath": "Network Wifi Configure",
      "path": "Network Wifi Configure",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deletes the specified Wi-Fi network connection from the device.  This command is only available if Wi-Fi services are turned on and ethernet is disconnected.",
        "params": [
          {
            "description": "The SSID for the Wi-Fi connection.",
            "name": "SSID",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31685,
      "normPath": "Network Wifi Delete",
      "path": "Network Wifi Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lists the details of the current Wi-Fi connection. This command is only available if Wi-Fi services are turned on and ethernet is disconnected.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30699,
      "normPath": "Network Wifi List",
      "path": "Network Wifi List",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Scans for available Wi-Fi networks.",
        "params": [
          {
            "default": "10",
            "description": "The duration of the Wi-Fi scan, in seconds.",
            "name": "Duration",
            "required": false,
            "valuespace": {
              "Max": "30",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31686,
      "normPath": "Network Wifi Scan Start",
      "path": "Network Wifi Scan Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stops an ongoing Wi-Fi scan.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30701,
      "normPath": "Network Wifi Scan Stop",
      "path": "Network Wifi Scan Stop",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Register peripherals that are connected to the device, such as control systems and touch panels. The registered peripherals are displayed on the web interface under Configuration > Peripherals. This command should be used when the peripheral connects to the codec for the first time or when the software version on the peripheral has changed. The list of connected devices is available with the command xStatus Peripherals ConnectedDevice [n] Status.",
        "params": [
          {
            "default": "",
            "description": "The device's hardware number.",
            "name": "HardwareInfo",
            "required": false,
            "valuespace": {
              "MaxLength": "100",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "A unique ID for the device you are connecting to, typically a MAC address.",
            "name": "ID",
            "required": true,
            "valuespace": {
              "MaxLength": "100",
              "MinLength": "1",
              "type": "String"
            }
          },
          {
            "default": "",
            "description": "Define a name for the device.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "100",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "",
            "description": "Network address for the device you are connecting to.",
            "name": "NetworkAddress",
            "required": false,
            "valuespace": {
              "MaxLength": "100",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "",
            "description": "The device's serial number.",
            "name": "SerialNumber",
            "required": false,
            "valuespace": {
              "MaxLength": "100",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "",
            "description": "Software version the device is running.",
            "name": "SoftwareInfo",
            "required": false,
            "valuespace": {
              "MaxLength": "100",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Define the type of peripheral.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "AudioAmplifier",
                "AudioMicrophone",
                "Byod",
                "ControlSystem",
                "Other",
                "TouchPanel",
                "RoomScheduler"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 33739,
      "normPath": "Peripherals Connect",
      "path": "Peripherals Connect",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "When a peripheral is registered as a connected device, you can set it to send a heartbeat to the codec to let the codec know that it is still connected. This will keep the device on the xStatus Peripherals ConnectedDevice list. If the peripheral is not set to send a heartbeat, the device will disappear from the list after a while. Note: Does not apply to cameras.",
        "params": [
          {
            "description": "A unique ID for the device you are connecting to, typically a MAC address.",
            "name": "ID",
            "required": true,
            "valuespace": {
              "MaxLength": "100",
              "MinLength": "1",
              "type": "String"
            }
          },
          {
            "default": "60",
            "description": "Set how long the device will send heartbeat.",
            "name": "Timeout",
            "required": false,
            "valuespace": {
              "Max": "65535",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 33740,
      "normPath": "Peripherals HeartBeat",
      "path": "Peripherals HeartBeat",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lists all currently and previously connected peripherals.",
        "params": [
          {
            "description": "Limit the search to currently connected devices.",
            "name": "Connected",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "All",
            "description": "Limit the search by device type.",
            "name": "Type",
            "required": false,
            "valuespace": {
              "Values": [
                "All",
                "AudioAmplifier",
                "AudioMicrophone",
                "ControlSystem",
                "ISDNLink",
                "Other",
                "TouchPanel"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31541,
      "normPath": "Peripherals List",
      "path": "Peripherals List",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start device discovery to detect ISDN Links in the same network.",
        "params": [
          {
            "default": "Off",
            "description": "You can select to automatically pair the detected device to the video conferencing device.",
            "name": "AutoPairing",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Only look for ISDN Link.",
            "name": "DeviceType",
            "required": false,
            "valuespace": {
              "Values": [
                "ISDNLink"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "10",
            "description": "Set a maximum time for the search from 3 to 60 seconds.",
            "name": "Timeout",
            "required": false,
            "valuespace": {
              "Max": "60",
              "Min": "3",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31542,
      "normPath": "Peripherals Pairing DeviceDiscovery Start",
      "path": "Peripherals Pairing DeviceDiscovery Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Pair an ISDN Link to a video conferencing device.",
        "params": [
          {
            "description": "Enter the MAC address for the ISDN Link you wish to pair to the video conferencing device.",
            "name": "MacAddress",
            "required": true,
            "valuespace": {
              "MaxLength": "1450",
              "MinLength": "1",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31543,
      "normPath": "Peripherals Pairing Pair",
      "path": "Peripherals Pairing Pair",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Unpair the video conferencing device from an ISDN Link, when the two have contact.",
        "params": [
          {
            "description": "Enter the MAC address for the ISDN Link you wish to unpair from the video conferencing device.",
            "name": "MacAddress",
            "required": true,
            "valuespace": {
              "MaxLength": "100",
              "MinLength": "1",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31544,
      "normPath": "Peripherals Pairing Unpair",
      "path": "Peripherals Pairing Unpair",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Force unpair a video conferencing device from an ISDN Link when a connection has been lost. Note: You must also unpair the ISDN Link to be able to pair it to another video conferencing device.",
        "params": [
          {
            "description": "Mac address of the ISDN Link in the format \"xx:xx:xx:xx:xx:xx\".",
            "name": "ID",
            "required": true,
            "valuespace": {
              "MaxLength": "100",
              "MinLength": "1",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31545,
      "normPath": "Peripherals Purge",
      "path": "Peripherals Purge",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Add a new contact to the local phonebook. The command returns the ContactId, which is a unique string that identifies the contact; typically, the format is “localContactId-n”. You can add several contact methods to a contact using the xCommand Phonebook ContactMethod Add command. Note that only the first contact method will appear in the Favorites list on the touch controller. All contact methods are available on the other UIs.",
        "params": [
          {
            "description": "Set a call rate.",
            "name": "CallRate",
            "required": false,
            "valuespace": {
              "Max": "6000",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "Auto",
            "description": "Select a call type (audio or video). By selecting Auto, the device will detect the call type automatically.",
            "name": "CallType",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Audio",
                "Video"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the device type.",
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Mobile",
                "Other",
                "Telephone",
                "Video"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier for the folder that you want to store the contact in. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook Folder Add command was issued to make the folder.",
            "name": "FolderId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Currently not in use.",
            "name": "ImageURL",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The name of the contact.",
            "name": "Name",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The phone number or address of the contact.",
            "name": "Number",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Select the Auto, Spark, SIP, H323 or H320 protocol.",
            "name": "Protocol",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "H320",
                "H323",
                "SIP",
                "Spark"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Tag the contact as a Favorite, or untag an already tagged contact.",
            "name": "Tag",
            "required": false,
            "valuespace": {
              "Values": [
                "Untagged",
                "Favorite"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The title of the contact.",
            "name": "Title",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33883,
      "normPath": "Phonebook Contact Add",
      "path": "Phonebook Contact Add",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Delete an existing contact from the local phonebook.",
        "params": [
          {
            "description": "The unique identifier for the contact. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook Contact Add command was issued to make the contact.",
            "name": "ContactId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31626,
      "normPath": "Phonebook Contact Delete",
      "path": "Phonebook Contact Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Add contact details for an existing contact in the local phonebook. The command returns the ContactMethodId, which is a unique string that identifies the contact method; typically, the format is “n”. You can add several contact methods to a contact. Note that only the first contact method will appear in the Favorites list on the device's user interface. The first contact method may have been created when issuing the xCommand Phonebook Contact Add command to make the contact. All contact methods are available in the API and on the web interface.",
        "params": [
          {
            "description": "Set a call rate.",
            "name": "CallRate",
            "required": false,
            "valuespace": {
              "Max": "6000",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "Auto",
            "description": "Select a call type (audio or video). By selecting Auto, the device will detect the call type automatically.",
            "name": "CallType",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Audio",
                "Video"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier for the contact that you want to add a contact method to. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook Contact Add command was issued to make the contact.",
            "name": "ContactId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Set which type of device to call to.",
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Mobile",
                "Other",
                "Telephone",
                "Video"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The phone number or address of the contact.",
            "name": "Number",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Select protocol.",
            "name": "Protocol",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "H320",
                "H323",
                "SIP",
                "Spark"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31628,
      "normPath": "Phonebook ContactMethod Add",
      "path": "Phonebook ContactMethod Add",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Delete a contact method from an existing contact in the local phonebook.",
        "params": [
          {
            "description": "The unique identifier for the contact you want to change. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook Contact Add command was issued to make the contact.",
            "name": "ContactId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The unique identifier for the contact method you want to delete. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook ContactMethod Add command was issued to make the contact method.",
            "name": "ContactMethodId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31629,
      "normPath": "Phonebook ContactMethod Delete",
      "path": "Phonebook ContactMethod Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Modify details about the contact method for an existing contact in the local phonebook.",
        "params": [
          {
            "description": "Set a call rate.",
            "name": "CallRate",
            "required": false,
            "valuespace": {
              "Max": "6000",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select a call type (audio or video). By selecting Auto, the device will detect the call type automatically.",
            "name": "CallType",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Audio",
                "Video"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier for the contact. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook Contact Add command was issued to make the contact.",
            "name": "ContactId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The unique identifier for the contact method you want to modify. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook ContactMethod Add or xCommand Phonebook Contact Add commands were issued to make the contact method.",
            "name": "ContactMethodId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Set which type of device to call to.",
            "name": "Device",
            "required": false,
            "valuespace": {
              "Values": [
                "Mobile",
                "Other",
                "Telephone",
                "Video"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The phone number or address of the contact.",
            "name": "Number",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Select protocol.",
            "name": "Protocol",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "H320",
                "H323",
                "SIP",
                "Spark"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31630,
      "normPath": "Phonebook ContactMethod Modify",
      "path": "Phonebook ContactMethod Modify",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Modify contact details of an existing contact in the local phonebook. The following parameters can be changed using this command: Name, FolderId, ImageURL and Title. You must use the xCommand Phonebook ContactMethod Modify command to change the other parameters: Number, Protocol, CallRate, CallType and Device.",
        "params": [
          {
            "description": "The unique identifier for the contact you want to modify. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook Contact Add command was issued to make the contact.",
            "name": "ContactId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "A unique identifier for the folder. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook Folder Add command was issued.",
            "name": "FolderId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Currently not in use.",
            "name": "ImageURL",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The name of the contact.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Tag the contact as a Favorite, or untag an already tagged contact.",
            "name": "Tag",
            "required": false,
            "valuespace": {
              "Values": [
                "Untagged",
                "Favorite"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The title of the contact.",
            "name": "Title",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31627,
      "normPath": "Phonebook Contact Modify",
      "path": "Phonebook Contact Modify",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Phonebook entries can be stored in folders. Use this command to add a folder to the local phonebook. The command returns the FolderId, which is a unique string that identifies the folder; typically, the format is “localGroupId-n”.",
        "params": [
          {
            "description": "The name of the folder.",
            "name": "Name",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The unique identifier for the parent folder. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook Folder Add command was issued to make the parent folder.",
            "name": "ParentFolderId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31631,
      "normPath": "Phonebook Folder Add",
      "path": "Phonebook Folder Add",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Delete an existing folder from the local phonebook.",
        "params": [
          {
            "description": "The unique identifier for the folder. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook Folder Add command was issued to make the folder.",
            "name": "FolderId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31632,
      "normPath": "Phonebook Folder Delete",
      "path": "Phonebook Folder Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Modify an existing phonebook folder.",
        "params": [
          {
            "description": "The unique identifier for the folder. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook Folder Add command was issued to make the folder.",
            "name": "FolderId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The name of the contact.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The unique identifier for the parent folder. The identifier will be returned by an xCommand Phonebook Search command. It was also returned when the xCommand Phonebook Folder Add command was issued to make the parent folder.",
            "name": "ParentFolderId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31633,
      "normPath": "Phonebook Folder Modify",
      "path": "Phonebook Folder Modify",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The search command lets you search in both the local and corporate phone books. A search gives a ResultSet. The total number of folders and contacts (TotalRows) is always included in the result set when searching the local phone book. When searching a corporate phonebook the total number of folders and contacts may not be included. Whether it is included or not depends on the backend corporate phonebook service (e.g. CUCM, VCS, TMS) and its version.",
        "params": [
          {
            "default": "0",
            "description": "Limit the number of records in the result set to this number. For example, if the limit is set to 2, the ResultSet will contain only 2 entries even if the total number of hits is larger.",
            "name": "ContactMethodLimit",
            "required": false,
            "valuespace": {
              "Max": "10",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "Any",
            "description": "Search all contact types, or limit the search to folders or individual contacts.",
            "name": "ContactType",
            "required": false,
            "valuespace": {
              "Values": [
                "Any",
                "Folder",
                "Contact"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Search only in the specified folder. The FolderId (string) is listed in the ResultSet of a search result containing folders.",
            "name": "FolderId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "50",
            "description": "Limit the number of records in the result set to this number. For example, if the limit is set to 10, the ResultSet will contain only 10 entries (Contacts and Folders) even if the total number of hits is larger. The maximum limit is 1000.",
            "name": "Limit",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "0",
            "description": "Get records starting with this offset in a search. The default value is 0. Offset is used together with Limit to support paging.",
            "name": "Offset",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The identifier of the phonebook server that will be searched. See the xConfiguration Phonebook Server ID setting.",
            "name": "PhonebookId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "Local",
            "description": "Define whether to search the local phone book or the corporate phonebook.",
            "name": "PhonebookType",
            "required": false,
            "valuespace": {
              "Values": [
                "Corporate",
                "Local"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "True",
            "description": "This parameter will only have effect when searching the local phone book. The setting determines whether a local phone book search should be limited to the given FolderId, or also recursively search in its subfolders. If not specified, the search will be recursive. When issuing the command without specifying any parameters, all folders, contacts and contact methods in the local phone book will be returned.",
            "name": "Recursive",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Currently not in use.",
            "name": "SearchField",
            "required": false,
            "valuespace": {
              "Values": [
                "Name",
                "Number"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "All",
            "description": "Only available for Cisco Webex registered devices. Filter search results by choosing the type of results you want to see. All: Search in all directories. Available for Cisco Webex registered devices. People: Filter results to include only people. Available for Cisco Webex registered devices. Pmr: Filter results to include only Personal Meeting Rooms. Available for full cloud and Webex Edge for Devices (cloud aware); as well as, Cisco Webex registered devices. Rooms: Filter results to include only rooms. Available for Cisco Webex registered devices. ",
            "name": "SearchFilter",
            "required": false,
            "valuespace": {
              "Values": [
                "All",
                "Rooms",
                "People",
                "Pmr"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Search for entries containing this string (note that the entry does not have to begin with the string). If no FolderId is specified, all folders / phonebook directories will be searched.",
            "name": "SearchString",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Limits the search to contacts that have been tagged as favorite or the untagged contacts.",
            "name": "Tag",
            "required": false,
            "valuespace": {
              "Values": [
                "Untagged",
                "Favorite"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33884,
      "normPath": "Phonebook Search",
      "path": "Phonebook Search",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Open a media stream from the selected presentation source. You can combine multiple presentation sources in a single presentation video stream (the maximum number of different input sources depend on the type of video conferencing device) by adding multiple ConnectorId or PresentationSource parameters in the same command. The order in which you write them in the command determines the order in which the sources show up on the screen. You cannot use a mix of identifier types in the same command; use either ConnectorId or PresentationSource.",
        "params": [
          {
            "description": "Select the video input source to be used for presentation, identified by connectorId.",
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "multiple": "1",
              "type": "IntegerArray"
            }
          },
          {
            "description": "You can have multiple presentations running simultaneously, as instances. The instance number is set automatically or can be specified by you. This number can then be used to stop a specific presentation.",
            "name": "Instance",
            "required": false,
            "valuespace": {
              "Values": [
                "New",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Equal",
            "description": "Select the layout of the presentation if the stream is composed of multiple input sources. Equal: The presentations are shown in same-sized images. There can be a maximum of four images on screen. Prominent: The first presentation source is shown as a large image, and the next presentation sources are shown as smaller images placed below.",
            "name": "Layout",
            "required": false,
            "valuespace": {
              "Values": [
                "Equal",
                "Prominent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the video input source to be used for presentation, identified by source number.",
            "name": "PresentationSource",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "multiple": "1",
              "type": "IntegerArray"
            }
          },
          {
            "default": "LocalRemote",
            "description": "Select whether the presentation is shown local and/or remote. LocalRemote: The presentation is shown both local and remote. LocalOnly: The presentation is shown locally.",
            "name": "SendingMode",
            "required": false,
            "valuespace": {
              "Values": [
                "LocalRemote",
                "LocalOnly"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34122,
      "normPath": "Presentation Start",
      "path": "Presentation Start",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Open a media stream from the selected presentation source. You can combine multiple presentation sources in a single presentation video stream (the maximum number of different input sources depend on the type of video conferencing device) by adding multiple ConnectorId or PresentationSource parameters in the same command. The order in which you write them in the command determines the order in which the sources show up on the screen. You cannot use a mix of identifier types in the same command; use either ConnectorId or PresentationSource.",
        "params": [
          {
            "description": "Select the video input source to be used for presentation, identified by connectorId.",
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          },
          {
            "description": "You can have multiple presentations running simultaneously, as instances. The instance number is set automatically or can be specified by you. This number can then be used to stop a specific presentation.",
            "name": "Instance",
            "required": false,
            "valuespace": {
              "Values": [
                "New",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Equal",
            "description": "Select the layout of the presentation if the stream is composed of multiple input sources. Equal: The presentations are shown in same-sized images. There can be a maximum of four images on screen. Prominent: The first presentation source is shown as a large image, and the next presentation sources are shown as smaller images placed below.",
            "name": "Layout",
            "required": false,
            "valuespace": {
              "Values": [
                "Equal",
                "Prominent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the video input source to be used for presentation, identified by source number.",
            "name": "PresentationSource",
            "required": false,
            "valuespace": {
              "Values": [
                "None",
                "1",
                "2"
              ],
              "multiple": "4",
              "type": "LiteralArray"
            }
          },
          {
            "default": "LocalRemote",
            "description": "Select whether the presentation is shown local and/or remote. LocalRemote: The presentation is shown both local and remote. LocalOnly: The presentation is shown locally.",
            "name": "SendingMode",
            "required": false,
            "valuespace": {
              "Values": [
                "LocalRemote",
                "LocalOnly"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35642,
      "normPath": "Presentation Start",
      "path": "Presentation Start",
      "products": [
        "havella",
        "hopen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Open a media stream from the selected presentation source. You can combine multiple presentation sources in a single presentation video stream (the maximum number of different input sources depend on the type of video conferencing device) by adding multiple ConnectorId or PresentationSource parameters in the same command. The order in which you write them in the command determines the order in which the sources show up on the screen. You cannot use a mix of identifier types in the same command; use either ConnectorId or PresentationSource.",
        "params": [
          {
            "description": "Select the video input source to be used for presentation, identified by connectorId.",
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          },
          {
            "description": "You can have multiple presentations running simultaneously, as instances. The instance number is set automatically or can be specified by you. This number can then be used to stop a specific presentation.",
            "name": "Instance",
            "required": false,
            "valuespace": {
              "Values": [
                "New",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Equal",
            "description": "Select the layout of the presentation if the stream is composed of multiple input sources. Equal: The presentations are shown in same-sized images. There can be a maximum of four images on screen. Prominent: The first presentation source is shown as a large image, and the next presentation sources are shown as smaller images placed below.",
            "name": "Layout",
            "required": false,
            "valuespace": {
              "Values": [
                "Equal",
                "Prominent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the video input source to be used for presentation, identified by source number.",
            "name": "PresentationSource",
            "required": false,
            "valuespace": {
              "Values": [
                "None",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ],
              "multiple": "4",
              "type": "LiteralArray"
            }
          },
          {
            "default": "LocalRemote",
            "description": "Select whether the presentation is shown local and/or remote. LocalRemote: The presentation is shown both local and remote. LocalOnly: The presentation is shown locally.",
            "name": "SendingMode",
            "required": false,
            "valuespace": {
              "Values": [
                "LocalRemote",
                "LocalOnly"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35644,
      "normPath": "Presentation Start",
      "path": "Presentation Start",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Open a media stream from the selected presentation source. You can combine multiple presentation sources in a single presentation video stream (the maximum number of different input sources depend on the type of video conferencing device) by adding multiple ConnectorId or PresentationSource parameters in the same command. The order in which you write them in the command determines the order in which the sources show up on the screen. You cannot use a mix of identifier types in the same command; use either ConnectorId or PresentationSource.",
        "params": [
          {
            "description": "Select the video input source to be used for presentation, identified by connectorId.",
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          },
          {
            "description": "You can have multiple presentations running simultaneously, as instances. The instance number is set automatically or can be specified by you. This number can then be used to stop a specific presentation.",
            "name": "Instance",
            "required": false,
            "valuespace": {
              "Values": [
                "New",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Equal",
            "description": "Select the layout of the presentation if the stream is composed of multiple input sources. Equal: The presentations are shown in same-sized images. There can be a maximum of four images on screen. Prominent: The first presentation source is shown as a large image, and the next presentation sources are shown as smaller images placed below.",
            "name": "Layout",
            "required": false,
            "valuespace": {
              "Values": [
                "Equal",
                "Prominent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the video input source to be used for presentation, identified by source number.",
            "name": "PresentationSource",
            "required": false,
            "valuespace": {
              "Values": [
                "None",
                "1",
                "2",
                "3"
              ],
              "multiple": "4",
              "type": "LiteralArray"
            }
          },
          {
            "default": "LocalRemote",
            "description": "Select whether the presentation is shown local and/or remote. LocalRemote: The presentation is shown both local and remote. LocalOnly: The presentation is shown locally.",
            "name": "SendingMode",
            "required": false,
            "valuespace": {
              "Values": [
                "LocalRemote",
                "LocalOnly"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35645,
      "normPath": "Presentation Start",
      "path": "Presentation Start",
      "products": [
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Open a media stream from the selected presentation source. You can combine multiple presentation sources in a single presentation video stream (the maximum number of different input sources depend on the type of video conferencing device) by adding multiple ConnectorId or PresentationSource parameters in the same command. The order in which you write them in the command determines the order in which the sources show up on the screen. You cannot use a mix of identifier types in the same command; use either ConnectorId or PresentationSource.",
        "params": [
          {
            "description": "Select the video input source to be used for presentation, identified by connectorId.",
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "multiple": "1",
              "type": "IntegerArray"
            }
          },
          {
            "description": "You can have multiple presentations running simultaneously, as instances. The instance number is set automatically or can be specified by you. This number can then be used to stop a specific presentation.",
            "name": "Instance",
            "required": false,
            "valuespace": {
              "Values": [
                "New",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Equal",
            "description": "Select the layout of the presentation if the stream is composed of multiple input sources. Equal: The presentations are shown in same-sized images. There can be a maximum of four images on screen. Prominent: The first presentation source is shown as a large image, and the next presentation sources are shown as smaller images placed below.",
            "name": "Layout",
            "required": false,
            "valuespace": {
              "Values": [
                "Equal",
                "Prominent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the video input source to be used for presentation, identified by source number.",
            "name": "PresentationSource",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "multiple": "1",
              "type": "IntegerArray"
            }
          },
          {
            "default": "LocalRemote",
            "description": "Select whether the presentation is shown local and/or remote. LocalRemote: The presentation is shown both local and remote. LocalOnly: The presentation is shown locally.",
            "name": "SendingMode",
            "required": false,
            "valuespace": {
              "Values": [
                "LocalRemote",
                "LocalOnly"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35658,
      "normPath": "Presentation Start",
      "path": "Presentation Start",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop the media stream from the presentation source.",
        "params": [
          {
            "description": "When you have multiple presentations running, specify which presentation instance you wish to stop. The instance number is determined when the presentation is started.",
            "name": "Instance",
            "required": false,
            "valuespace": {
              "Values": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select which local presentation you wish to stop, identified by source number.",
            "name": "PresentationSource",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33742,
      "normPath": "Presentation Stop",
      "path": "Presentation Stop",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop the media stream from the presentation source.",
        "params": [
          {
            "description": "When you have multiple presentations running, specify which presentation instance you wish to stop. The instance number is determined when the presentation is started.",
            "name": "Instance",
            "required": false,
            "valuespace": {
              "Values": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select which local presentation you wish to stop, identified by source number.",
            "name": "PresentationSource",
            "required": false,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33931,
      "normPath": "Presentation Stop",
      "path": "Presentation Stop",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop the media stream from the presentation source.",
        "params": [
          {
            "description": "When you have multiple presentations running, specify which presentation instance you wish to stop. The instance number is determined when the presentation is started.",
            "name": "Instance",
            "required": false,
            "valuespace": {
              "Values": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select which local presentation you wish to stop, identified by source number.",
            "name": "PresentationSource",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34025,
      "normPath": "Presentation Stop",
      "path": "Presentation Stop",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop the media stream from the presentation source.",
        "params": [
          {
            "description": "When you have multiple presentations running, specify which presentation instance you wish to stop. The instance number is determined when the presentation is started.",
            "name": "Instance",
            "required": false,
            "valuespace": {
              "Values": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select which local presentation you wish to stop, identified by source number.",
            "name": "PresentationSource",
            "required": false,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34066,
      "normPath": "Presentation Stop",
      "path": "Presentation Stop",
      "products": [
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Starts installing the software upgrade if you wish to install it before it is set to do so.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26450,
      "normPath": "Provisioning CompleteUpgrade",
      "path": "Provisioning CompleteUpgrade",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Login command for the Extension Mobility service. You log in to the Extension Mobility service with a username (UserId) and pin code (Pin). The username and pin code are set up in CUCM. CUCM also supports multiple profiles for a user. If you, for a user that has multiple profiles, submit a login command with only username and pin code, CUCM will send a list of available profiles back to the device. Then the device will create corresponding ExtensionMobilityProfileSelection Profile events, so that a new login command, which contains the Profile parameter in addition to the username and pin code, can be submitted.",
        "params": [
          {
            "description": "A valid pin code for the user, as set up in CUCM.",
            "name": "Pin",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "1",
              "type": "String"
            }
          },
          {
            "description": "A valid profile for the user, as set up in CUCM. This parameter applies only if the user has multiple profiles.",
            "name": "Profile",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "1",
              "type": "String"
            }
          },
          {
            "description": "A valid username, as set up in CUCM.",
            "name": "UserId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "1",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33743,
      "normPath": "Provisioning CUCM ExtensionMobility Login",
      "path": "Provisioning CUCM ExtensionMobility Login",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "This command will log you out of your Extension Mobility profile.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26449,
      "normPath": "Provisioning CUCM ExtensionMobility Logout",
      "path": "Provisioning CUCM ExtensionMobility Logout",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Postpones the installing of the software upgrade.",
        "params": [
          {
            "description": "Provide information about why the upgrade was postponed.",
            "name": "Reason",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Set how long to postpone the upgrade. The value is in seconds.",
            "name": "SecondsToPostpone",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33744,
      "normPath": "Provisioning PostponeUpgrade",
      "path": "Provisioning PostponeUpgrade",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Name",
            "required": true,
            "valuespace": {
              "Values": [
                "Briefing",
                "Classroom",
                "Standard"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ],
        "description": "Activate a room type template, that has been configured from the web interface."
      },
      "id": 29307,
      "normPath": "Provisioning RoomType Activate",
      "path": "Provisioning RoomType Activate",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Activate a room type template, that has been configured from the web interface.",
        "params": [
          {
            "description": "Briefing: Activate the briefing room template. Classroom: Activate the class room template. Standard: Turn off room templates.",
            "name": "Name",
            "required": true,
            "valuespace": {
              "Values": [
                "Briefing",
                "Classroom",
                "Standard"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 31689,
      "normPath": "Provisioning RoomType Activate",
      "path": "Provisioning RoomType Activate",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Add or update the customization template that details the custom elements of the device. Examples of custom elements are: branding images, macros, favorites, sign-in banner, and in-room control panels.",
        "params": [
          {
            "description": "The checksum is used to ensure the integrity of the downloaded customization template. When using HTTP, it is mandatory to add a checksum. When using HTTPS, it is mandatory to add a checksum only if you are downloading the template from a server that presents an unsigned certificate, or a self-signed certificate that is not in the CA list of the device (not trusted).",
            "name": "Checksum",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "SHA512",
            "description": "The algorithm that is used to calculate the checksum.",
            "name": "ChecksumType",
            "required": false,
            "valuespace": {
              "Values": [
                "SHA512"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Add",
            "description": "If the mode is set to Add, all items listed in the uploaded file are added to the existing customization template. If the mode is set to Replace, the newer customization template that is uploaded, is compared against the previously uploaded template. Items that are not present in the newer file are removed. In both cases, items with the same name are overwritten.",
            "name": "Mode",
            "required": false,
            "valuespace": {
              "Values": [
                "Add",
                "Replace"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Other",
            "description": "Specifies whether the customization template is used for provisioning or for another purpose. When the value is Provisioning, the configurations (xConfiguration) in the template are ignored, and the provisioning system (CUCM or TMS) can set configurations like they normally do. CUCM always acts as if this parameter is set to Provisioning. Note that some configurations may be specific to one device, and you may end up with devices that you cannot reach if you provision those configurations to more than one device.",
            "name": "Origin",
            "required": false,
            "valuespace": {
              "Values": [
                "Other",
                "Provisioning"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The URL of the customization template.",
            "name": "URL",
            "required": true,
            "valuespace": {
              "MaxLength": "2048",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 33745,
      "normPath": "Provisioning Service Fetch",
      "path": "Provisioning Service Fetch",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reactivate the Proximity services that were deactivated with xCommand Proximity Services Deactivate.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26455,
      "normPath": "Proximity Services Activate",
      "path": "Proximity Services Activate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command deactivates all proximity services on the device. To reactivate proximity services use the command xCommand Proximity Services Activate.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30523,
      "normPath": "Proximity Services Deactivate",
      "path": "Proximity Services Deactivate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Cancel the scheduled daily room cleanup.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33746,
      "normPath": "RoomCleanup Cancel",
      "path": "RoomCleanup Cancel",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Run a cleanup of the specified type of data, as applicable.",
        "params": [
          {
            "description": "The type of data to be deleted. Whiteboards: Delete all whiteboards on the device. WebData: Delete all web browsing data on the device.",
            "name": "ContentType",
            "required": false,
            "valuespace": {
              "Values": [
                "Whiteboards",
                "WebData"
              ],
              "multiple": "2",
              "type": "LiteralArray"
            }
          },
          {
            "default": "0",
            "description": "The time delay before cleanup begins (seconds).",
            "name": "Delay",
            "required": false,
            "valuespace": {
              "Max": "60",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33747,
      "normPath": "RoomCleanup Run",
      "path": "RoomCleanup Run",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Activate one of the locally stored presets. Note that information about all video input sources, and pan, tilt, zoom and focus values for all cameras are included in the same preset. In contrast, the xCommand Camera Preset commands applies to individual cameras only.",
        "params": [
          {
            "description": "The ID of the preset you want to activate.",
            "name": "PresetId",
            "required": true,
            "valuespace": {
              "Max": "15",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31635,
      "normPath": "RoomPreset Activate",
      "path": "RoomPreset Activate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Delete a preset. Note that information about all video input sources, and pan, tilt, zoom and focus values for all cameras are included in the same preset. In contrast, the xCommand Camera Preset commands applies to individual cameras only.",
        "params": [
          {
            "description": "The ID of the preset you want to delete.",
            "name": "PresetId",
            "required": true,
            "valuespace": {
              "Max": "15",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31636,
      "normPath": "RoomPreset Clear",
      "path": "RoomPreset Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Store the connector selections for all video input sources and the current position (pan and tilt), zoom and focus values for all cameras. Note that information about all video input sources, and pan, tilt, zoom and focus values for all cameras are included in the same preset. The device may hold 15 such predefined video input presets. These presets are available for far end control, i.e. they are referred in the PresetId parameter of the xCommand FarEndControl Preset Activate command. In contrast, the xCommand Camera Preset commands applies to individual cameras only. Those presets are not available for far end control.",
        "params": [
          {
            "description": "Enter a description of the camera preset.",
            "name": "Description",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The ID of this preset.",
            "name": "PresetId",
            "required": true,
            "valuespace": {
              "Max": "15",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Not applicable. If you want to ensure that a preset only affects camera positions we recommend that you select Camera.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "All",
                "Camera"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31637,
      "normPath": "RoomPreset Store",
      "path": "RoomPreset Store",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Uploads CA security certificates to this device. This is a multiline command.",
        "multiline": "True",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26459,
      "normPath": "Security Certificates CA Add",
      "path": "Security Certificates CA Add",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deletes a CA security certificate from this device.",
        "params": [
          {
            "description": "The unique Identifier for the certificate that is deleted. You can get the fingerprint ID by running xCommand Security Certificates CA Show.",
            "name": "Fingerprint",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31551,
      "normPath": "Security Certificates CA Delete",
      "path": "Security Certificates CA Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the details for the CA security certificates on this device.",
        "params": [
          {
            "default": "Text",
            "description": "Specifies the format of the listed certificates, PEM (Privacy Enhanced Mail) or plain text.",
            "name": "Format",
            "required": false,
            "valuespace": {
              "Values": [
                "PEM",
                "Text"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31552,
      "normPath": "Security Certificates CA Show",
      "path": "Security Certificates CA Show",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35328,
      "normPath": "Security Certificates CUCM CTL Delete",
      "path": "Security Certificates CUCM CTL Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35329,
      "normPath": "Security Certificates CUCM CTL Show",
      "path": "Security Certificates CUCM CTL Show",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35330,
      "normPath": "Security Certificates CUCM ITL Show",
      "path": "Security Certificates CUCM ITL Show",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "default": "PEM",
            "name": "Format",
            "required": false,
            "valuespace": {
              "Values": [
                "PEM",
                "Text"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 35331,
      "normPath": "Security Certificates CUCM MIC Show",
      "path": "Security Certificates CUCM MIC Show",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Activates a security certificate on this device.",
        "params": [
          {
            "description": "The unique identifier (ID) for the certificate that is activated. You can get the fingerprint ID by running xCommand Security Certificates Services Show.",
            "name": "Fingerprint",
            "required": true,
            "valuespace": {
              "MaxLength": "1024",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The purpose of this certificate. 802.1X: For applying 802.1x security authentication. Audit: For performing external audit logging. HTTPS: For applying HTTPS security authentication. HttpClient: For use with Mutual TLS authentication when using the xcommand HttpClient API. Pairing: For pairing touch devices that are not directly connected to the endpoint. SIP: For applying SIP security authentication. WebexIdentity: For identifying the device in end-to-end encryption scenarios on the Cisco Webex cloud.",
            "name": "Purpose",
            "required": true,
            "valuespace": {
              "Values": [
                "802.1X",
                "HTTPS",
                "Audit",
                "SIP",
                "Pairing",
                "WebexIdentity",
                "HttpClient"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 34362,
      "normPath": "Security Certificates Services Activate",
      "path": "Security Certificates Services Activate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Uploads security certificates to this device. This is a multiline command.",
        "multiline": "True",
        "params": [
          {
            "default": "",
            "description": "Stores the details of the private key for the password.",
            "name": "PrivateKeyPassword",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31554,
      "normPath": "Security Certificates Services Add",
      "path": "Security Certificates Services Add",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deactivates security certificates on this device.",
        "params": [
          {
            "description": "The unique Identifier for the certificate that is deactivated. You can get the fingerprint ID by running xCommand Security Certificates Services Show.",
            "name": "Fingerprint",
            "required": true,
            "valuespace": {
              "MaxLength": "1024",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The purpose of this certificate. 802.1X: For applying 802.1x security authentication. Audit: For performing external audit logging. HTTPS: For applying HTTPS security authentication. HttpClient: For use with Mutual TLS authentication when using the xcommand HttpClient API. Pairing: For pairing touch devices that are not directly connected to the endpoint. SIP: For applying SIP security authentication. WebexIdentity: For identifying the device in end-to-end encryption scenarios on the Cisco Webex cloud.",
            "name": "Purpose",
            "required": true,
            "valuespace": {
              "Values": [
                "802.1X",
                "HTTPS",
                "Audit",
                "SIP",
                "Pairing",
                "WebexIdentity",
                "HttpClient"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 34363,
      "normPath": "Security Certificates Services Deactivate",
      "path": "Security Certificates Services Deactivate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deletes security certificates from this device.",
        "params": [
          {
            "description": "The unique Identifier for the certificate that is deleted. You can get the fingerprint ID by running xCommand Security Certificates Services Show.",
            "name": "Fingerprint",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31556,
      "normPath": "Security Certificates Services Delete",
      "path": "Security Certificates Services Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows details for security certificates on this device.",
        "params": [
          {
            "description": "Filters the results according to the chosen service. 802.1X: For applying 802.1x security authentication. Audit: For performing external audit logging. HTTPS: For applying HTTPS security authentication. HttpClient: For use with Mutual TLS authentication when using the xcommand HttpClient API. Pairing: For pairing touch devices that are not directly connected to the endpoint. SIP: For applying SIP security authentication. WebexIdentity: For identifying the device in end-to-end encryption scenarios on the Cisco Webex cloud.",
            "name": "Filter",
            "required": false,
            "valuespace": {
              "Values": [
                "802.1X",
                "HTTPS",
                "Audit",
                "SIP",
                "Pairing",
                "WebexIdentity",
                "HttpClient"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "SHA_1",
            "description": "Specifies which hash function is used when generating the fingerprint of the certificate. SHA-1: The SHA-1 hash function is used. SHA-256: The SHA-256 hash function (from the SHA-2 family of hash functions) is used. ",
            "name": "FingerprintAlgorithm",
            "required": false,
            "valuespace": {
              "Values": [
                "SHA-1",
                "SHA-256"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Text",
            "description": "Specifies the format of the listed certificates, PEM (Privacy Enhanced Mail) or plain text.",
            "name": "Format",
            "required": false,
            "valuespace": {
              "Values": [
                "PEM",
                "Text"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33750,
      "normPath": "Security Certificates Services Show",
      "path": "Security Certificates Services Show",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Disables a bundled certificate used for SMTP and HttpClient. Disabling a certificate results in a server providing a certificate signed with this root certificate will be declined.",
        "params": [
          {
            "description": "The unique Identifier for the certificate that is disabled. You can get the fingerprint ID by running xCommand Security Certificates Services Show.",
            "name": "Fingerprint",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31558,
      "normPath": "Security Certificates ThirdParty Disable",
      "path": "Security Certificates ThirdParty Disable",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Enables a bundled certificate used for SMTP and HttpClient.",
        "params": [
          {
            "description": "The unique Identifier for the certificate that is enabled. You can get the fingerprint ID by running xCommand Security Certificates Services Show.",
            "name": "Fingerprint",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31559,
      "normPath": "Security Certificates ThirdParty Enable",
      "path": "Security Certificates ThirdParty Enable",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lists all bundled certificates and their state.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30526,
      "normPath": "Security Certificates ThirdParty List",
      "path": "Security Certificates ThirdParty List",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows a single third-party certificate.",
        "params": [
          {
            "description": "The unique Identifier for the certificate you want to see. You can get the fingerprint ID by running xCommand Security Certificates Services Show.",
            "name": "Fingerprint",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "Text",
            "description": "Specifies the format of the listed certificates, PEM (Privacy Enhanced Mail) or plain text.",
            "name": "Format",
            "required": false,
            "valuespace": {
              "Values": [
                "PEM",
                "Text"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31560,
      "normPath": "Security Certificates ThirdParty Show",
      "path": "Security Certificates ThirdParty Show",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Filter",
            "required": false,
            "valuespace": {
              "Values": [
                "Internal",
                "External"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Text",
            "name": "Format",
            "required": false,
            "valuespace": {
              "Values": [
                "PEM",
                "Text"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34993,
      "normPath": "Security Certificates WebexIdentity Show",
      "path": "Security Certificates WebexIdentity Show",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command applies only to devices that are registered to the Cisco Webex cloud service. Shows the list of trusted CA certificates that verifies the certificates of servers and services used by the Cisco Webex cloud.",
        "params": [
          {
            "description": "Cisco: Shows the list of CA certificates used when communicating with servers and services that are provided by Cisco. Non-Cisco: Shows the list CA certificates used when communicating with servers and services that are provided by others than Cisco. TLS-proxy: Shows the list of additional CA certificates required when using a TLS inspecting proxy for outbound traffic.",
            "name": "Filter",
            "required": false,
            "valuespace": {
              "Values": [
                "Cisco",
                "Non-Cisco",
                "TLS-proxy"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Text",
            "description": "Specifies the format of the listed certificates, PEM (Privacy Enhanced Mail) or plain text.",
            "name": "Format",
            "required": false,
            "valuespace": {
              "Values": [
                "PEM",
                "Text"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31561,
      "normPath": "Security Certificates Webex Show",
      "path": "Security Certificates Webex Show",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Secret",
            "required": true,
            "valuespace": {
              "MaxLength": "1024",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 34364,
      "normPath": "Security ClientSecret Populate",
      "path": "Security ClientSecret Populate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Set the following features to persistent or non-persistent mode. In non-persistent mode the information gathered by the specified feature does not persist a reboot of the device. Persistent mode is the default. This command reboots the device.",
        "params": [
          {
            "description": "In non-persistent mode call history is deleted when the device reboots.",
            "name": "CallHistory",
            "required": true,
            "valuespace": {
              "Values": [
                "NonPersistent",
                "Persistent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "In non-persistent mode, all configurations are set back to default when the device reboots.",
            "name": "Configurations",
            "required": true,
            "valuespace": {
              "Values": [
                "NonPersistent",
                "Persistent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Reboots the device.",
            "name": "ConfirmAndReboot",
            "required": true,
            "valuespace": {
              "Values": [
                "Yes"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "In non-persistent mode all IP related information is deleted when the device reboots.",
            "name": "DHCP",
            "required": true,
            "valuespace": {
              "Values": [
                "NonPersistent",
                "Persistent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "In non-persistent mode eventlog is deleted when the device reboots.",
            "name": "InternalLogging",
            "required": true,
            "valuespace": {
              "Values": [
                "NonPersistent",
                "Persistent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "In non-persistent mode local phone book is deleted when the device reboots.",
            "name": "LocalPhonebook",
            "required": true,
            "valuespace": {
              "Values": [
                "NonPersistent",
                "Persistent"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31562,
      "normPath": "Security Persistency",
      "path": "Security Persistency",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows details of your current session.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Audit",
          "Integrator",
          "PairedUser",
          "RoomControl",
          "TouchUser",
          "User"
        ]
      },
      "id": 29786,
      "normPath": "Security Session Get",
      "path": "Security Session Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "List active sessions.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26478,
      "normPath": "Security Session List",
      "path": "Security Session List",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Terminate a session.",
        "params": [
          {
            "description": "The session ID number.",
            "name": "SessionId",
            "required": true,
            "valuespace": {
              "MaxLength": "32",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31563,
      "normPath": "Security Session Terminate",
      "path": "Security Session Terminate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the device in standby mode, which turns off the video outputs and put the camera into sleep mode.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 30530,
      "normPath": "Standby Activate",
      "path": "Standby Activate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Bring the device out of standby mode.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 30531,
      "normPath": "Standby Deactivate",
      "path": "Standby Deactivate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sets the device to \"Halfwake\" state. This state informs the user from the UI, to pick up a remote or to tap the touch device to get started.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 30532,
      "normPath": "Standby Halfwake",
      "path": "Standby Halfwake",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sets a temporary Halfwake timer delay. If the device is in Halfwake mode when the reset timer is set, the device is brought out of Halfwake mode. When left idle for the given delay the device goes into halfwake mode.",
        "params": [
          {
            "description": "Set the delay in minutes.",
            "name": "Delay",
            "required": true,
            "valuespace": {
              "Max": "480",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31564,
      "normPath": "Standby ResetHalfwakeTimer",
      "path": "Standby ResetHalfwakeTimer",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reset the standby delay timer or set a temporary standby delay. If the device is in standby mode when the timer is set, the device is brought out of standby mode before starting the countdown. If you don't specify a Delay, the standby delay timer is reset, and the device goes into standby after the period that is given by the Standby Delay setting (xConfiguration Standby Delay). If you do specify a Delay, the device goes into standby when it has been idle for the specified period. Next time, the standby delay is as configured in the Standby Delay setting again.",
        "params": [
          {
            "description": "Set the delay in minutes.",
            "name": "Delay",
            "required": false,
            "valuespace": {
              "Max": "480",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31565,
      "normPath": "Standby ResetTimer",
      "path": "Standby ResetTimer",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reboot the device.",
        "params": [
          {
            "default": "Restart",
            "description": "As a default the device restarts after a reboot. By selecting Shutdown, the device will not restart.",
            "name": "Action",
            "required": false,
            "valuespace": {
              "Values": [
                "Restart",
                "Shutdown"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "True",
            "description": "As a default the device reboots right away, regardless of whether the device is in use or not. By selecting False, the device reboots only if it is not in use (i.e. if it is in idle, standby, or halfwake mode).",
            "name": "Force",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31566,
      "normPath": "SystemUnit Boot",
      "path": "SystemUnit Boot",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30117,
      "normPath": "SystemUnit DeveloperPreview Activate",
      "path": "SystemUnit DeveloperPreview Activate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30118,
      "normPath": "SystemUnit DeveloperPreview Deactivate",
      "path": "SystemUnit DeveloperPreview Deactivate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reset the codec to factory default settings. The call logs are deleted and all device parameters are reset to default values. All files that have been uploaded to the codec are deleted. Option key(s) are not affected. Use the parameter Keep in order to choose which configurations and files to keep when you factory reset the device. As a default the device restarts after the factory reset, but other behaviors can be forced by selecting a different TrailingAction.",
        "params": [
          {
            "description": "Include to confirm your choice.",
            "name": "Confirm",
            "required": true,
            "valuespace": {
              "Values": [
                "Yes"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select which configurations and files to keep when you factory reset the device. You can have up to 7 CallId parameters in the same command. Certificates: Client and CA certificates. HTTP: xConfiguration NetworkServices HTTP Mode xConfiguration NetworkServices HTTPS Server MinimumTLSVersion xConfiguration NetworkServices HTTPS StrictTransportSecurity xConfiguration NetworkServices HTTPS VerifyClientCertificate xConfiguration NetworkServices HTTPS VerifyServerCertificate LocalSetup: xConfiguration Audio DefaultVolume xConfiguration Audio SoundsAndAlerts RingVolume xConfiguration Time Zone xConfiguration UserInterface Language xConfiguration Video Output Connector OverscanLevel xCommand Camera Preset Store Network: xConfiguration Network 1 xConfiguration NetworkServices Wifi Allowed xConfiguration NetworkServices Wifi Enabled Provisioning: xConfiguration Provisioning Mode SerialPort: xConfiguration SerialPort Mode xConfiguration SerialPort BaudRate xConfiguration SerialPort LoginRequired Spark: xConfiguration Spark ServiceOverrides GdsBaseUrl xConfiguration Spark ServiceOverrides U2CBaseUrl xConfiguration Spark ServiceOverrides WdmBaseUrl",
            "name": "Keep",
            "required": false,
            "valuespace": {
              "Values": [
                "LocalSetup",
                "Network",
                "Webex",
                "Provisioning",
                "SerialPort",
                "Certificates",
                "HTTP"
              ],
              "multiple": "7",
              "type": "LiteralArray"
            }
          },
          {
            "default": "Restart",
            "description": "Select Shutdown or NoAction to override the default behavior (Restart).",
            "name": "TrailingAction",
            "required": false,
            "valuespace": {
              "Values": [
                "NoAction",
                "Restart",
                "Shutdown"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33751,
      "normPath": "SystemUnit FactoryReset",
      "path": "SystemUnit FactoryReset",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stops the wizard which appears the first time you start the device, so the device can be set up without it. The wizard only appears again if the device is reset to its factory default settings.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 30537,
      "normPath": "SystemUnit FirstTimeWizard Stop",
      "path": "SystemUnit FirstTimeWizard Stop",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Clears the list of system notifications that are reported by xStatus SystemUnit Notifications Text/Type.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26522,
      "normPath": "SystemUnit Notifications RemoveAll",
      "path": "SystemUnit Notifications RemoveAll",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Add an option key to support additional features.",
        "params": [
          {
            "description": "The key you have received for the option you wish to switch on.",
            "name": "Key",
            "required": true,
            "valuespace": {
              "MaxLength": "24",
              "MinLength": "16",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31568,
      "normPath": "SystemUnit OptionKey Add",
      "path": "SystemUnit OptionKey Add",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "List all option keys.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26524,
      "normPath": "SystemUnit OptionKey List",
      "path": "SystemUnit OptionKey List",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove a specified option key.",
        "params": [
          {
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Encryption",
                "MultiSite",
                "RemoteMonitoring",
                "DeveloperPreview"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30221,
      "normPath": "SystemUnit OptionKey Remove",
      "path": "SystemUnit OptionKey Remove",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove all option keys.",
        "params": [
          {
            "name": "Confirm",
            "required": true,
            "valuespace": {
              "Values": [
                "Yes"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26526,
      "normPath": "SystemUnit OptionKey RemoveAll",
      "path": "SystemUnit OptionKey RemoveAll",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Select the product platform for your device. This command is typically used after a device has been in for repair and the product platform don't match the actual product. Use with caution.",
        "params": [
          {
            "description": "ROOM55D: The platform is set to Room 55 Dual. ROOM70S: For Codec Plus and Room 70, the platform is set to Room 70 Single. For Codec Pro and Room 70 G2, the platform is set to Room 70 Single G2. ROOM70D: For Codec Plus and Room 70, the platform is set to Room 70 Dual. For Codec Pro and Room 70 G2, the platform is set to Room 70 Dual G2.",
            "name": "Platform",
            "required": true,
            "valuespace": {
              "Values": [
                "ROOM70S",
                "ROOM70D"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 33932,
      "normPath": "SystemUnit ProductPlatform Set",
      "path": "SystemUnit ProductPlatform Set",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Select the product platform for your device. This command is typically used after a device has been in for repair and the product platform don't match the actual product. Use with caution.",
        "params": [
          {
            "description": "ROOM55D: The platform is set to Room 55 Dual. ROOM70S: For Codec Plus and Room 70, the platform is set to Room 70 Single. For Codec Pro and Room 70 G2, the platform is set to Room 70 Single G2. ROOM70D: For Codec Plus and Room 70, the platform is set to Room 70 Dual. For Codec Pro and Room 70 G2, the platform is set to Room 70 Dual G2.",
            "name": "Platform",
            "required": true,
            "valuespace": {
              "Values": [
                "ROOM55D",
                "ROOM70S",
                "ROOM70D"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 34080,
      "normPath": "SystemUnit ProductPlatform Set",
      "path": "SystemUnit ProductPlatform Set",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Clear the sign in banner set with xCommand SystemUnit SignInBanner Set.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26528,
      "normPath": "SystemUnit SignInBanner Clear",
      "path": "SystemUnit SignInBanner Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Get the custom message set with xCommand SystemUnit SignInBanner Set.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26529,
      "normPath": "SystemUnit SignInBanner Get",
      "path": "SystemUnit SignInBanner Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set a sign in banner with a custom message on the device's user interface. This is a multiline command. Use: xCommand SystemUnit SignInBanner Set <enter> Banner text <enter> . <enter>",
        "multiline": "True",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30538,
      "normPath": "SystemUnit SignInBanner Set",
      "path": "SystemUnit SignInBanner Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reset most parameters to their default values. This does not include parameters associated with room setup, such as camera position, language, and volume.",
        "params": [
          {
            "name": "Confirm",
            "required": true,
            "valuespace": {
              "Values": [
                "Yes"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 26531,
      "normPath": "SystemUnit SoftReset",
      "path": "SystemUnit SoftReset",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Initiate a software upgrade by fetching the software from a given URL.",
        "params": [
          {
            "default": "True",
            "description": "You can force a device to accept a software upgrade immediately, without giving users a chance to acknowledge or postpone the update.",
            "name": "Forced",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The URL to the software package location.",
            "name": "URL",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "TouchUser"
        ]
      },
      "id": 31569,
      "normPath": "SystemUnit SoftwareUpgrade",
      "path": "SystemUnit SoftwareUpgrade",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Clear the welcome banner set with xCommand SystemUnit WelcomeBanner Set.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26533,
      "normPath": "SystemUnit WelcomeBanner Clear",
      "path": "SystemUnit WelcomeBanner Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Get the custom message set with xCommand SystemUnit WelcomeBanner Set.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Audit",
          "Integrator",
          "PairedUser",
          "RoomControl",
          "TouchUser",
          "User"
        ]
      },
      "id": 29787,
      "normPath": "SystemUnit WelcomeBanner Get",
      "path": "SystemUnit WelcomeBanner Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set up a welcome banner that the user sees after they sign in to the device's web interface or the command line interface. The banner can for example contain information that the user needs to get started or things they need to be aware of when changing settings. This is a multiline command. Use: xCommand SystemUnit WelcomeBanner Set <enter> Banner text <enter> . <enter>",
        "multiline": "True",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26535,
      "normPath": "SystemUnit WelcomeBanner Set",
      "path": "SystemUnit WelcomeBanner Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Read the time and date from the device.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30539,
      "normPath": "Time DateTime Get",
      "path": "Time DateTime Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the date and time for the device, if not available from NTP (Network Time Protocol).",
        "params": [
          {
            "name": "Day",
            "required": false,
            "valuespace": {
              "Max": "31",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Hour",
            "required": false,
            "valuespace": {
              "Max": "23",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Minute",
            "required": false,
            "valuespace": {
              "Max": "59",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Month",
            "required": false,
            "valuespace": {
              "Max": "12",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Second",
            "required": false,
            "valuespace": {
              "Max": "59",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Year",
            "required": false,
            "valuespace": {
              "Max": "2037",
              "Min": "2015",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30540,
      "normPath": "Time DateTime Set",
      "path": "Time DateTime Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deletes the custom wallpaper, the brand background image, and the logo files from the device.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 30708,
      "normPath": "UserInterface Branding Clear",
      "path": "UserInterface Branding Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deletes the image file, which is specified in the Type parameter, from the device.",
        "params": [
          {
            "description": "Background: Delete the custom wallpaper. Branding: Delete the logo that is displayed when the device is active. HalfwakeBackground: Delete the brand image that is displayed as a background when the device is in the halfwake state. HalfwakeBranding: Delete the logo that is displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Background",
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31691,
      "normPath": "UserInterface Branding Delete",
      "path": "UserInterface Branding Delete",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deletes the image file, which is specified in the Type parameter, from the device.",
        "params": [
          {
            "description": "Branding: Delete the logo that is displayed when the device is active. HalfwakeBackground: Delete the brand image that is displayed as a background when the device is in the halfwake state. HalfwakeBranding: Delete the logo that is displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33752,
      "normPath": "UserInterface Branding Delete",
      "path": "UserInterface Branding Delete",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deletes the image file, which is specified in the Type parameter, from the device.",
        "params": [
          {
            "description": "Branding: Delete the logo that is displayed when the device is active. HalfwakeBackground: Delete the brand image that is displayed as a background when the device is in the halfwake state. HalfwakeBranding: Delete the logo that is displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Background",
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33885,
      "normPath": "UserInterface Branding Delete",
      "path": "UserInterface Branding Delete",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Fetches an image file from a URL and stores the file on the device. The following image formats are supported: BMP, GIF, JPEG, and PNG. The maximum image size is 16 megapixels, and the maximum file size is 4 MByte. The Type parameter determines what kind of image it is. If it is a background image, the associated feature (Custom wallpaper or Branding with background and logo) is automatically applied. This command issues an HTTP request, so it is included in the HTTP requests count. The maximum number of concurrent requests is limited.",
        "params": [
          {
            "description": "Specify the checksum for the image file that is to be fetched. The checksum is used to ensure the integrity of the downloaded image file. When using HTTP, it is mandatory to add a checksum. When using HTTPS, it is mandatory to add a checksum only if you are downloading the template from a server that presents an unsigned certificate, or a self-signed certificate that is not in the CA list of the device (not trusted).",
            "name": "Checksum",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "SHA512",
            "description": "Specify the algorithm that is used to calculate the checksum.",
            "name": "ChecksumType",
            "required": false,
            "valuespace": {
              "Values": [
                "SHA512"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "Specify a custom identifier for this image. You can get the CustomId for the images used by using xStatus UserInterface Branding CustomId.",
            "name": "CustomId",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Specify the usage type for this image. Branding: Fetches a logo that can be displayed when the device is active. HalfwakeBackground: Fetches a brand image that can be displayed as a background when the device is in the halfwake state. HalfwakeBranding: Fetches a logo that can be displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Specify the URL of the image file.",
            "name": "URL",
            "required": true,
            "valuespace": {
              "MaxLength": "250",
              "MinLength": "5",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33753,
      "normPath": "UserInterface Branding Fetch",
      "path": "UserInterface Branding Fetch",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Fetches an image file from a URL and stores the file on the device. The following image formats are supported: BMP, GIF, JPEG, and PNG. The maximum image size is 16 megapixels, and the maximum file size is 4 MByte. The Type parameter determines what kind of image it is. If it is a background image, the associated feature (Custom wallpaper or Branding with background and logo) is automatically applied. This command issues an HTTP request, so it is included in the HTTP requests count. The maximum number of concurrent requests is limited.",
        "params": [
          {
            "description": "Specify the checksum for the image file that is to be fetched. The checksum is used to ensure the integrity of the downloaded image file. When using HTTP, it is mandatory to add a checksum. When using HTTPS, it is mandatory to add a checksum only if you are downloading the template from a server that presents an unsigned certificate, or a self-signed certificate that is not in the CA list of the device (not trusted).",
            "name": "Checksum",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "SHA512",
            "description": "Specify the algorithm that is used to calculate the checksum.",
            "name": "ChecksumType",
            "required": false,
            "valuespace": {
              "Values": [
                "SHA512"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "Specify a custom identifier for this image. You can get the CustomId for the images used by using xStatus UserInterface Branding CustomId.",
            "name": "CustomId",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Specify the usage type for this image. Branding: Fetches a logo that can be displayed when the device is active. HalfwakeBackground: Fetches a brand image that can be displayed as a background when the device is in the halfwake state. HalfwakeBranding: Fetches a logo that can be displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Background",
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Specify the URL of the image file.",
            "name": "URL",
            "required": true,
            "valuespace": {
              "MaxLength": "250",
              "MinLength": "5",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33886,
      "normPath": "UserInterface Branding Fetch",
      "path": "UserInterface Branding Fetch",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Fetches an image file from a URL and stores the file on the device. The following image formats are supported: BMP, GIF, JPEG, and PNG. The maximum image size is 16 megapixels, and the maximum file size is 4 MByte. The Type parameter determines what kind of image it is. If it is a background image, the associated feature (Custom wallpaper or Branding with background and logo) is automatically applied. This command issues an HTTP request, so it is included in the HTTP requests count. The maximum number of concurrent requests is limited.",
        "params": [
          {
            "description": "Specify the checksum for the image file that is to be fetched. The checksum is used to ensure the integrity of the downloaded image file. When using HTTP, it is mandatory to add a checksum. When using HTTPS, it is mandatory to add a checksum only if you are downloading the template from a server that presents an unsigned certificate, or a self-signed certificate that is not in the CA list of the device (not trusted).",
            "name": "Checksum",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "SHA512",
            "description": "Specify the algorithm that is used to calculate the checksum.",
            "name": "ChecksumType",
            "required": false,
            "valuespace": {
              "Values": [
                "SHA512"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "Specify a custom identifier for this image. You can get the CustomId for the images used by using xStatus UserInterface Branding CustomId.",
            "name": "CustomId",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Specify the usage type for this image. Background: Fetches a background image that can be used as custom wallpaper. Branding: Fetches a logo that can be displayed when the device is active. HalfwakeBackground: Fetches a brand image that can be displayed as a background when the device is in the halfwake state. HalfwakeBranding: Fetches a logo that can be displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Background",
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Specify the URL of the image file.",
            "name": "URL",
            "required": true,
            "valuespace": {
              "MaxLength": "250",
              "MinLength": "5",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33933,
      "normPath": "UserInterface Branding Fetch",
      "path": "UserInterface Branding Fetch",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The command returns the image file that is specified in the Type parameter, given that such a file is stored on the device. The file is Base64 encoded. The format is JPG for background images and PNG for logos, regardless of the format of the originally uploaded file. Background images are stored in three sizes, one for the main screen, one for the touch controller, and one for the web interface illustrations. Use the Size parameter to choose which one to get. Logos have only one size.",
        "params": [
          {
            "default": "Large",
            "description": "Large: The size of the image that is displayed on the main screen. Small: The size of the image that is displayed on the touch controller. Thumbnail: The size of the image that is used in the web interface illustrations.",
            "name": "Size",
            "required": false,
            "valuespace": {
              "Values": [
                "Large",
                "Small",
                "Thumbnail"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Branding: Return the logo that is displayed when the device is active. HalfwakeBackground: Return the brand image that is displayed as a background when the device is in the halfwake state. HalfwakeBranding: Return the logo that is displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33754,
      "normPath": "UserInterface Branding Get",
      "path": "UserInterface Branding Get",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The command returns the image file that is specified in the Type parameter, given that such a file is stored on the device. The file is Base64 encoded. The format is JPG for background images and PNG for logos, regardless of the format of the originally uploaded file. Background images are stored in three sizes, one for the main screen, one for the touch controller, and one for the web interface illustrations. Use the Size parameter to choose which one to get. Logos have only one size.",
        "params": [
          {
            "default": "Large",
            "description": "Large: The size of the image that is displayed on the main screen. Small: The size of the image that is displayed on the touch controller. Thumbnail: The size of the image that is used in the web interface illustrations.",
            "name": "Size",
            "required": false,
            "valuespace": {
              "Values": [
                "Large",
                "Small",
                "Thumbnail"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Branding: Return the logo that is displayed when the device is active. HalfwakeBackground: Return the brand image that is displayed as a background when the device is in the halfwake state. HalfwakeBranding: Return the logo that is displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Background",
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33887,
      "normPath": "UserInterface Branding Get",
      "path": "UserInterface Branding Get",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The command returns the image file that is specified in the Type parameter, given that such a file is stored on the device. The file is Base64 encoded. The format is JPG for background images and PNG for logos, regardless of the format of the originally uploaded file. Background images are stored in three sizes, one for the main screen, one for the touch controller, and one for the web interface illustrations. Use the Size parameter to choose which one to get. Logos have only one size.",
        "params": [
          {
            "default": "Large",
            "description": "Large: The size of the image that is displayed on the main screen. Small: The size of the image that is displayed on the touch controller. Thumbnail: The size of the image that is used in the web interface illustrations.",
            "name": "Size",
            "required": false,
            "valuespace": {
              "Values": [
                "Large",
                "Small",
                "Thumbnail"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Background: Return the custom wallpaper. Branding: Return the logo that is displayed when the device is active. HalfwakeBackground: Return the brand image that is displayed as a background when the device is in the halfwake state. HalfwakeBranding: Return the logo that is displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Background",
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33934,
      "normPath": "UserInterface Branding Get",
      "path": "UserInterface Branding Get",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command creates an event that tells that a new image file is uploaded to the device and ready for use. The Type parameter identifies what kind of image it is.",
        "params": [
          {
            "description": "Background: A new background image that can be used as a custom wallpaper is ready for use. Branding: A new logo that can be displayed when the device is active is ready for use. HalfwakeBackground: A new brand image that can be displayed as a background when the device is in the halfwake state is ready for use. HalfwakeBranding: A new logo that can be displayed when the device is in the halfwake state is ready for use.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Background",
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31694,
      "normPath": "UserInterface Branding Updated",
      "path": "UserInterface Branding Updated",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command creates an event that tells that a new image file is uploaded to the device and ready for use. The Type parameter identifies what kind of image it is.",
        "params": [
          {
            "description": "Branding: A new logo that can be displayed when the device is active is ready for use. HalfwakeBackground: A new brand image that can be displayed as a background when the device is in the halfwake state is ready for use. HalfwakeBranding: A new logo that can be displayed when the device is in the halfwake state is ready for use.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33755,
      "normPath": "UserInterface Branding Updated",
      "path": "UserInterface Branding Updated",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command creates an event that tells that a new image file is uploaded to the device and ready for use. The Type parameter identifies what kind of image it is.",
        "params": [
          {
            "description": "Branding: A new logo that can be displayed when the device is active is ready for use. HalfwakeBackground: A new brand image that can be displayed as a background when the device is in the halfwake state is ready for use. HalfwakeBranding: A new logo that can be displayed when the device is in the halfwake state is ready for use.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Background",
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33888,
      "normPath": "UserInterface Branding Updated",
      "path": "UserInterface Branding Updated",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Uploads an image file to the device. The following image formats are supported: BMP, GIF, JPEG, and PNG, and the maximum image size is 16 megapixels. The file must be Base64 encoded, and the maximum file size is 4 MByte. The Type parameter specifies the usage of the image. If it is a background image, the associated feature (Custom wallpaper or Branding with background and logo) is automatically applied. This is a multiline command.",
        "multiline": "True",
        "params": [
          {
            "default": "",
            "description": "Specify a custom identifier for this image. You can get the CustomId for the images used by using xStatus UserInterface Branding CustomId.",
            "name": "CustomId",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Branding: Uploads a logo that can be displayed when the device is active. HalfwakeBackground: Uploads a brand image that can be displayed as a background when the device is in the halfwake state. HalfwakeBranding: Uploads a logo that can be displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33756,
      "normPath": "UserInterface Branding Upload",
      "path": "UserInterface Branding Upload",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Uploads an image file to the device. The following image formats are supported: BMP, GIF, JPEG, and PNG, and the maximum image size is 16 megapixels. The file must be Base64 encoded, and the maximum file size is 4 MByte. The Type parameter specifies the usage of the image. If it is a background image, the associated feature (Custom wallpaper or Branding with background and logo) is automatically applied. This is a multiline command.",
        "multiline": "True",
        "params": [
          {
            "default": "",
            "description": "Specify a custom identifier for this image. You can get the CustomId for the images used by using xStatus UserInterface Branding CustomId.",
            "name": "CustomId",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Branding: Uploads a logo that can be displayed when the device is active. HalfwakeBackground: Uploads a brand image that can be displayed as a background when the device is in the halfwake state. HalfwakeBranding: Uploads a logo that can be displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Background",
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33889,
      "normPath": "UserInterface Branding Upload",
      "path": "UserInterface Branding Upload",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Uploads an image file to the device. The following image formats are supported: BMP, GIF, JPEG, and PNG, and the maximum image size is 16 megapixels. The file must be Base64 encoded, and the maximum file size is 4 MByte. The Type parameter specifies the usage of the image. If it is a background image, the associated feature (Custom wallpaper or Branding with background and logo) is automatically applied. This is a multiline command.",
        "multiline": "True",
        "params": [
          {
            "default": "",
            "description": "Specify a custom identifier for this image. You can get the CustomId for the images used by using xStatus UserInterface Branding CustomId.",
            "name": "CustomId",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Background: Uploads a background image that can be used as custom wallpaper. Branding: Uploads a logo that can be displayed when the device is active. HalfwakeBackground: Uploads a brand image that can be displayed as a background when the device is in the halfwake state. HalfwakeBranding: Uploads a logo that can be displayed when the device is in the halfwake state.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "Background",
                "Branding",
                "HalfwakeBackground",
                "HalfwakeBranding"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33935,
      "normPath": "UserInterface Branding Upload",
      "path": "UserInterface Branding Upload",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Delete user interface extensions (web apps, custom buttons, panels, and widgets) from the device. If you don't specify an ActivityType, all extensions are deleted.",
        "params": [
          {
            "description": "Custom: Custom buttons, panels, and widgets are removed. Web apps are not affected. WebApp: Web apps are removed. Custom buttons, panels, and widgets are not affected.",
            "name": "ActivityType",
            "required": false,
            "valuespace": {
              "Values": [
                "Custom"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31638,
      "normPath": "UserInterface Extensions Clear",
      "path": "UserInterface Extensions Clear",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Delete user interface extensions (custom buttons, panels, and widgets) from the device. If you don't specify an ActivityType, all extensions are deleted.",
        "params": [
          {
            "description": "Custom: Custom buttons, panels, and widgets are removed.",
            "name": "ActivityType",
            "required": false,
            "valuespace": {
              "Values": [
                "Custom"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31696,
      "normPath": "UserInterface Extensions Clear",
      "path": "UserInterface Extensions Clear",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Delete user interface extensions (web apps, custom buttons, panels, and widgets) from the device. If you don't specify an ActivityType, all extensions are deleted.",
        "params": [
          {
            "description": "Custom: Custom buttons, panels, and widgets are removed. Web apps are not affected. WebApp: Web apps are removed. Custom buttons, panels, and widgets are not affected.",
            "name": "ActivityType",
            "required": false,
            "valuespace": {
              "Values": [
                "Custom",
                "WebApp"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31741,
      "normPath": "UserInterface Extensions Clear",
      "path": "UserInterface Extensions Clear",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "EmbedData",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 35170,
      "normPath": "UserInterface Extensions Export",
      "path": "UserInterface Extensions Export",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Id",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 33654,
      "normPath": "UserInterface Extensions Icon Delete",
      "path": "UserInterface Extensions Icon Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "default": "All",
            "name": "Filter",
            "required": false,
            "valuespace": {
              "Values": [
                "All",
                "Unused"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 33655,
      "normPath": "UserInterface Extensions Icon DeleteAll",
      "path": "UserInterface Extensions Icon DeleteAll",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Id",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 33656,
      "normPath": "UserInterface Extensions Icon Get",
      "path": "UserInterface Extensions Icon Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 33657,
      "normPath": "UserInterface Extensions Icon List",
      "path": "UserInterface Extensions Icon List",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "multiline": "True",
        "params": [
          {
            "name": "Id",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 33658,
      "normPath": "UserInterface Extensions Icon Upload",
      "path": "UserInterface Extensions Icon Upload",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "List user interface extensions (web apps, custom buttons, panels, and widgets) that exist on the device. If you don't specify an ActivityType, all extensions are listed.",
        "params": [
          {
            "description": "Custom: Custom buttons, panels, and widgets are listed. Web apps are not included. WebApp: Web apps are listed. Custom buttons, panels, and widgets are not included.",
            "name": "ActivityType",
            "required": false,
            "valuespace": {
              "Values": [
                "Custom"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31639,
      "normPath": "UserInterface Extensions List",
      "path": "UserInterface Extensions List",
      "products": [
        "bandai"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "List user interface extensions (custom buttons, panels, and widgets) that exist on the device. If you don't specify an ActivityType, all extensions are listed.",
        "params": [
          {
            "description": "Custom: Custom buttons, panels, and widgets are listed.",
            "name": "ActivityType",
            "required": false,
            "valuespace": {
              "Values": [
                "Custom"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31697,
      "normPath": "UserInterface Extensions List",
      "path": "UserInterface Extensions List",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "List user interface extensions (web apps, custom buttons, panels, and widgets) that exist on the device. If you don't specify an ActivityType, all extensions are listed.",
        "params": [
          {
            "description": "Custom: Custom buttons, panels, and widgets are listed. Web apps are not included. WebApp: Web apps are listed. Custom buttons, panels, and widgets are not included.",
            "name": "ActivityType",
            "required": false,
            "valuespace": {
              "Values": [
                "Custom",
                "WebApp"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31742,
      "normPath": "UserInterface Extensions List",
      "path": "UserInterface Extensions List",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Creates an event when the user clicks a custom panel.",
        "params": [
          {
            "description": "The unique identifier of the custom panel.",
            "name": "PanelId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31640,
      "normPath": "UserInterface Extensions Panel Clicked",
      "path": "UserInterface Extensions Panel Clicked",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Closes an opened custom panel.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 30717,
      "normPath": "UserInterface Extensions Panel Close",
      "path": "UserInterface Extensions Panel Close",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Opens the custom panel that has the given PanelId. If the panel has multiple pages you can specify which page to open by including the PageId parameter.",
        "params": [
          {
            "description": "The unique identifier of a page on a custom panel.",
            "name": "PageId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The unique identifier of the custom panel.",
            "name": "PanelId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31641,
      "normPath": "UserInterface Extensions Panel Open",
      "path": "UserInterface Extensions Panel Open",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Removes the custom panel from the user interface of this device.",
        "params": [
          {
            "description": "The unique identifier of the custom panel.",
            "name": "PanelId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31642,
      "normPath": "UserInterface Extensions Panel Remove",
      "path": "UserInterface Extensions Panel Remove",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Adds a custom panel to the current configuration. The panel will be added to the configuration, but if a panel with the same panel ID already exists, it will be overwritten. This is a multiline command.",
        "multiline": "True",
        "params": [
          {
            "description": "The unique identifier of the custom panel.",
            "name": "PanelId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "1",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31643,
      "normPath": "UserInterface Extensions Panel Save",
      "path": "UserInterface Extensions Panel Save",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Updates the custom panel that has the given PanelId. Successful changes are immediately visible on the endpoint.",
        "params": [
          {
            "description": "The color of the specified panel button, specified in hexadecimal (e.g., #4287f5).",
            "name": "Color",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The icon to display on the button as selected from the list available options. The Custom option is used when a custom icon is uploaded.",
            "name": "Icon",
            "required": false,
            "valuespace": {
              "Values": [
                "Briefing",
                "Camera",
                "Concierge",
                "Disc",
                "Handset",
                "Help",
                "Helpdesk",
                "Home",
                "Hvac",
                "Info",
                "Input",
                "Language",
                "Laptop",
                "Lightbulb",
                "Media",
                "Microphone",
                "Power",
                "Proximity",
                "Record",
                "Spark",
                "Tv",
                "Webex",
                "General",
                "Custom"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier of the custom uploaded icon.",
            "name": "IconId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The new name of the custom panel.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The unique identifier of the custom panel.",
            "name": "PanelId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The visibility of the button. Auto: the button will be visible according to the configuration (Always, Only out of call, or Only in call). Hidden: the button will always be hidden.",
            "name": "Visibility",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Hidden"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 33890,
      "normPath": "UserInterface Extensions Panel Update",
      "path": "UserInterface Extensions Panel Update",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the configuration scheme you have chosen in the user interface extensions (widgets) for your device. Updates the UserInterface Extensions status tree. This is a multiline command.",
        "multiline": "True",
        "params": [
          {
            "description": "The unique identifier for the configuration.",
            "name": "ConfigId",
            "required": true,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31645,
      "normPath": "UserInterface Extensions Set",
      "path": "UserInterface Extensions Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sets the action of the given widget. Updates the UserInterface Extensions status tree.",
        "params": [
          {
            "description": "The type of widget that is set.",
            "name": "Type",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The value of the widget. The range of values depends on the widget type.",
            "name": "Value",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The unique identifier for the widget.",
            "name": "WidgetId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31646,
      "normPath": "UserInterface Extensions Widget Action",
      "path": "UserInterface Extensions Widget Action",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the value of the given widget. Updates the UserInterface Extensions status tree. Returns an error if the value is out of range.",
        "params": [
          {
            "description": "The value of the widget. The range of values depends on the widget type.",
            "name": "Value",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The unique identifier for the widget.",
            "name": "WidgetId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31647,
      "normPath": "UserInterface Extensions Widget SetValue",
      "path": "UserInterface Extensions Widget SetValue",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Empties the value of the given widget. Updates the UserInterface Extensions status tree and notifies the user interface that this widget is no longer selected.",
        "params": [
          {
            "description": "The unique identifier for the widget.",
            "name": "WidgetId",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31648,
      "normPath": "UserInterface Extensions Widget UnsetValue",
      "path": "UserInterface Extensions Widget UnsetValue",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove the message which was displayed using the UserInterface Message Alert Display command. This is required when the Duration parameter is not set.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 26554,
      "normPath": "UserInterface Message Alert Clear",
      "path": "UserInterface Message Alert Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Display a message on screen. Optionally you can keep the message for a specified duration of time. If Duration is not set, the command must be followed by a UserInterface Message Alert Clear command.",
        "params": [
          {
            "default": "0",
            "description": "How long (in seconds) the message is to be displayed on the screen. If set to 0 (zero) the message is displayed until a UserInterface Message Alert Clear command is sent.",
            "name": "Duration",
            "required": false,
            "valuespace": {
              "Max": "3600",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The message to be displayed. The <p> and <br> HTML tags will result in line breaks as normal; any other tags will appear as plain text.",
            "name": "Text",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "",
            "description": "The title of the message.",
            "name": "Title",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31570,
      "normPath": "UserInterface Message Alert Display",
      "path": "UserInterface Message Alert Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove the window which was displayed using the UserInterface Message Prompt Display command. This is required when the Duration parameter is not set. Use the xFeedback commands to monitor the feedback from the user. Read more about the xFeedback commands in the API introduction section in this guide.",
        "params": [
          {
            "default": "",
            "description": "The FeedbackId corresponds to the FeedbackId given by the UserInterface Message Prompt Display command.",
            "name": "FeedbackId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31571,
      "normPath": "UserInterface Message Prompt Clear",
      "path": "UserInterface Message Prompt Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Display a small window on screen with a title, text and up to five options for response from the user. The message is displayed on screen until the user gives a response, or until the device receives a UserInterface Message Prompt Clear command. Use the xFeedback commands to monitor the feedback from the user. Read more about the xFeedback commands in the API introduction section in this guide.",
        "params": [
          {
            "default": "0",
            "description": "How long (in seconds) the message window is to be displayed on the screen. If set to 0 (zero) the message window is displayed until a UserInterface Message Prompt Clear command is sent.",
            "name": "Duration",
            "required": false,
            "valuespace": {
              "Max": "3600",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "To identify the feedback enter a FeedbackId.",
            "name": "FeedbackId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The text to appear on feedback option 1.",
            "name": "Option.1",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The text to appear on feedback option 2.",
            "name": "Option.2",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The text to appear on feedback option 3.",
            "name": "Option.3",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The text to appear on feedback option 4.",
            "name": "Option.4",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The text to appear on feedback option 5.",
            "name": "Option.5",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Enter the text line to be displayed. The <p> and <br> HTML tags will result in line breaks as normal; any other tags will appear as plain text.",
            "name": "Text",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The title of the message.",
            "name": "Title",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31572,
      "normPath": "UserInterface Message Prompt Display",
      "path": "UserInterface Message Prompt Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Give a response to the UserInterface Message Prompt Display command. This command is executed when the user selects an option in the user interface. Use the xFeedback commands to monitor the feedback from the user. Read more about the xFeedback commands in the API introduction section in this guide.",
        "params": [
          {
            "default": "",
            "description": "The FeedbackId corresponds to the FeedbackId given by the UserInterface Message Prompt Display command.",
            "name": "FeedbackId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The OptionId corresponds to the OptionIds given as possible responses in the UserInterface Message Prompt Display command.",
            "name": "OptionId",
            "required": true,
            "valuespace": {
              "Max": "5",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31573,
      "normPath": "UserInterface Message Prompt Response",
      "path": "UserInterface Message Prompt Response",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove the message which was displayed using the UserInterface Message Rating Display command. This is required when the Duration parameter is not set.",
        "params": [
          {
            "default": "",
            "description": "The FeedbackId corresponds to the FeedbackId given by the UserInterface Message Rating Display command. If the FeedbackId is not given, all UserInterface Message Rating windows will be closed.",
            "name": "FeedbackId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31574,
      "normPath": "UserInterface Message Rating Clear",
      "path": "UserInterface Message Rating Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Display a small window on screen with a title and text. Rating stars are provided for the user to select. The message is displayed on screen until the user gives a response, or until the device receives a UserInterface Message Rating Clear command. Use the xFeedback commands to monitor the feedback from the user. Read more about the xFeedback commands in the API introduction section in this guide.",
        "params": [
          {
            "default": "0",
            "description": "How long (in seconds) the message window is to be displayed on the screen. If empty or set to 0, the message window is displayed until a UserInterface Message Rating Clear command is sent.",
            "name": "Duration",
            "required": false,
            "valuespace": {
              "Max": "3600",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "",
            "description": "To identify the feedback enter a FeedbackId.",
            "name": "FeedbackId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "",
            "description": "The text to display as the body of the message after the user has provided a ratinge (e.g., Thank you). This text replaces the original text that is provided with the Text parameter and appears for one second before the message fades away.",
            "name": "SubmitReceiptText",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "",
            "description": "The text to display as the message title after the user has provided a rating (e.g., Thank you). This text replaces the original title that is provided with the Title parameter. If no title parameter is given, this is ignored.",
            "name": "SubmitReceiptTitle",
            "required": false,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Enter the text line to be displayed. The <p> and <br> HTML tags will result in line breaks as normal; any other tags will appear as plain text.",
            "name": "Text",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "",
            "description": "Text shown as the title in the rating display window. This text is displayed in larger font and above the text provided with the Text parameter. If no text is provided for the title, it will be omitted and the rating display window will be smaller.",
            "name": "Title",
            "required": false,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 33757,
      "normPath": "UserInterface Message Rating Display",
      "path": "UserInterface Message Rating Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Give a response to the UserInterface Message Rating Display command. This command is executed when the user selects an option in the user interface. Use the xFeedback commands to monitor the feedback from the user. Read more about the xFeedback commands in the API introduction section in this guide.",
        "params": [
          {
            "default": "",
            "description": "The FeedbackId corresponds to the FeedbackId given by the UserInterface Message Rating Display command.",
            "name": "FeedbackId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "0",
            "description": "The Rating corresponds to the rating given as a possible response in the UserInterface Message Rating Display window where 1 is furthest to the left.",
            "name": "Rating",
            "required": false,
            "valuespace": {
              "Max": "5",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31576,
      "normPath": "UserInterface Message Rating Response",
      "path": "UserInterface Message Rating Response",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove the text input message which was displayed using the UserInterface Message TextInput Display command. This is required when the Duration parameter is not set. Use the xFeedback commands to monitor the feedback from the user. Read more about the xFeedback commands in the API introduction section in this guide.",
        "params": [
          {
            "default": "",
            "description": "The FeedbackId corresponds to the FeedbackId given by the UserInterface Message TextInput Display command.",
            "name": "FeedbackId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31577,
      "normPath": "UserInterface Message TextInput Clear",
      "path": "UserInterface Message TextInput Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Displays an input dialog box to which a user can respond. This is only supported for devices with a touch-based user interface. The message is displayed on screen until the user gives a response, or until the device receives a UserInterface Message TextInput Clear command. Use the xFeedback commands to monitor the feedback from the user. Read more about the xFeedback commands in the API introduction section in this guide.",
        "params": [
          {
            "default": "0",
            "description": "How long (in seconds) the message is to be displayed on the screen. If set to 0 (zero) the message is displayed until a UserInterface Message TextInput Clear command is sent.",
            "name": "Duration",
            "required": false,
            "valuespace": {
              "Max": "3600",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "To identify the feedback enter a FeedbackId.",
            "name": "FeedbackId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "",
            "description": "Text that is pre-populated in the text input field when the dialog box opens. Before submitting the response, you can edit this text, or delete it and enter your own text. If this parameter is not included, the content of the Placeholder parameter is shown in the text input field when the dialog box opens.",
            "name": "InputText",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "SingleLine",
            "description": "The type of text input dialog box that is displayed. This also determines the keyboard layout that it displayed.",
            "name": "InputType",
            "required": false,
            "valuespace": {
              "Values": [
                "SingleLine",
                "Numeric",
                "Password",
                "PIN"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "Open",
            "description": "Specifies if the device's keyboard should open when the text input message displays.",
            "name": "KeyboardState",
            "required": false,
            "valuespace": {
              "Values": [
                "Open",
                "Closed"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "",
            "description": "Placeholder text that is displayed in the text input field until you start typing. If the InputText parameter is included, the Placeholder parameter has no effect.",
            "name": "Placeholder",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "OK",
            "description": "The text that is shown on the Submit button.",
            "name": "SubmitText",
            "required": false,
            "valuespace": {
              "MaxLength": "32",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The message that is to be displayed to the user. The <p> and <br> HTML tags will result in line breaks as normal; any other tags will appear as plain text.",
            "name": "Text",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "",
            "description": "The title of the input dialog box.",
            "name": "Title",
            "required": false,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31578,
      "normPath": "UserInterface Message TextInput Display",
      "path": "UserInterface Message TextInput Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Give a response to the UserInterface Message TextInput Display command. This command is executed when the user submits the reply that he has entered in the text input field in the user interface. Use the xFeedback commands to monitor the feedback from the user. Read more about the xFeedback commands in the API introduction section in this guide.",
        "params": [
          {
            "default": "",
            "description": "To identify the feedback enter a FeedbackId.",
            "name": "FeedbackId",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The message that is to be displayed to the user.",
            "name": "Text",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31579,
      "normPath": "UserInterface Message TextInput Response",
      "path": "UserInterface Message TextInput Response",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove the text line which was displayed by the UserInterface Message TextLine Display command. This is required when the Duration parameter is not set.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 26564,
      "normPath": "UserInterface Message TextLine Clear",
      "path": "UserInterface Message TextLine Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Display a text line on screen. Optionally you can place the text line at a specified location and for a specified duration of time. If Duration is not set, the command must be followed by the UserInterface Message TextLine Clear command.",
        "params": [
          {
            "default": "0",
            "description": "How long (in seconds) the text line is to be displayed on the screen. If set to 0 (zero) the text line is displayed until a UserInterface Message TextLine Clear command is sent.",
            "name": "Duration",
            "required": false,
            "valuespace": {
              "Max": "3600",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The text line to be displayed. The <p> and <br> HTML tags will result in line breaks as normal; any other tags will appear as plain text.",
            "name": "Text",
            "required": true,
            "valuespace": {
              "MaxLength": "140",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "0",
            "description": "Enter the X-coordinate (horizontal) on screen. X=0 is in the upper left corner.",
            "name": "X",
            "required": false,
            "valuespace": {
              "Max": "10000",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "0",
            "description": "Enter the Y-coordinate (vertical) on screen. Y=0 is in the upper left corner.",
            "name": "Y",
            "required": false,
            "valuespace": {
              "Max": "10000",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31580,
      "normPath": "UserInterface Message TextLine Display",
      "path": "UserInterface Message TextLine Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "5",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Name",
            "required": true,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "SourceIdentifier",
            "required": true,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "camera",
                "PC",
                "mediaplayer",
                "document_camera",
                "other",
                "whiteboard",
                "desktop"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ],
        "description": "Establish and set up an input source that is connected to the device via an external switch."
      },
      "id": 30866,
      "normPath": "UserInterface Presentation ExternalSource Add",
      "path": "UserInterface Presentation ExternalSource Add",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Establish and set up an input source that is connected to the device via an external switch.",
        "params": [
          {
            "description": "The ID of the device connector that the external switch is connected to.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "5",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The name of the input source. This name will be displayed on the user interface.",
            "name": "Name",
            "required": true,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "A unique string that identifies the input source. The identifier is used by other commands and events when addressing this specific input source.",
            "name": "SourceIdentifier",
            "required": true,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The type of input source. The type determines which icon to display on the user interface.",
            "name": "Type",
            "required": true,
            "valuespace": {
              "Values": [
                "camera",
                "PC",
                "mediaplayer",
                "document_camera",
                "other",
                "whiteboard",
                "desktop"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31698,
      "normPath": "UserInterface Presentation ExternalSource Add",
      "path": "UserInterface Presentation ExternalSource Add",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the current list of external input sources.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 28313,
      "normPath": "UserInterface Presentation ExternalSource List",
      "path": "UserInterface Presentation ExternalSource List",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ],
        "description": "Returns the current list of external input sources."
      },
      "id": 30867,
      "normPath": "UserInterface Presentation ExternalSource List",
      "path": "UserInterface Presentation ExternalSource List",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "SourceIdentifier",
            "required": true,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ],
        "description": "Remove the input source (specified by the SourceIdentifier) from the list of external input sources."
      },
      "id": 30868,
      "normPath": "UserInterface Presentation ExternalSource Remove",
      "path": "UserInterface Presentation ExternalSource Remove",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove the input source (specified by the SourceIdentifier) from the list of external input sources.",
        "params": [
          {
            "description": "The unique string that identifies this input source. It was defined when the source was created with the UserInterface Presentation ExternalSource Add command.",
            "name": "SourceIdentifier",
            "required": true,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 31699,
      "normPath": "UserInterface Presentation ExternalSource Remove",
      "path": "UserInterface Presentation ExternalSource Remove",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove all input sources from the list of external input sources.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 28315,
      "normPath": "UserInterface Presentation ExternalSource RemoveAll",
      "path": "UserInterface Presentation ExternalSource RemoveAll",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ],
        "description": "Remove all input sources from the list of external input sources."
      },
      "id": 30869,
      "normPath": "UserInterface Presentation ExternalSource RemoveAll",
      "path": "UserInterface Presentation ExternalSource RemoveAll",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "SourceIdentifier",
            "required": true,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "description": "Starts to present the input source (specified by the SourceIdentifier) if it is in Ready state (see the UserInterface Presentation ExternalSource State Set command). The input source will be shown in the user interface sharetray as \"Presenting\"."
      },
      "id": 30870,
      "normPath": "UserInterface Presentation ExternalSource Select",
      "path": "UserInterface Presentation ExternalSource Select",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Starts to present the input source (specified by the SourceIdentifier) if it is in Ready state (see the UserInterface Presentation ExternalSource State Set command). The input source will be shown in the user interface sharetray as \"Presenting\".",
        "params": [
          {
            "description": "The unique string that identifies this input source. It was defined when the source was created with the UserInterface Presentation ExternalSource Add command.",
            "name": "SourceIdentifier",
            "required": true,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ]
      },
      "id": 31700,
      "normPath": "UserInterface Presentation ExternalSource Select",
      "path": "UserInterface Presentation ExternalSource Select",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "default": "",
            "name": "ErrorReason",
            "required": false,
            "valuespace": {
              "MaxLength": "80",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "SourceIdentifier",
            "required": true,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "State",
            "required": true,
            "valuespace": {
              "Values": [
                "Hidden",
                "Ready",
                "NotReady",
                "Error"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ],
        "description": "Set or change the state of the input source (specified by the SourceIdentifier)."
      },
      "id": 30871,
      "normPath": "UserInterface Presentation ExternalSource State Set",
      "path": "UserInterface Presentation ExternalSource State Set",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set or change the state of the input source (specified by the SourceIdentifier).",
        "params": [
          {
            "default": "",
            "description": "This string is displayed in the user interface sharetray, given that the State parameter is set to Error.",
            "name": "ErrorReason",
            "required": false,
            "valuespace": {
              "MaxLength": "80",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The unique string that identifies this input source. It was defined when the source was created with the UserInterface Presentation ExternalSource Add command.",
            "name": "SourceIdentifier",
            "required": true,
            "valuespace": {
              "MaxLength": "40",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Ready: The input source will be presented when someone selects it (taps it on the user interface, or when the UserInterface Presentation ExternalSource Select command is issued). NotReady: The input source is not ready, and cannot be selected. Error:  The input source is in an erroneous state. The ErrorReason parameter may be used to inform the user about the reason for failure. Hidden: The input source will not be displayed in the user interface sharetray.",
            "name": "State",
            "required": true,
            "valuespace": {
              "Values": [
                "Hidden",
                "Ready",
                "NotReady",
                "Error"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "RoomControl"
        ]
      },
      "id": 33936,
      "normPath": "UserInterface Presentation ExternalSource State Set",
      "path": "UserInterface Presentation ExternalSource State Set",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35072,
      "normPath": "UserInterface Translation Override Clear",
      "path": "UserInterface Translation Override Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 34279,
      "normPath": "UserInterface Translation Override Get",
      "path": "UserInterface Translation Override Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "multiline": "True",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 34280,
      "normPath": "UserInterface Translation Override Set",
      "path": "UserInterface Translation Override Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30131,
      "normPath": "UserInterface WallpaperBundle Clear",
      "path": "UserInterface WallpaperBundle Clear",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_82i",
        "svea_70d"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30132,
      "normPath": "UserInterface WallpaperBundle List",
      "path": "UserInterface WallpaperBundle List",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_82i",
        "svea_70d"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Name",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30133,
      "normPath": "UserInterface WallpaperBundle Set",
      "path": "UserInterface WallpaperBundle Set",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_82i",
        "svea_70d"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Closes the current web view.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 30724,
      "normPath": "UserInterface WebView Clear",
      "path": "UserInterface WebView Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Opens the web view and displays the web page given by the URL.",
        "params": [
          {
            "description": "An HTTP header field. You can add up 15 Header parameters in one command, each holding one HTTP header field.",
            "name": "Header",
            "required": false,
            "valuespace": {
              "MaxLength": "8192",
              "MinLength": "0",
              "multiple": "15",
              "type": "StringArray"
            }
          },
          {
            "description": "This value is intended for internal use by the UI Extensions Editor.",
            "name": "Options",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The title of the web page.",
            "name": "Title",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The URL of the web page.",
            "name": "Url",
            "required": true,
            "valuespace": {
              "MaxLength": "2000",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31702,
      "normPath": "UserInterface WebView Display",
      "path": "UserInterface WebView Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Create a remote support user passphrase that Technical Assistance Center (TAC) can use to access the device for troubleshooting.",
        "params": [
          {
            "description": "Define the duration for the passphrase validity. Default is 7 days.",
            "name": "ExpiryDays",
            "required": false,
            "valuespace": {
              "Max": "31",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31581,
      "normPath": "UserManagement RemoteSupportUser Create",
      "path": "UserManagement RemoteSupportUser Create",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Delete the remote support user created with the command xCommand UserManagement RemoteSupportUser Create.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26584,
      "normPath": "UserManagement RemoteSupportUser Delete",
      "path": "UserManagement RemoteSupportUser Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Disable the creation of new remote support users. To enable the remote support user again you must factory reset your device.",
        "params": [
          {
            "name": "Confirm",
            "required": true,
            "valuespace": {
              "Values": [
                "Yes"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30547,
      "normPath": "UserManagement RemoteSupportUser DisablePermanently",
      "path": "UserManagement RemoteSupportUser DisablePermanently",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Retrieves the state of the generated remote support user, if one exists.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26586,
      "normPath": "UserManagement RemoteSupportUser GetState",
      "path": "UserManagement RemoteSupportUser GetState",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Adds a new user to this device.",
        "params": [
          {
            "description": "Specifies whether this is an active user or not.",
            "name": "Active",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Identifies a user who logs in with a client certificate instead of a username and password.",
            "name": "ClientCertificateDN",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Specifies a Passphrase for the user.",
            "name": "Passphrase",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Specifies whether the user's passphrase requires changing or not.",
            "name": "PassphraseChangeRequired",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Sets the user's role.",
            "name": "Role",
            "required": false,
            "valuespace": {
              "Values": [
                "Admin",
                "Audit",
                "User",
                "Integrator",
                "RoomControl"
              ],
              "multiple": "255",
              "type": "LiteralArray"
            }
          },
          {
            "description": "Specifies whether the user should have a shell login or not.",
            "name": "ShellLogin",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Specifies the user's username.",
            "name": "Username",
            "required": true,
            "valuespace": {
              "MaxLength": "127",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The user's passphrase.",
            "name": "YourPassphrase",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31582,
      "normPath": "UserManagement User Add",
      "path": "UserManagement User Add",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Deletes a user from this device.",
        "params": [
          {
            "description": "Specifies the username of the user that is deleted.",
            "name": "Username",
            "required": true,
            "valuespace": {
              "MaxLength": "127",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The passphrase of the user that is deleted.",
            "name": "YourPassphrase",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31583,
      "normPath": "UserManagement User Delete",
      "path": "UserManagement User Delete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the details of users on this device.",
        "params": [
          {
            "description": "Identifies a user who logs in with a client certificate instead of a username and password.",
            "name": "ClientCertificateDN",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Specify a username to show the details of a particular user.",
            "name": "Username",
            "required": false,
            "valuespace": {
              "MaxLength": "127",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31584,
      "normPath": "UserManagement User Get",
      "path": "UserManagement User Get",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the list of users on this device.",
        "params": [
          {
            "default": "0",
            "description": "Limits the number of results that are shown.",
            "name": "Limit",
            "required": false,
            "valuespace": {
              "Max": "65536",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "0",
            "description": "Shows lines with the same or higher Offset than the one provided.",
            "name": "Offset",
            "required": false,
            "valuespace": {
              "Max": "65536",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31585,
      "normPath": "UserManagement User List",
      "path": "UserManagement User List",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Modifies the details of a particular user.",
        "params": [
          {
            "description": "Specifies whether this is an active user or not.",
            "name": "Active",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Adds a new role for the specified user.",
            "name": "AddRole",
            "required": false,
            "valuespace": {
              "Values": [
                "Admin",
                "Audit",
                "User",
                "Integrator",
                "RoomControl"
              ],
              "multiple": "255",
              "type": "LiteralArray"
            }
          },
          {
            "description": "Identifies a user who logs in with a client certificate instead of a username and password.",
            "name": "ClientCertificateDN",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Specifies whether the user's passphrase requires changing or not.",
            "name": "PassphraseChangeRequired",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Removes a role from the specified user.",
            "name": "RemoveRole",
            "required": false,
            "valuespace": {
              "Values": [
                "Admin",
                "Audit",
                "User",
                "Integrator",
                "RoomControl"
              ],
              "multiple": "255",
              "type": "LiteralArray"
            }
          },
          {
            "description": "Specifies whether the user should have a shell login or not.",
            "name": "ShellLogin",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Specifies the user's username.",
            "name": "Username",
            "required": true,
            "valuespace": {
              "MaxLength": "127",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The user's passphrase.",
            "name": "YourPassphrase",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31586,
      "normPath": "UserManagement User Modify",
      "path": "UserManagement User Modify",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Change the passphrase for the user you logged in as. If you are logged in as the administrator, this will change the administrator passphrase.",
        "params": [
          {
            "name": "NewPassphrase",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "OldPassphrase",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Audit",
          "Integrator",
          "PairedUser",
          "RoomControl",
          "TouchUser",
          "User"
        ]
      },
      "id": 29788,
      "normPath": "UserManagement User Passphrase Change",
      "path": "UserManagement User Passphrase Change",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set a user passphrase for the specified user. You must be logged in as an administrator to set a user passphrase.",
        "params": [
          {
            "name": "NewPassphrase",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "Username",
            "required": true,
            "valuespace": {
              "MaxLength": "127",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "YourPassphrase",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26595,
      "normPath": "UserManagement User Passphrase Set",
      "path": "UserManagement User Passphrase Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Unblocks a user who is blocked out because of too many failed login attempts.",
        "params": [
          {
            "name": "Username",
            "required": true,
            "valuespace": {
              "MaxLength": "127",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "YourPassphrase",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26596,
      "normPath": "UserManagement User Unblock",
      "path": "UserManagement User Unblock",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sets position for the active speakers PiP (picture in picture).",
        "params": [
          {
            "description": "Select one of the predefined positions.",
            "name": "Position",
            "required": true,
            "valuespace": {
              "Values": [
                "CenterLeft",
                "CenterRight",
                "LowerLeft",
                "LowerRight",
                "UpperCenter",
                "UpperLeft",
                "UpperRight",
                "DockLowerLeft",
                "DockCenterLeft"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31587,
      "normPath": "Video ActiveSpeakerPIP Set",
      "path": "Video ActiveSpeakerPIP Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Mimics a remote control key click event from the input device.",
        "params": [
          {
            "description": "The unique identifier of the connector.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "5",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The CEC specified key code for the key that is sent to the logical address of the device as if it was pushed on a remote control.",
            "name": "Key",
            "required": false,
            "valuespace": {
              "Max": "255",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The logical address of the connected device.",
            "name": "LogicalAddress",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The name of the key that is sent to the logical address of the device as if it was pushed on a remote control.",
            "name": "NamedKey",
            "required": false,
            "valuespace": {
              "Values": [
                "Up",
                "Down",
                "Right",
                "Left",
                "Ok",
                "Back",
                "Stop",
                "Play"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 31703,
      "normPath": "Video CEC Input KeyClick",
      "path": "Video CEC Input KeyClick",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Mimics a remote control key click event from the input device.",
        "params": [
          {
            "description": "The unique identifier of the connector.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The CEC specified key code for the key that is sent to the logical address of the device as if it was pushed on a remote control.",
            "name": "Key",
            "required": false,
            "valuespace": {
              "Max": "255",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The logical address of the connected device.",
            "name": "LogicalAddress",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The name of the key that is sent to the logical address of the device as if it was pushed on a remote control.",
            "name": "NamedKey",
            "required": false,
            "valuespace": {
              "Values": [
                "Up",
                "Down",
                "Right",
                "Left",
                "Ok",
                "Back",
                "Stop",
                "Play"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 31769,
      "normPath": "Video CEC Input KeyClick",
      "path": "Video CEC Input KeyClick",
      "products": [
        "bandai",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Mimics a remote control key click event from the input device.",
        "params": [
          {
            "description": "The unique identifier of the connector.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "2",
              "Min": "2",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The CEC specified key code for the key that is sent to the logical address of the device as if it was pushed on a remote control.",
            "name": "Key",
            "required": false,
            "valuespace": {
              "Max": "255",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The logical address of the connected device.",
            "name": "LogicalAddress",
            "required": false,
            "valuespace": {
              "Max": "15",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The name of the key that is sent to the logical address of the device as if it was pushed on a remote control.",
            "name": "NamedKey",
            "required": false,
            "valuespace": {
              "Values": [
                "Up",
                "Down",
                "Right",
                "Left",
                "Ok",
                "Back",
                "Stop",
                "Play"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 34026,
      "normPath": "Video CEC Input KeyClick",
      "path": "Video CEC Input KeyClick",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Key",
            "required": false,
            "valuespace": {
              "Max": "255",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "LogicalAddress",
            "required": true,
            "valuespace": {
              "Max": "15",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "NamedKey",
            "required": false,
            "valuespace": {
              "Values": [
                "Up",
                "Down",
                "Right",
                "Left",
                "Ok",
                "Back",
                "Stop",
                "Play"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ],
        "description": "Mimics a remote control key click event from this device."
      },
      "id": 26601,
      "normPath": "Video CEC Output KeyClick",
      "path": "Video CEC Output KeyClick",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Mimics a remote control key click event from this device.",
        "params": [
          {
            "description": "The unique identifier of the connector.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The CEC specified key code for the key that is sent to the logical address of the device as if it was pushed on a remote control.",
            "name": "Key",
            "required": false,
            "valuespace": {
              "Max": "255",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The logical address of the connected device.",
            "name": "LogicalAddress",
            "required": true,
            "valuespace": {
              "Max": "15",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The name of the key that is sent to the logical address of the device as if it was pushed on a remote control.",
            "name": "NamedKey",
            "required": false,
            "valuespace": {
              "Values": [
                "Up",
                "Down",
                "Right",
                "Left",
                "Ok",
                "Back",
                "Stop",
                "Play"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 31704,
      "normPath": "Video CEC Output KeyClick",
      "path": "Video CEC Output KeyClick",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ],
        "description": "A request from the video conferencing device to become the active source of the screen (device) that is connected to the specified output connector."
      },
      "id": 26602,
      "normPath": "Video CEC Output SendActiveSourceRequest",
      "path": "Video CEC Output SendActiveSourceRequest",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "A request from the video conferencing device to become the active source of the screen (device) that is connected to the specified output connector.",
        "params": [
          {
            "description": "The unique identifier of the connector.",
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 31705,
      "normPath": "Video CEC Output SendActiveSourceRequest",
      "path": "Video CEC Output SendActiveSourceRequest",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ],
        "description": "A request from the video conferencing device to stop being the active source of the screen (device) that is connected to the specified output connector. It is up to the screen to decide how to respond to the request. It can become the active source itself, make another source the active one, or do nothing."
      },
      "id": 26603,
      "normPath": "Video CEC Output SendInactiveSourceRequest",
      "path": "Video CEC Output SendInactiveSourceRequest",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "A request from the video conferencing device to stop being the active source of the screen (device) that is connected to the specified output connector. It is up to the screen to decide how to respond to the request. It can become the active source itself, make another source the active one, or do nothing.",
        "params": [
          {
            "description": "The unique identifier of the connector.",
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 31706,
      "normPath": "Video CEC Output SendInactiveSourceRequest",
      "path": "Video CEC Output SendInactiveSourceRequest",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "A request from the video conferencing device to stop being the active source of the screen (device) that is connected to the specified output connector. It is up to the screen to decide how to respond to the request. It can become the active source itself, make another source the active one, or do nothing.",
        "params": [
          {
            "description": "The unique identifier of the connector.",
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "1",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator"
        ]
      },
      "id": 31770,
      "normPath": "Video CEC Output SendInactiveSourceRequest",
      "path": "Video CEC Output SendInactiveSourceRequest",
      "products": [
        "havella"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Layer",
            "required": false,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Target",
            "required": false,
            "valuespace": {
              "Values": [
                "LocalOutput",
                "MainSource",
                "PresentationSource"
              ],
              "multiple": "3",
              "type": "LiteralArray"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "description": "Remove a text string that has been added to the main video stream, the presentation stream, or the local output using the Video Graphics Text Display command. If you don't want to remove the text string from all those places, you can use multiple Target parameters to choose a subset."
      },
      "id": 29496,
      "normPath": "Video Graphics Clear",
      "path": "Video Graphics Clear",
      "products": [
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove a text string that has been added to the main video stream, the presentation stream, or the local output using the Video Graphics Text Display command. If you don't want to remove the text string from all those places, you can use multiple Target parameters to choose a subset.",
        "params": [
          {
            "description": "Not applicable in this version.",
            "name": "Layer",
            "required": false,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Specify from where to remove the text string. Choose between the local output, the main video stream, and the presentation stream.",
            "name": "Target",
            "required": false,
            "valuespace": {
              "Values": [
                "LocalOutput",
                "MainSource",
                "PresentationSource"
              ],
              "multiple": "3",
              "type": "LiteralArray"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31707,
      "normPath": "Video Graphics Clear",
      "path": "Video Graphics Clear",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Date",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "Duration",
            "required": false,
            "valuespace": {
              "Max": "3600",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "Target",
            "required": false,
            "valuespace": {
              "Values": [
                "LocalOutput",
                "MainSource",
                "PresentationSource"
              ],
              "multiple": "3",
              "type": "LiteralArray"
            }
          },
          {
            "name": "Text",
            "required": false,
            "valuespace": {
              "MaxLength": "1024",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "Time",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "description": "Compose a text string that will be added to the main video stream, the presentation stream, and the local output. If you don't want to add the text string all those places, you can use multiple Target parameters to choose a subset."
      },
      "id": 30135,
      "normPath": "Video Graphics Text Display",
      "path": "Video Graphics Text Display",
      "products": [
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Compose a text string that will be added to the main video stream, the presentation stream, and the local output. If you don't want to add the text string all those places, you can use multiple Target parameters to choose a subset.",
        "params": [
          {
            "description": "Specify whether to include the date in the text string.",
            "name": "Date",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Not applicable in this version.",
            "name": "Duration",
            "required": false,
            "valuespace": {
              "Max": "3600",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Specify where to add the text string. Choose between the local output, the main video stream, and the presentation stream.",
            "name": "Target",
            "required": false,
            "valuespace": {
              "Values": [
                "LocalOutput",
                "MainSource",
                "PresentationSource"
              ],
              "multiple": "3",
              "type": "LiteralArray"
            }
          },
          {
            "description": "Specify any custom text you want to include in the text string.",
            "name": "Text",
            "required": false,
            "valuespace": {
              "MaxLength": "1024",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Specify whether to include the time of day in the text string.",
            "name": "Time",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31708,
      "normPath": "Video Graphics Text Display",
      "path": "Video Graphics Text Display",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Stop sending video from the device. Selfview is also turned off. This command does not affect the presentation channel.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 30548,
      "normPath": "Video Input MainVideo Mute",
      "path": "Video Input MainVideo Mute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start sending video from the device if previously turned off using the Video Input MainVideo Mute command (or, if available, the \"Turn off video\" button on the user interface). Selfview is also available.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 30549,
      "normPath": "Video Input MainVideo Unmute",
      "path": "Video Input MainVideo Unmute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          },
          {
            "name": "Layout",
            "required": false,
            "valuespace": {
              "Values": [
                "Equal",
                "PIP",
                "Prominent"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "PIPPosition",
            "required": false,
            "valuespace": {
              "Values": [
                "LowerLeft",
                "LowerRight",
                "UpperLeft",
                "UpperRight"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "PIPSize",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Large"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "SourceId",
            "required": false,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "description": "Set which input source is the main video source. You can identify the input source by either the physical connector that it is connected to (ConnectorId) or the logical source identifier (SourceId). You can combine multiple input sources in a single main video stream (the maximum number of different input sources depend on the type of video conferencing device) by adding multiple ConnectorIds or SourceIds in the same command. There cannot be a mix of identifier types in the same command; use either ConnectorId or SourceId."
      },
      "id": 26606,
      "normPath": "Video Input SetMainVideoSource",
      "path": "Video Input SetMainVideoSource",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set which input source is the main video source. You can identify the input source by either the physical connector that it is connected to (ConnectorId) or the logical source identifier (SourceId). You can combine multiple input sources in a single main video stream (the maximum number of different input sources depend on the type of video conferencing device) by adding multiple ConnectorIds or SourceIds in the same command. There cannot be a mix of identifier types in the same command; use either ConnectorId or SourceId.",
        "params": [
          {
            "description": "The identifier (ID) of the connector. Connector [n] has ID n. Run the following API command to find the ID: xStatus Video Input Connector.",
            "name": "ConnectorId",
            "required": false,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          },
          {
            "description": "Sets the layout of the main video source if the main video source is composed of multiple input sources. Equal: The input sources are shown in same-sized images. There can be a maximum of four images on screen. PIP: Shows one of the input source as a Picture in Picture (only available when composing two input sources). Prominent: The first input source is shown as a large image, and the next input sources are shown as smaller images placed below.",
            "name": "Layout",
            "required": false,
            "valuespace": {
              "Values": [
                "Equal",
                "PIP",
                "Prominent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the PIP position of the main video source if the main video source is composed of multiple input sources.",
            "name": "PIPPosition",
            "required": false,
            "valuespace": {
              "Values": [
                "LowerLeft",
                "LowerRight",
                "UpperLeft",
                "UpperRight"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the PIP size of the main video source if the main video source is composed of multiple input sources.",
            "name": "PIPSize",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Large"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The identifier (ID) of the input source. Input Source [n] has ID n. Run the following API command to find the ID: xStatus Video Input Source.",
            "name": "SourceId",
            "required": false,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 34110,
      "normPath": "Video Input SetMainVideoSource",
      "path": "Video Input SetMainVideoSource",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Select which video layout family to use locally. This setting applies only when using a device's built-in MultiSite feature (optional) to host a multipoint video conference.",
        "params": [
          {
            "description": "To use a custom layout, specify this parameter and the layout name.",
            "name": "CustomLayoutName",
            "required": false,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Select a layout family. Auto: The default layout family, as given in the layout database provided by the device, will be used as the local layout. Custom: The name of your custom saved layout. Equal: The Grid layout family will be used as the local layout. Participants are shown in a grid of equal sized videos. If there is shared content it will appear beside the grid. Overlay: The Overlay layout family will be used as the local layout. The active speaker will be shown in full screen, with the other participants in thumbnails overlaid across the bottom. If there is content it will appear in full screen with the active speaker in a thumbnail overlaid at the top. Transitions between active speakers are voice switched. Prominent: The Stack layout family will be used as the local layout. The active speaker, or shared content, will be a large picture, while the other participants will be small pictures across the top. Transitions between active speakers are voice switched. Prominent_L:  The Prominent layout family will be used as the local layout. The active speaker is shown in the upper left part of the screen, and other participants are ranged across the bottom and beside on the right. Single: The Focus layout family will be used as the local layout. The active speaker, or the presentation if present, will be shown in full screen. The other participants are not shown. Transitions between active speakers are voice switched.",
            "name": "LayoutFamily",
            "required": false,
            "valuespace": {
              "Values": [
                "auto",
                "custom",
                "equal",
                "overlay",
                "prominent",
                "prominent_l",
                "single"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select if the target is the local layout (what users of the current device will see) or the remote layout (what participants at the far end will see).",
            "name": "Target",
            "required": false,
            "valuespace": {
              "Values": [
                "Local",
                "Remote"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 33758,
      "normPath": "Video Layout LayoutFamily Set",
      "path": "Video Layout LayoutFamily Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "LayoutName",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 34341,
      "normPath": "Video Layout SetLayout",
      "path": "Video Layout SetLayout",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Video Matrix commands are a smart overlay to the xCommand Video Layout commands to make it easy to do simple video compositions.",
        "params": [
          {
            "description": "Select the layout you wish to use for the video composition. Equal: All sources are shown in same-sized images on the output. Prominent: The first source is shown as a large image, and the next sources are shown as smaller images placed below.",
            "name": "Layout",
            "required": false,
            "valuespace": {
              "Values": [
                "Equal",
                "Prominent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Choose whether to replace the existing source on that output rendered full screen or to add it. Using Add, the layout engine will recompose the multiple sources automatically. Replace is the default value.",
            "name": "Mode",
            "required": false,
            "valuespace": {
              "Values": [
                "Add",
                "Replace"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Choose the output you wish to use for this layout.",
            "name": "Output",
            "required": true,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Add a remote site to the layout.",
            "name": "RemoteMain",
            "required": false,
            "valuespace": {
              "Max": "4",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          },
          {
            "description": "The identifier (ID) of the input source. Input Source [n] has ID n. Run the following API command to find the ID: xStatus Video Input Source. You can use up to four SourceIds in one command.",
            "name": "SourceId",
            "required": false,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31710,
      "normPath": "Video Matrix Assign",
      "path": "Video Matrix Assign",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Video Matrix commands are a smart overlay to the xCommand Video Layout commands to make it easy to do simple video compositions.",
        "params": [
          {
            "description": "Select the layout you wish to use for the video composition. Equal: All sources are shown in same-sized images on the output. Prominent: The first source is shown as a large image, and the next sources are shown as smaller images placed below.",
            "name": "Layout",
            "required": false,
            "valuespace": {
              "Values": [
                "Equal",
                "Prominent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Choose whether to replace the existing source on that output rendered full screen or to add it. Using Add, the layout engine will recompose the multiple sources automatically. Replace is the default value.",
            "name": "Mode",
            "required": false,
            "valuespace": {
              "Values": [
                "Add",
                "Replace"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Choose the output you wish to use for this layout.",
            "name": "Output",
            "required": true,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Add a remote site to the layout.",
            "name": "RemoteMain",
            "required": false,
            "valuespace": {
              "Max": "4",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          },
          {
            "description": "The identifier (ID) of the input source. Input Source [n] has ID n. Run the following API command to find the ID: xStatus Video Input Source. You can use up to four SourceIds in one command.",
            "name": "SourceId",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31773,
      "normPath": "Video Matrix Assign",
      "path": "Video Matrix Assign",
      "products": [
        "hopen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Video Matrix commands are a smart overlay to the xCommand Video Layout commands to make it easy to do simple video compositions.",
        "params": [
          {
            "description": "Select the layout you wish to use for the video composition. Equal: All sources are shown in same-sized images on the output. Prominent: The first source is shown as a large image, and the next sources are shown as smaller images placed below.",
            "name": "Layout",
            "required": false,
            "valuespace": {
              "Values": [
                "Equal",
                "Prominent"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Choose whether to replace the existing source on that output rendered full screen or to add it. Using Add, the layout engine will recompose the multiple sources automatically. Replace is the default value.",
            "name": "Mode",
            "required": false,
            "valuespace": {
              "Values": [
                "Add",
                "Replace"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Choose the output you wish to use for this layout.",
            "name": "Output",
            "required": true,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Add a remote site to the layout.",
            "name": "RemoteMain",
            "required": false,
            "valuespace": {
              "Max": "4",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          },
          {
            "description": "The identifier (ID) of the input source. Input Source [n] has ID n. Run the following API command to find the ID: xStatus Video Input Source. You can use up to four SourceIds in one command.",
            "name": "SourceId",
            "required": false,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "multiple": "4",
              "type": "IntegerArray"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31825,
      "normPath": "Video Matrix Assign",
      "path": "Video Matrix Assign",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reset the content on the output to the default layout xCommand Video Matrix commands are a smart overlay to the xCommand Video Layout commands to make it easy to do simple video compositions.",
        "params": [
          {
            "description": "Choose the output you want to reset.",
            "name": "Output",
            "required": false,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33938,
      "normPath": "Video Matrix Reset",
      "path": "Video Matrix Reset",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reset the content on the output to the default layout xCommand Video Matrix commands are a smart overlay to the xCommand Video Layout commands to make it easy to do simple video compositions.",
        "params": [
          {
            "description": "Choose the output you want to reset.",
            "name": "Output",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 34052,
      "normPath": "Video Matrix Reset",
      "path": "Video Matrix Reset",
      "products": [
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Swap the content defined with xCommand Video Matrix Assign between two outputs. xCommand Video Matrix commands are a smart overlay to the xCommand Video Layout commands to make it easy to do simple video compositions.",
        "params": [
          {
            "description": "The output you are swapping from.",
            "name": "OutputA",
            "required": true,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The output you are swapping to.",
            "name": "OutputB",
            "required": true,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31712,
      "normPath": "Video Matrix Swap",
      "path": "Video Matrix Swap",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Swap the content defined with xCommand Video Matrix Assign between two outputs. xCommand Video Matrix commands are a smart overlay to the xCommand Video Layout commands to make it easy to do simple video compositions.",
        "params": [
          {
            "description": "The output you are swapping from.",
            "name": "OutputA",
            "required": true,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The output you are swapping to.",
            "name": "OutputB",
            "required": true,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31775,
      "normPath": "Video Matrix Swap",
      "path": "Video Matrix Swap",
      "products": [
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove a source from an output. Just as with xCommand Video Matrix Assign the layout engine will recompose the remaining sources automatically. xCommand Video Matrix commands are a smart overlay to the xCommand Video Layout commands to make it easy to do simple video compositions.",
        "params": [
          {
            "description": "Choose the output you wish to remove the source from.",
            "name": "Output",
            "required": true,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Remove a remote site from the layout.",
            "name": "RemoteMain",
            "required": false,
            "valuespace": {
              "Max": "4",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The identifier (ID) of the input source. Input Source [n] has ID n. Run the following API command to find the ID: xStatus Video Input Source.",
            "name": "SourceId",
            "required": false,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31713,
      "normPath": "Video Matrix Unassign",
      "path": "Video Matrix Unassign",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove a source from an output. Just as with xCommand Video Matrix Assign the layout engine will recompose the remaining sources automatically. xCommand Video Matrix commands are a smart overlay to the xCommand Video Layout commands to make it easy to do simple video compositions.",
        "params": [
          {
            "description": "Choose the output you wish to remove the source from.",
            "name": "Output",
            "required": true,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Remove a remote site from the layout.",
            "name": "RemoteMain",
            "required": false,
            "valuespace": {
              "Max": "4",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The identifier (ID) of the input source. Input Source [n] has ID n. Run the following API command to find the ID: xStatus Video Input Source.",
            "name": "SourceId",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31776,
      "normPath": "Video Matrix Unassign",
      "path": "Video Matrix Unassign",
      "products": [
        "hopen"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove a source from an output. Just as with xCommand Video Matrix Assign the layout engine will recompose the remaining sources automatically. xCommand Video Matrix commands are a smart overlay to the xCommand Video Layout commands to make it easy to do simple video compositions.",
        "params": [
          {
            "description": "Choose the output you wish to remove the source from.",
            "name": "Output",
            "required": true,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Remove a remote site from the layout.",
            "name": "RemoteMain",
            "required": false,
            "valuespace": {
              "Max": "4",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "The identifier (ID) of the input source. Input Source [n] has ID n. Run the following API command to find the ID: xStatus Video Input Source.",
            "name": "SourceId",
            "required": false,
            "valuespace": {
              "Max": "3",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31826,
      "normPath": "Video Matrix Unassign",
      "path": "Video Matrix Unassign",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "Value",
            "required": true,
            "valuespace": {
              "Max": "100",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ],
        "description": "Adjust the monitor backlight."
      },
      "id": 28775,
      "normPath": "Video Output Monitor Backlight Set",
      "path": "Video Output Monitor Backlight Set",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "polaris"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Adjust the monitor backlight.",
        "params": [
          {
            "description": "Choose whether to apply the command to the left or right integrated screen. This parameter is only present for devices with two integrated screens (dual screen devices).",
            "name": "Position",
            "required": true,
            "valuespace": {
              "Values": [
                "Left",
                "Right"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the level.",
            "name": "Value",
            "required": true,
            "valuespace": {
              "Max": "100",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31720,
      "normPath": "Video Output Monitor Backlight Set",
      "path": "Video Output Monitor Backlight Set",
      "products": [
        "barents_70d",
        "svea_55d",
        "svea_70d"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Adjust the monitor backlight.",
        "params": [
          {
            "description": "Select the level.",
            "name": "Value",
            "required": true,
            "valuespace": {
              "Max": "100",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31726,
      "normPath": "Video Output Monitor Backlight Set",
      "path": "Video Output Monitor Backlight Set",
      "products": [
        "barents_70s",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Adjust the monitor's color temperature.",
        "params": [
          {
            "name": "Value",
            "required": true,
            "valuespace": {
              "Values": [
                "4900K",
                "5500K",
                "6500K",
                "7200K",
                "9300K",
                "10500K",
                "12000K"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 28745,
      "normPath": "Video Output Monitor Color Select",
      "path": "Video Output Monitor Color Select",
      "products": [
        "barents_70s",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Adjust the monitor's color temperature.",
        "params": [
          {
            "description": "Choose whether to apply the command to the left or right integrated screen. This parameter is only present for devices with two integrated screens (dual screen devices).",
            "name": "Position",
            "required": true,
            "valuespace": {
              "Values": [
                "Left",
                "Right"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "Value",
            "required": true,
            "valuespace": {
              "Values": [
                "4900K",
                "5500K",
                "6500K",
                "7200K",
                "9300K",
                "10500K",
                "12000K"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31721,
      "normPath": "Video Output Monitor Color Select",
      "path": "Video Output Monitor Color Select",
      "products": [
        "barents_70d",
        "svea_55d",
        "svea_70d"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reset monitor settings.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 28746,
      "normPath": "Video Output Monitor Reset",
      "path": "Video Output Monitor Reset",
      "products": [
        "barents_70s",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ],
        "description": "Reset monitor settings."
      },
      "id": 28776,
      "normPath": "Video Output Monitor Reset",
      "path": "Video Output Monitor Reset",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reset monitor settings.",
        "params": [
          {
            "description": "Choose whether to apply the command to the left or right integrated screen. This parameter is only present for devices with two integrated screens (dual screen devices).",
            "name": "Position",
            "required": true,
            "valuespace": {
              "Values": [
                "Left",
                "Right"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31722,
      "normPath": "Video Output Monitor Reset",
      "path": "Video Output Monitor Reset",
      "products": [
        "barents_70d",
        "svea_55d",
        "svea_70d"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sets position for the presentation PiP (picture in picture).",
        "params": [
          {
            "description": "Select one of the predefined positions.",
            "name": "Position",
            "required": true,
            "valuespace": {
              "Values": [
                "CenterLeft",
                "CenterRight",
                "LowerLeft",
                "LowerRight",
                "UpperCenter",
                "UpperLeft",
                "UpperRight",
                "DockLowerLeft",
                "DockCenterLeft"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31589,
      "normPath": "Video PresentationPIP Set",
      "path": "Video PresentationPIP Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Set the presentation view mode",
        "params": [
          {
            "description": " Select Default when you want the presentation to be viewed with the default settings for the codec. Select Maximized when you want the presentation to be displayed in full screen. Select Minimized when you want the presentation to be displayed in a small picture on screen.",
            "name": "View",
            "required": true,
            "valuespace": {
              "Values": [
                "Default",
                "Maximized",
                "Minimized"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31590,
      "normPath": "Video PresentationView Set",
      "path": "Video PresentationView Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sets self-view on/off and specifies its size and position. If the parameter is not specified, current value is used.",
        "params": [
          {
            "description": "Choose between displaying the self-view in full screen or as picture-in-picture.",
            "name": "FullscreenMode",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Selfview is set to on or off.",
            "name": "Mode",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Displays self-view on monitors with this role.",
            "name": "OnMonitorRole",
            "required": false,
            "valuespace": {
              "Values": [
                "First",
                "Second",
                "Third"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Select the position for the self-view image.",
            "name": "PIPPosition",
            "required": false,
            "valuespace": {
              "Values": [
                "CenterLeft",
                "CenterRight",
                "LowerLeft",
                "LowerRight",
                "UpperCenter",
                "UpperLeft",
                "UpperRight",
                "DockLowerLeft",
                "DockCenterLeft"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31591,
      "normPath": "Video Selfview Set",
      "path": "Video Selfview Set",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "default": "All",
            "name": "Type",
            "required": false,
            "valuespace": {
              "Values": [
                "All",
                "Signage",
                "WebApps"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 26709,
      "normPath": "WebEngine DeleteStorage",
      "path": "WebEngine DeleteStorage",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Join the Webex Meeting specified by the meeting number. Add optional information, such as the display name or a tag, to identify the call in the call history.",
        "params": [
          {
            "default": "",
            "description": "The display name of the remote participant.",
            "name": "DisplayName",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "The meeting number, meeting link, video address, or Personal Room ID.",
            "name": "Number",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "",
            "description": "A tag or label preserved with the call number in the call history.",
            "name": "TrackingData",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 31592,
      "normPath": "Webex Join",
      "path": "Webex Join",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Cancel device registration to Cisco Webex. This command only works in the short period after the registration is started with xCommand Webex Registration Start.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 30551,
      "normPath": "Webex Registration Cancel",
      "path": "Webex Registration Cancel",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Convert a device to be managed by the Cisco Webex cloud service. This is only available on systems linked with Webex Edge for Devices. All current connections to on-premises services for calling and directory will be replaced with cloud data sources. To convert back to on-premises again, the device must factory reset.",
        "params": [
          {
            "description": "Enter Yes, case-insensitive, to confirm that you will proceed with the command. Any other text will cancel the request.",
            "name": "Confirm",
            "required": true,
            "valuespace": {
              "Values": [
                "Yes"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31593,
      "normPath": "Webex Registration ConvertToCloud",
      "path": "Webex Registration ConvertToCloud",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Not applicable in this release.",
        "params": [],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 33760,
      "normPath": "Webex Registration Logout",
      "path": "Webex Registration Logout",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Start registering a device to Cisco Webex cloud service by entering the activation code that has been created in Control Hub and choosing whether to keep local users and integrations. You get a confirmation that the registration has been successful or failed.",
        "params": [
          {
            "description": "Not applicable in thie release.",
            "name": "AccountLinkMode",
            "required": false,
            "valuespace": {
              "Values": [
                "Asynchronous"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The activation code that has been created in Control Hub for this device.",
            "name": "ActivationCode",
            "required": true,
            "valuespace": {
              "MaxLength": "128",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "description": "Harden: Deactivates all local users that have been created for this device and deactivates Macros. NoAction: Does not remove any configurations. Use NoAction if you wish to keep existing integrations.",
            "name": "SecurityAction",
            "required": true,
            "valuespace": {
              "Values": [
                "Harden",
                "NoAction"
              ],
              "type": "Literal"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 33761,
      "normPath": "Webex Registration Start",
      "path": "Webex Registration Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "MeetingNumber",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "Title",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "default": "MSTeams",
            "name": "Type",
            "required": false,
            "valuespace": {
              "Values": [
                "MSTeams",
                "GoogleMeet"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "Url",
            "required": false,
            "valuespace": {
              "MaxLength": "2000",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 35230,
      "normPath": "WebRTC Join",
      "path": "WebRTC Join",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Sends diagnostics from the Microsoft Teams meeting web app (WebRTC) to the WebRTC provider. WebRTC is only available for devices that are registered to an on-premises service and linked to Webex Edge for Devices, and for devices that are registered to the Webex cloud service.",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ]
      },
      "id": 33759,
      "normPath": "WebRTC Provider Current Diagnostics Send",
      "path": "WebRTC Provider Current Diagnostics Send",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [
          {
            "name": "MeetingNumber",
            "required": true,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 35231,
      "normPath": "WebRTC Provider GoogleMeet MeetingNumber Validate",
      "path": "WebRTC Provider GoogleMeet MeetingNumber Validate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "50",
        "description": "Define the default volume for the speakers. The volume is set to this value when you switch on or restart the video conferencing device. Use the controls on the user interface to change the volume while it is running. You may also use API commands (xCommand Audio Volume) to change the volume while the device is running, and to reset to default value.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Max": "100",
          "Min": "0",
          "Step": "100",
          "type": "Integer"
        }
      },
      "id": 30554,
      "normPath": "Audio DefaultVolume",
      "path": "Audio DefaultVolume",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "70",
        "description": "Define the default volume for the speakers. The volume is set to this value when you switch on or restart the video conferencing device. Use the controls on the user interface to change the volume while it is running. You may also use API commands (xCommand Audio Volume) to change the volume while the device is running, and to reset to default value.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Max": "100",
          "Min": "0",
          "Step": "100",
          "type": "Integer"
        }
      },
      "id": 30880,
      "normPath": "Audio DefaultVolume",
      "path": "Audio DefaultVolume",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Each HDMI output has an associated audio return channel (ARC). You can use the ARC to send audio from a screen or TV, which is connected to the HDMI ouput, to the video conferencing device. You can decide for each HDMI output connector (n) separately, whether or not to allow audio transmission.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32096,
      "normPath": "Audio Input ARC Mode",
      "path": "Audio Input ARC[1..3] Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Each HDMI output has an associated audio return channel (ARC). You can use the ARC to send audio from a screen or TV, which is connected to the HDMI ouput, to the video conferencing device. You can decide for each HDMI output connector (n) separately, whether or not to allow audio transmission.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32638,
      "normPath": "Audio Input ARC Mode",
      "path": "Audio Input ARC[1] Mode",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Each HDMI output has an associated audio return channel (ARC). You can use the ARC to send audio from a screen or TV, which is connected to the HDMI ouput, to the video conferencing device. You can decide for each HDMI output connector (n) separately, whether or not to allow audio transmission.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32368,
      "normPath": "Audio Input ARC Mode",
      "path": "Audio Input ARC[2..3] Mode",
      "products": [
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Each HDMI output has an associated audio return channel (ARC). You can use the ARC to send audio from a screen or TV, which is connected to the HDMI ouput, to the video conferencing device. You can decide for each HDMI output connector (n) separately, whether or not to allow audio transmission.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32330,
      "normPath": "Audio Input ARC Mode",
      "path": "Audio Input ARC[3] Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Set the gain on the HDMI input connector. The gain can be tuned in steps of 1 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "0",
          "Min": "-24",
          "Step": "0",
          "type": "Integer"
        }
      },
      "id": 32627,
      "normPath": "Audio Input HDMI Level",
      "path": "Audio Input HDMI[1..2] Level",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define if the audio on the HDMI input connector shall be enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32628,
      "normPath": "Audio Input HDMI Mode",
      "path": "Audio Input HDMI[1..2] Mode",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Use this setting to decide whether to stop the audio playback of a connected presentation source if that presentation source is not currently shown on-screen, or to always playback the audio as long as the presentation source is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32629,
      "normPath": "Audio Input HDMI VideoAssociation MuteOnInactiveVideo",
      "path": "Audio Input HDMI[1..2] VideoAssociation MuteOnInactiveVideo",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Set the gain on the HDMI input connector. The gain can be tuned in steps of 1 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "0",
          "Min": "-24",
          "Step": "0",
          "type": "Integer"
        }
      },
      "id": 32097,
      "normPath": "Audio Input HDMI Level",
      "path": "Audio Input HDMI[1..5] Level",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define if the audio on the HDMI input connector shall be enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32098,
      "normPath": "Audio Input HDMI Mode",
      "path": "Audio Input HDMI[1..5] Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: Off; [2]: Off; [3]: On; [4]: On; [5]: On; ",
        "description": "Use this setting to decide whether to stop the audio playback of a connected presentation source if that presentation source is not currently shown on-screen, or to always playback the audio as long as the presentation source is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32099,
      "normPath": "Audio Input HDMI VideoAssociation MuteOnInactiveVideo",
      "path": "Audio Input HDMI[1..5] VideoAssociation MuteOnInactiveVideo",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "0",
          "Min": "-24",
          "Step": "0",
          "type": "Integer"
        },
        "description": "Set the gain on the HDMI input connector. The gain can be tuned in steps of 1 dB."
      },
      "id": 26726,
      "normPath": "Audio Input HDMI Level",
      "path": "Audio Input HDMI[1] Level",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Set the gain on the HDMI input connector. The gain can be tuned in steps of 1 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "0",
          "Min": "-24",
          "Step": "0",
          "type": "Integer"
        }
      },
      "id": 32397,
      "normPath": "Audio Input HDMI Level",
      "path": "Audio Input HDMI[1] Level",
      "products": [
        "havella",
        "hopen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        },
        "description": "Define if the audio on the HDMI input connector shall be enabled."
      },
      "id": 26727,
      "normPath": "Audio Input HDMI Mode",
      "path": "Audio Input HDMI[1] Mode",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define if the audio on the HDMI input connector shall be enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32398,
      "normPath": "Audio Input HDMI Mode",
      "path": "Audio Input HDMI[1] Mode",
      "products": [
        "havella",
        "hopen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        },
        "description": "Use this setting to decide whether to stop the audio playback of a connected presentation source if that presentation source is not currently shown on-screen, or to always playback the audio as long as the presentation source is connected."
      },
      "id": 26728,
      "normPath": "Audio Input HDMI VideoAssociation MuteOnInactiveVideo",
      "path": "Audio Input HDMI[1] VideoAssociation MuteOnInactiveVideo",
      "products": [
        "octavio"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Use this setting to decide whether to stop the audio playback of a connected presentation source if that presentation source is not currently shown on-screen, or to always playback the audio as long as the presentation source is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32399,
      "normPath": "Audio Input HDMI VideoAssociation MuteOnInactiveVideo",
      "path": "Audio Input HDMI[1] VideoAssociation MuteOnInactiveVideo",
      "products": [
        "havella",
        "hopen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Set the gain on the HDMI input connector. The gain can be tuned in steps of 1 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "0",
          "Min": "-24",
          "Step": "0",
          "type": "Integer"
        }
      },
      "id": 32469,
      "normPath": "Audio Input HDMI Level",
      "path": "Audio Input HDMI[2..3] Level",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define if the audio on the HDMI input connector shall be enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32639,
      "normPath": "Audio Input HDMI Mode",
      "path": "Audio Input HDMI[2..3] Mode",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Use this setting to decide whether to stop the audio playback of a connected presentation source if that presentation source is not currently shown on-screen, or to always playback the audio as long as the presentation source is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32471,
      "normPath": "Audio Input HDMI VideoAssociation MuteOnInactiveVideo",
      "path": "Audio Input HDMI[2..3] VideoAssociation MuteOnInactiveVideo",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Set the gain on the HDMI input connector. The gain can be tuned in steps of 1 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "0",
          "Min": "-24",
          "Step": "0",
          "type": "Integer"
        }
      },
      "id": 32331,
      "normPath": "Audio Input HDMI Level",
      "path": "Audio Input HDMI[2..5] Level",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define if the audio on the HDMI input connector shall be enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32332,
      "normPath": "Audio Input HDMI Mode",
      "path": "Audio Input HDMI[2..5] Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: Off; [2]: On; [3]: On; [4]: On; ",
        "description": "Use this setting to decide whether to stop the audio playback of a connected presentation source if that presentation source is not currently shown on-screen, or to always playback the audio as long as the presentation source is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32333,
      "normPath": "Audio Input HDMI VideoAssociation MuteOnInactiveVideo",
      "path": "Audio Input HDMI[2..5] VideoAssociation MuteOnInactiveVideo",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The video conferencing device has built-in signal processing to reduce the effect of room reverberation. Dereverberation requires that Audio Input Microphone [n] EchoControl Mode is enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32640,
      "normPath": "Audio Input Microphone EchoControl Dereverberation",
      "path": "Audio Input Microphone[1..3] EchoControl Dereverberation",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The echo canceller continuously adjusts itself to the audio characteristics of the room, and compensates for any changes it detects in the audio environment. If the changes in the audio conditions are significant, the echo canceller may take a second or two to re-adjust.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32641,
      "normPath": "Audio Input Microphone EchoControl Mode",
      "path": "Audio Input Microphone[1..3] EchoControl Mode",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video conferencing device has built-in noise reduction, which reduces stationary background noise, for example noise from air-conditioning systems, cooling fans etc. In addition, a high pass filter (Humfilter) reduces very low frequency noise. Noise reduction requires that Audio Input Microphone [n] EchoControl Mode is enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32642,
      "normPath": "Audio Input Microphone EchoControl NoiseReduction",
      "path": "Audio Input Microphone[1..3] EchoControl NoiseReduction",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "14",
        "description": "Set the gain on the Microphone input connector. The gain should be adjusted to suit the output level of the connected audio source. The gain can be tuned in steps of 1 dB. If the gain is set too high, the audio signal will be clipped. If the gain is set too low, the audio signal-to-noise ratio will be degraded; however, this is usually preferable to clipping. Note that unprocessed speech signals typically contain significant level variations, making it very important to allow for sufficient signal headroom. The maximum input level with 0 dB gain is -18 dBu. Example: If your microphone has a maximum output level of -40 dBu, then you should set the gain to -18 dBu - (-40 dBu) = 22 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "24",
          "Min": "0",
          "Step": "24",
          "type": "Integer"
        }
      },
      "id": 34081,
      "normPath": "Audio Input Microphone Level",
      "path": "Audio Input Microphone[1..3] Level",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Disable or enable audio on the microphone connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32644,
      "normPath": "Audio Input Microphone Mode",
      "path": "Audio Input Microphone[1..3] Mode",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Mono",
        "description": "Define whether the signal on the microphone input is a mono signal or part of a multichannel signal.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Left",
            "Mono",
            "Right"
          ],
          "type": "Literal"
        }
      },
      "id": 32100,
      "normPath": "Audio Input Microphone Channel",
      "path": "Audio Input Microphone[1..8] Channel",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The video conferencing device has built-in signal processing to reduce the effect of room reverberation. Dereverberation requires that Audio Input Microphone [n] EchoControl Mode is enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32101,
      "normPath": "Audio Input Microphone EchoControl Dereverberation",
      "path": "Audio Input Microphone[1..8] EchoControl Dereverberation",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The echo canceller continuously adjusts itself to the audio characteristics of the room, and compensates for any changes it detects in the audio environment. If the changes in the audio conditions are significant, the echo canceller may take a second or two to re-adjust.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32102,
      "normPath": "Audio Input Microphone EchoControl Mode",
      "path": "Audio Input Microphone[1..8] EchoControl Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video conferencing device has built-in noise reduction, which reduces stationary background noise, for example noise from air-conditioning systems, cooling fans etc. In addition, a high pass filter (Humfilter) reduces very low frequency noise. Noise reduction requires that Audio Input Microphone [n] EchoControl Mode is enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32103,
      "normPath": "Audio Input Microphone EchoControl NoiseReduction",
      "path": "Audio Input Microphone[1..8] EchoControl NoiseReduction",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Select the equalizer ID of the source that is connected to the microphone input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "8",
          "Min": "1",
          "Step": "8",
          "type": "Integer"
        }
      },
      "id": 32104,
      "normPath": "Audio Input Microphone Equalizer ID",
      "path": "Audio Input Microphone[1..8] Equalizer ID",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define the equalizer mode for the source that is connected to the microphone input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32105,
      "normPath": "Audio Input Microphone Equalizer Mode",
      "path": "Audio Input Microphone[1..8] Equalizer Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "58",
        "description": "Set the gain on the Microphone input connector. The gain should be adjusted to suit the output level of the connected audio source. The gain can be tuned in steps of 1 dB. If the gain is set too high, the audio signal will be clipped. If the gain is set too low, the audio signal-to-noise ratio will be degraded; however, this is usually preferable to clipping. Note that unprocessed speech signals typically contain significant level variations, making it very important to allow for sufficient signal headroom. The maximum input level with 0 dB gain, is 24 dBu. Example: If your microphone has a maximum output level of -44 dBu, then you should set the gain to 24 dBu - (-44 dBu) = 68 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "70",
          "Min": "0",
          "Step": "70",
          "type": "Integer"
        }
      },
      "id": 33939,
      "normPath": "Audio Input Microphone Level",
      "path": "Audio Input Microphone[1..8] Level",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Disable or enable audio on the microphone connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32107,
      "normPath": "Audio Input Microphone Mode",
      "path": "Audio Input Microphone[1..8] Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "This setting is only for the analog microphone inputs on Codec Pro. Configure the microphone input to override the main mute state of the system (i.e., the one controlled with the ordinary mute button(s)). This allows for the microphone input to be unmuted and used as a line input for transmitting presentation sounds, etc. during active video input. Note that the microphone may still be muted if it is associated with an inactive video input and is set to mute on inactive video input. As an example, if one needs to present audio from an analog source, some of the microphone inputs need to be repurposed as line inputs. Without MuteOverride, the sound from these presentation sources will go silent when the presenter muted the microphone(s) during playback of the presentation.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 34580,
      "normPath": "Audio Input Microphone MuteOverride",
      "path": "Audio Input Microphone[1..8] MuteOverride",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether or not to have phantom power (48 V +/- 1 V) on the microphone input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32108,
      "normPath": "Audio Input Microphone PhantomPower",
      "path": "Audio Input Microphone[1..8] PhantomPower",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        },
        "description": "The microphone can be associated with a video source on the video input connector, and you can determine whether to play or mute audio depending on whether the video source is presented or not. By default, audio is not muted."
      },
      "id": 28339,
      "normPath": "Audio Input Microphone VideoAssociation MuteOnInactiveVideo",
      "path": "Audio Input Microphone[1..8] VideoAssociation MuteOnInactiveVideo",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The microphone can be associated with a video source on the video input connector, and you can determine whether to play or mute audio depending on whether the video source is presented or not. By default, audio is not muted.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32109,
      "normPath": "Audio Input Microphone VideoAssociation MuteOnInactiveVideo",
      "path": "Audio Input Microphone[1..8] VideoAssociation MuteOnInactiveVideo",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Select the video input connector to associate the audio source with.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "type": "Literal"
        }
      },
      "id": 32110,
      "normPath": "Audio Input Microphone VideoAssociation VideoInputSource",
      "path": "Audio Input Microphone[1..8] VideoAssociation VideoInputSource",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Disable or enable audio on the microphone connector. Note that Microphone [1] is the device's internal microphone.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32408,
      "normPath": "Audio Input Microphone Mode",
      "path": "Audio Input Microphone[1] Mode",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The video conferencing device has built-in signal processing to reduce the effect of room reverberation. Dereverberation requires that Audio Input Microphone [n] EchoControl Mode is enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32409,
      "normPath": "Audio Input Microphone EchoControl Dereverberation",
      "path": "Audio Input Microphone[2] EchoControl Dereverberation",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The echo canceller continuously adjusts itself to the audio characteristics of the room, and compensates for any changes it detects in the audio environment. If the changes in the audio conditions are significant, the echo canceller may take a second or two to re-adjust.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32410,
      "normPath": "Audio Input Microphone EchoControl Mode",
      "path": "Audio Input Microphone[2] EchoControl Mode",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video conferencing device has built-in noise reduction, which reduces stationary background noise, for example noise from air-conditioning systems, cooling fans etc. In addition, a high pass filter (Humfilter) reduces very low frequency noise. Noise reduction requires that Audio Input Microphone [n] EchoControl Mode is enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32411,
      "normPath": "Audio Input Microphone EchoControl NoiseReduction",
      "path": "Audio Input Microphone[2] EchoControl NoiseReduction",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "14",
        "description": "Set the gain on the Microphone input connector. The gain should be adjusted to suit the output level of the connected audio source. The gain can be tuned in steps of 1 dB. If the gain is set too high, the audio signal will be clipped. If the gain is set too low, the audio signal-to-noise ratio will be degraded; however, this is usually preferable to clipping. Note that unprocessed speech signals typically contain significant level variations, making it very important to allow for sufficient signal headroom. The maximum input level with 0 dB gain is -18 dBu. Example: If your microphone has a maximum output level of -40 dBu, then you should set the gain to -18 dBu - (-40 dBu) = 22 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "24",
          "Min": "0",
          "Step": "24",
          "type": "Integer"
        }
      },
      "id": 34053,
      "normPath": "Audio Input Microphone Level",
      "path": "Audio Input Microphone[2] Level",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Disable or enable audio on the microphone connector. Note that Microphone [1] is the device's internal microphone.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32413,
      "normPath": "Audio Input Microphone Mode",
      "path": "Audio Input Microphone[2] Mode",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The video conferencing device has built-in signal processing to reduce the effect of room reverberation. Dereverberation requires that Audio Input Microphone [n] EchoControl Mode is enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32414,
      "normPath": "Audio Input Microphone EchoControl Dereverberation",
      "path": "Audio Input Microphone[3] EchoControl Dereverberation",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The echo canceller continuously adjusts itself to the audio characteristics of the room, and compensates for any changes it detects in the audio environment. If the changes in the audio conditions are significant, the echo canceller may take a second or two to re-adjust.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32415,
      "normPath": "Audio Input Microphone EchoControl Mode",
      "path": "Audio Input Microphone[3] EchoControl Mode",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video conferencing device has built-in noise reduction, which reduces stationary background noise, for example noise from air-conditioning systems, cooling fans etc. In addition, a high pass filter (Humfilter) reduces very low frequency noise. Noise reduction requires that Audio Input Microphone [n] EchoControl Mode is enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32416,
      "normPath": "Audio Input Microphone EchoControl NoiseReduction",
      "path": "Audio Input Microphone[3] EchoControl NoiseReduction",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "14",
        "description": "Set the gain on the Microphone input connector. The gain should be adjusted to suit the output level of the connected audio source. The gain can be tuned in steps of 1 dB. If the gain is set too high, the audio signal will be clipped. If the gain is set too low, the audio signal-to-noise ratio will be degraded; however, this is usually preferable to clipping. Note that unprocessed speech signals typically contain significant level variations, making it very important to allow for sufficient signal headroom. The maximum input level with 0 dB gain is -18 dBu. Example: If your microphone has a maximum output level of -40 dBu, then you should set the gain to -18 dBu - (-40 dBu) = 22 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "24",
          "Min": "0",
          "Step": "24",
          "type": "Integer"
        }
      },
      "id": 34054,
      "normPath": "Audio Input Microphone Level",
      "path": "Audio Input Microphone[3] Level",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Disable or enable audio on the microphone connector. Note that Microphone [1] is the device's internal microphone.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32418,
      "normPath": "Audio Input Microphone Mode",
      "path": "Audio Input Microphone[3] Mode",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Focused",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Focused",
            "Wide"
          ],
          "type": "Literal"
        }
      },
      "id": 29489,
      "normPath": "Audio Input MicrophoneMode",
      "path": "Audio Input MicrophoneMode",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "0",
          "Min": "-24",
          "Step": "0",
          "type": "Integer"
        }
      },
      "id": 29461,
      "normPath": "Audio Input USBC Level",
      "path": "Audio Input USBC[1] Level",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 29462,
      "normPath": "Audio Input USBC Mode",
      "path": "Audio Input USBC[1] Mode",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 29463,
      "normPath": "Audio Input USBC VideoAssociation MuteOnInactiveVideo",
      "path": "Audio Input USBC[1] VideoAssociation MuteOnInactiveVideo",
      "products": [
        "octavio"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35198,
      "normPath": "Audio Input USBInterface EchoControl Mode",
      "path": "Audio Input USBInterface[1] EchoControl Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "5",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "24",
          "Min": "0",
          "Step": "24",
          "type": "Integer"
        }
      },
      "id": 35199,
      "normPath": "Audio Input USBInterface Level",
      "path": "Audio Input USBInterface[1] Level",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35200,
      "normPath": "Audio Input USBInterface Mode",
      "path": "Audio Input USBInterface[1] Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "5",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "24",
          "Min": "0",
          "Step": "24",
          "type": "Integer"
        }
      },
      "id": 35074,
      "normPath": "Audio Input USBMicrophone Level",
      "path": "Audio Input USBMicrophone[1] Level",
      "products": [
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 29661,
      "normPath": "Audio Input WebView Mode",
      "path": "Audio Input WebView[1] Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Enable or disable Automatic Gain Control (AGC) on the microphones.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30952,
      "normPath": "Audio Microphones AGC",
      "path": "Audio Microphones AGC",
      "products": [
        "hopen",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "True",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "InCallOnly",
            "True"
          ],
          "type": "Literal"
        },
        "description": "Define the microphone mute behavior on the device."
      },
      "id": 30555,
      "normPath": "Audio Microphones Mute Enabled",
      "path": "Audio Microphones Mute Enabled",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "True",
        "description": "Define the microphone mute behavior on the device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "InCallOnly",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 30733,
      "normPath": "Audio Microphones Mute Enabled",
      "path": "Audio Microphones Mute Enabled",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Manual",
        "description": "This config is used to turn on/off the noise removal feature on a device. If this is disabled, the option will not be shown on the user interface and it will not be possible to set it through the xAPI.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Enabled",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 33762,
      "normPath": "Audio Microphones NoiseRemoval Mode",
      "path": "Audio Microphones NoiseRemoval Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether or not to have phantom power (11 V +/- 1 V) on the microphone input.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 28976,
      "normPath": "Audio Microphones PhantomPower",
      "path": "Audio Microphones PhantomPower",
      "products": [
        "hopen",
        "spitsbergen",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "To obtain lip-synchronization, you can configure each ARC output with an extra delay that compensates for delay in other connected devices, for example TVs and external loudspeakers. The delay that you set here is either fixed or relative to the delay measured on or reported by an external monitor, as defined in the Audio Output ARC [n] Delay Mode setting.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "290",
          "Min": "0",
          "Step": "290",
          "type": "Integer"
        }
      },
      "id": 32111,
      "normPath": "Audio Output ARC Delay DelayMs",
      "path": "Audio Output ARC[1] Delay DelayMs",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "RelativeToHDMI",
        "description": "You may add extra delay to an audio ARC output with the Audio Output ARC [n] Delay DelayMs setting. The extra delay added is either a fixed number of milliseconds, or a number of milliseconds relative to the detected delay on or reported by an external monitor.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Fixed",
            "RelativeToHDMI"
          ],
          "type": "Literal"
        }
      },
      "id": 32112,
      "normPath": "Audio Output ARC Delay Mode",
      "path": "Audio Output ARC[1] Delay Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Fixed",
        "description": "You may add extra delay to an audio ARC output with the Audio Output ARC [n] Delay DelayMs setting. The extra delay added is either a fixed number of milliseconds, or a number of milliseconds relative to the detected delay on or reported by an external monitor.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Fixed",
            "RelativeToHDMI"
          ],
          "type": "Literal"
        }
      },
      "id": 32334,
      "normPath": "Audio Output ARC Delay Mode",
      "path": "Audio Output ARC[1] Delay Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Choose whether or not to enable the audio return channel (ARC) on the HDMI [n] input connector. The ARC output must be enabled if you want audio playback through the Quad Camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32113,
      "normPath": "Audio Output ARC Mode",
      "path": "Audio Output ARC[1] Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Choose whether or not to enable the audio return channel (ARC) on the HDMI [n] input connector. The ARC output must be enabled if you want audio playback through the camera. The camera is a part of the integrated loudspeaker system. We recommend to leave the ARC output enabled. If you want to disable the complete integrated loudspeaker system, use the Audio Output InternalSpeaker Mode setting.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32335,
      "normPath": "Audio Output ARC Mode",
      "path": "Audio Output ARC[1] Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "You can choose whether to set up the audio inputs and outputs manually, or to let the video conferencing device do it automatically based on the type of camera you have and which screens are connected. In Auto mode, you cannot add, update, delete or connect audio inputs and outputs manually. Therefore the following API commands do not have any effect: xCommand Audio Setup *, xCommand Audio LocalInput *, and xCommand Audio LocalOutput *. When going from Manual to Auto mode: The existing Audio setup is cleared (xCommand Audio Setup Clear), and the input and output groups are set up according to product defaults. The Audio Output HDMI [n] Mode and Audio Output ARC [1] Mode settings are set to their default value, and automatic delay measurement is enabled. When going from Auto to Manual mode: The HDMI and ARC output connectors are connected to the default groups. The Audio Output HDMI [n] Mode and Audio Output ARC [1] Mode settings are not changed. Delay measurement is stopped.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 33941,
      "normPath": "Audio Output ConnectorSetup",
      "path": "Audio Output ConnectorSetup",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "You can choose whether to set up the audio inputs and outputs manually, or to let the video conferencing device do it automatically based on the type of camera you have and which screens are connected. In Auto mode, you cannot add, update, delete or connect audio inputs and outputs manually. Therefore the following API commands do not have any effect: xCommand Audio Setup *, xCommand Audio LocalInput *, and xCommand Audio LocalOutput *. When going from Manual to Auto mode: The existing Audio setup is cleared (xCommand Audio Setup Clear), and the input and output groups are set up according to product defaults. The Audio Output HDMI [n] Mode and Audio Output ARC [1] Mode settings are set to their default value. When going from Auto to Manual mode: The HDMI and ARC output connectors are connected to the default groups. The Audio Output HDMI [n] Mode and Audio Output ARC [1] Mode settings are not changed.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 34003,
      "normPath": "Audio Output ConnectorSetup",
      "path": "Audio Output ConnectorSetup",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35214,
      "normPath": "Audio Output Ethernet Mode",
      "path": "Audio Output Ethernet[1..2] Mode",
      "products": [
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "To obtain lip-synchronization, you can configure each HDMI output with an extra delay that compensates for delay in other connected devices, for example TVs and external loudspeakers. The delay that you set here is either fixed or relative to the delay measured on or reported by an external monitor, as defined in the Audio Output HDMI [n] Delay Mode setting.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "290",
          "Min": "0",
          "Step": "290",
          "type": "Integer"
        }
      },
      "id": 32114,
      "normPath": "Audio Output HDMI Delay DelayMs",
      "path": "Audio Output HDMI[1..3] Delay DelayMs",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Fixed",
        "description": "You may add extra delay to an audio hdmi output with the Audio Output HDMI [n] Delay DelayMs setting. The extra delay added is either a fixed number of milliseconds, or a number of milliseconds relative to the detected delay on or reported by an external monitor.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Fixed",
            "RelativeToHDMI"
          ],
          "type": "Literal"
        }
      },
      "id": 32115,
      "normPath": "Audio Output HDMI Delay Mode",
      "path": "Audio Output HDMI[1..3] Delay Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Set the gain on the HDMI input connector. The gain can be tuned in steps of 1 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "0",
          "Min": "-24",
          "Step": "0",
          "type": "Integer"
        }
      },
      "id": 32336,
      "normPath": "Audio Output HDMI Level",
      "path": "Audio Output HDMI[1..3] Level",
      "products": [
        "barents_70d",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define if the audio channel on this HDMI output connector shall be enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32116,
      "normPath": "Audio Output HDMI Mode",
      "path": "Audio Output HDMI[1..3] Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: On; [2]: On; [3]: Off; ",
        "description": "Define if the audio channel on this HDMI output connector shall be enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32337,
      "normPath": "Audio Output HDMI Mode",
      "path": "Audio Output HDMI[1..3] Mode",
      "products": [
        "barents_70d"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: On; [2]: Off; [3]: Off; ",
        "description": "Define if the audio channel on this HDMI output connector shall be enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32369,
      "normPath": "Audio Output HDMI Mode",
      "path": "Audio Output HDMI[1..3] Mode",
      "products": [
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define if the audio channel on this HDMI output connector shall be enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32611,
      "normPath": "Audio Output HDMI Mode",
      "path": "Audio Output HDMI[1] Mode",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether or not to use the device's integrated speakers. You can limit their use to play only ultrasound. The Audio Output ARC 1 Mode and the Audio Output HDMI [n] Mode settings for the integrated monitor(s) must be set to On in order to play any audio on the integrated speakers.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On",
            "UltrasoundOnly"
          ],
          "type": "Literal"
        }
      },
      "id": 30853,
      "normPath": "Audio Output InternalSpeaker Mode",
      "path": "Audio Output InternalSpeaker Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether or not to use the device's integrated speakers. You can limit their use to play only ultrasound.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On",
            "UltrasoundOnly"
          ],
          "type": "Literal"
        }
      },
      "id": 30953,
      "normPath": "Audio Output InternalSpeaker Mode",
      "path": "Audio Output InternalSpeaker Mode",
      "products": [
        "hopen",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether or not to use the camera's integrated speakers. The device must be connected to a Quad Camera for this setting to apply.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30989,
      "normPath": "Audio Output InternalSpeaker Mode",
      "path": "Audio Output InternalSpeaker Mode",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: Left; [2]: Right; [3]: Left; [4]: Right; [5]: Left; [6]: Right; ",
        "description": "Define whether the Audio Line output is a mono signal or part of a multichannel signal.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Left",
            "Mono",
            "Right"
          ],
          "type": "Literal"
        }
      },
      "id": 32117,
      "normPath": "Audio Output Line Channel",
      "path": "Audio Output Line[1..6] Channel",
      "products": [
        "barents",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: Mono; [2]: Mono; [3]: Left; [4]: Right; [5]: Left; [6]: Right; ",
        "description": "Define whether the Audio Line output is a mono signal or part of a multichannel signal.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Left",
            "Mono",
            "Right"
          ],
          "type": "Literal"
        }
      },
      "id": 33320,
      "normPath": "Audio Output Line Channel",
      "path": "Audio Output Line[1..6] Channel",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "To obtain lip-synchronization, you can configure each audio line output with an extra delay that compensates for delay in other connected devices, for example TVs and external loudspeakers. The delay that you set here is either fixed or relative to the delay on the HDMI output, as defined in the Audio Output Line [n] Delay Mode setting.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "290",
          "Min": "0",
          "Step": "290",
          "type": "Integer"
        }
      },
      "id": 32118,
      "normPath": "Audio Output Line Delay DelayMs",
      "path": "Audio Output Line[1..6] Delay DelayMs",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "RelativeToHDMI",
        "description": "You may add extra delay to an audio line output with the Audio Output Line [n] Delay DelayMs setting. The extra delay added is either a fixed number of milliseconds, or a number of milliseconds relative to the detected delay on the HDMI output (typically introduced by the connected TV).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Fixed",
            "RelativeToHDMI"
          ],
          "type": "Literal"
        }
      },
      "id": 32119,
      "normPath": "Audio Output Line Delay Mode",
      "path": "Audio Output Line[1..6] Delay Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Fixed",
        "description": "You may add extra delay to an audio line output with the Audio Output Line [n] Delay DelayMs setting. The extra delay added is either a fixed number of milliseconds, or a number of milliseconds relative to the detected delay on the HDMI output (typically introduced by the connected TV).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Fixed",
            "RelativeToHDMI"
          ],
          "type": "Literal"
        }
      },
      "id": 32338,
      "normPath": "Audio Output Line Delay Mode",
      "path": "Audio Output Line[1..6] Delay Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Select the equalizer ID for the audio source that is connected to the output line.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "8",
          "Min": "1",
          "Step": "8",
          "type": "Integer"
        }
      },
      "id": 32120,
      "normPath": "Audio Output Line Equalizer ID",
      "path": "Audio Output Line[1..6] Equalizer ID",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define the equalizer mode for the audio source that is connected to the line output.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32121,
      "normPath": "Audio Output Line Equalizer Mode",
      "path": "Audio Output Line[1..6] Equalizer Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "-4",
        "description": "Set the gain on the Line output connector. The gain should be adjusted to fit the audio input level of the connected device. The gain can be tuned in steps of 1 dB. The maximum output level with 0 dB gain is 18 dBu. Example: If he connected audio device has max input level 10 dBu, then you should set the gain to 10 dBu - 18 dBu = -8 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "0",
          "Min": "-24",
          "Step": "0",
          "type": "Integer"
        }
      },
      "id": 34561,
      "normPath": "Audio Output Line Level",
      "path": "Audio Output Line[1..6] Level",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define the mode for the audio line output.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32123,
      "normPath": "Audio Output Line Mode",
      "path": "Audio Output Line[1..6] Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Set the gain on the Line output connector. The gain should be adjusted to fit the audio input level of the connected device. The gain can be tuned in steps of 1 dB. The maximum output level with 0 dB gain is 8 dBu. Example: If the connected audio device has max input level 4 dBu, then you should set the gain to 4 dBu - 8 dBu = -4 dB.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "0",
          "Min": "-24",
          "Step": "0",
          "type": "Integer"
        }
      },
      "id": 34086,
      "normPath": "Audio Output Line Level",
      "path": "Audio Output Line[1] Level",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define the mode for the audio line output.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32419,
      "normPath": "Audio Output Line Mode",
      "path": "Audio Output Line[1] Mode",
      "products": [
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Loudspeaker",
        "description": "The output type should be set to match the connected device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "LineOut",
            "Loudspeaker",
            "Microphone",
            "Recorder",
            "Subwoofer"
          ],
          "type": "Literal"
        }
      },
      "id": 32420,
      "normPath": "Audio Output Line OutputType",
      "path": "Audio Output Line[1] OutputType",
      "products": [
        "hopen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Loudspeaker",
        "description": "The output type should be set to match the connected device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "LineOut",
            "Loudspeaker",
            "Microphone",
            "Recorder"
          ],
          "type": "Literal"
        }
      },
      "id": 32630,
      "normPath": "Audio Output Line OutputType",
      "path": "Audio Output Line[1] OutputType",
      "products": [
        "spitsbergen",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "LineOut",
        "description": "The output type should be set to match the connected device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "LineOut",
            "Loudspeaker",
            "Microphone",
            "Recorder"
          ],
          "type": "Literal"
        }
      },
      "id": 32673,
      "normPath": "Audio Output Line OutputType",
      "path": "Audio Output Line[1] OutputType",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35201,
      "normPath": "Audio Output USBInterface Mode",
      "path": "Audio Output USBInterface[1] Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Sunrise",
        "description": "Define which ringtone to use for incoming calls.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "MaxLength": "100",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 26735,
      "normPath": "Audio SoundsAndAlerts RingTone",
      "path": "Audio SoundsAndAlerts RingTone",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Waves",
        "description": "Define which ringtone to use for incoming calls.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "MaxLength": "100",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 28780,
      "normPath": "Audio SoundsAndAlerts RingTone",
      "path": "Audio SoundsAndAlerts RingTone",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "50",
        "description": "Define the ring volume for incoming calls.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Max": "100",
          "Min": "0",
          "Step": "100",
          "type": "Integer"
        }
      },
      "id": 26736,
      "normPath": "Audio SoundsAndAlerts RingVolume",
      "path": "Audio SoundsAndAlerts RingVolume",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "70",
        "description": "This setting applies to the Intelligent Proximity feature. Set the maximum volume of the ultrasound pairing messages. The Audio Ultrasound MaxVolume and Proximity Mode settings only affect ultrasound pairing messages. See the RoomAnalytics PeoplePresenceDetector and Standby WakeupOnMotionDetection settings for information about the use of ultrasound in presence and motion detection.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "90",
          "Min": "0",
          "Step": "90",
          "type": "Integer"
        }
      },
      "id": 30735,
      "normPath": "Audio Ultrasound MaxVolume",
      "path": "Audio Ultrasound MaxVolume",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "70",
        "description": "This setting applies to the Intelligent Proximity feature. Set the maximum volume of the ultrasound pairing messages. The Audio Ultrasound MaxVolume and Proximity Mode settings only affect ultrasound pairing messages. See the RoomAnalytics PeoplePresenceDetector and Standby WakeupOnMotionDetection settings for information about the use of ultrasound in presence and motion detection.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "70",
          "Min": "0",
          "Step": "70",
          "type": "Integer"
        }
      },
      "id": 30854,
      "normPath": "Audio Ultrasound MaxVolume",
      "path": "Audio Ultrasound MaxVolume",
      "products": [
        "bandai",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "SpeakerAndMicrophone",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Microphone",
            "Off",
            "Speaker",
            "SpeakerAndMicrophone"
          ],
          "type": "Literal"
        },
        "description": "Enable/disable the USB connector audio channels."
      },
      "id": 31841,
      "normPath": "Audio USB Mode",
      "path": "Audio USB Mode",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "SpeakerAndMicrophone",
        "description": "Enable/disable the USB connector audio channels.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AdditionalMicrophone",
            "Microphone",
            "Off",
            "Speaker",
            "SpeakerAndMicrophone"
          ],
          "type": "Literal"
        }
      },
      "id": 34256,
      "normPath": "Audio USB Mode",
      "path": "Audio USB Mode",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "SpeakerAndMicrophone",
        "description": "Enable/disable the USB connector audio channels.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Microphone",
            "Off",
            "Speaker",
            "SpeakerAndMicrophone"
          ],
          "type": "Literal"
        }
      },
      "id": 34257,
      "normPath": "Audio USB Mode",
      "path": "Audio USB Mode",
      "products": [
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "True",
        "description": "The device has a built-in Bluetooth® module. As a default, the user can turn it on or off using the user interface. With this setting, the administrator can disable Bluetooth configuration, so that it cannot be set up from the user interface.",
        "read": [
          "Admin",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 34060,
      "normPath": "Bluetooth Allowed",
      "path": "Bluetooth Allowed",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "False",
        "description": "Provided that Bluetooth® connections are allowed (see the Bluetooth Allowed setting), you can use this setting to enable and disable Bluetooth. The video conferencing device supports the HFP (Hands-Free Profile) and A2DP (Advanced Audio Distribution Profile) profiles. Headsets that only supports A2DP cannot be used.",
        "read": [
          "Admin",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 34061,
      "normPath": "Bluetooth Enabled",
      "path": "Bluetooth Enabled",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Video devices can join Microsoft Teams meetings either using SIP via a Cloud Video Interop (CVI) gateway, which is a service that is provided in the Webex cloud, or by running the Microsoft Teams meeting web app (WebRTC). Joining Microsoft Teams meetings relies on a calendar service and is available for devices that are registered to an on-premises service and linked to Webex Edge for Devices, and for devices that are registered to the Webex cloud service.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "WebRTC"
          ],
          "type": "Literal"
        }
      },
      "id": 33765,
      "normPath": "Bookings ProtocolPriority",
      "path": "Bookings ProtocolPriority",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "False",
        "description": "If you use an external mouse or keyboard for your laptop (wired USB or USB dongle), you can connect them to the video conferencing device's USB port instead of directly to the laptop.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 34067,
      "normPath": "BYOD HidForwarding Enabled",
      "path": "BYOD HidForwarding Enabled",
      "products": [
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "True",
        "description": "Use this setting to enable or disable the touch redirect feature. Touch redirect enables you to control your laptop from the touch screen of the video device. You must connect the laptop to the device with an HDMI cable (wired sharing) and a USB-C cable. You can use either a USB-C to USB-C cable or a USB-C to USB-A cable from the device to the laptop.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 34029,
      "normPath": "BYOD TouchForwarding Enabled",
      "path": "BYOD TouchForwarding Enabled",
      "products": [
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Specify whether or not information about calls that are placed or received are stored, including missed calls and calls that are not answered (call history). This determines whether or not the calls appear in the Recents list in the user interfaces.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30736,
      "normPath": "CallHistory Mode",
      "path": "CallHistory Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "True",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 29667,
      "normPath": "Cameras Background Enabled",
      "path": "Cameras Background Enabled",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "True",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 31256,
      "normPath": "Cameras Background UserImagesAllowed",
      "path": "Cameras Background UserImagesAllowed",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "The camera ID is the number n in Camera [n]. By default, the camera ID is assigned automatically to a camera. If EDID information is not passed on from the camera to the video conferencing device, the camera ID is not persistent after a reboot. This means that a camera may get a new camera ID when the video conferencing device is restarted. You should use the Cameras Camera AssignedSerialNumber setting to cater for configurations where the video conferencing device does not receive EDID information from multiple cameras. This setting allows you to manually assign a camera ID to a camera by associating the camera ID with the camera's serial number. The setting is persistent until the video conferencing device is factory reset. Typical situations where the video conferencing device does not receive EDID information are: when you connect a Cisco TelePresence Precision 60 camera using 3G-SDI, or when you use an HDMI repeater that does not pass on EDID information.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "20",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 34082,
      "normPath": "Cameras Camera AssignedSerialNumber",
      "path": "Cameras Camera[1..3] AssignedSerialNumber",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "This configuration turns backlight compensation on or off. Backlight compensation is useful when there is much light behind the persons in the room. Without compensation the persons will easily appear very dark to the far end. Not applicable if you have a Cisco Quad Camera, because this camera automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32646,
      "normPath": "Cameras Camera Backlight DefaultMode",
      "path": "Cameras Camera[1..3] Backlight DefaultMode",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "This configuration turns backlight compensation on or off. Backlight compensation is useful when there is much light behind the persons in the room. Without compensation the persons will easily appear very dark to the far end. Not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32674,
      "normPath": "Cameras Camera Backlight DefaultMode",
      "path": "Cameras Camera[1..3] Backlight DefaultMode",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20",
        "description": "Define the brightness level. Requires the Cameras Camera [n] Brightness Mode to be set to Manual.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "31",
          "Min": "1",
          "Step": "31",
          "type": "Integer"
        }
      },
      "id": 32647,
      "normPath": "Cameras Camera Brightness DefaultLevel",
      "path": "Cameras Camera[1..3] Brightness DefaultLevel",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20",
        "description": "Define the brightness level. Requires the Cameras Camera [n] Brightness Mode to be set to Manual. Not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "31",
          "Min": "1",
          "Step": "31",
          "type": "Integer"
        }
      },
      "id": 32675,
      "normPath": "Cameras Camera Brightness DefaultLevel",
      "path": "Cameras Camera[1..3] Brightness DefaultLevel",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera brightness mode.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32648,
      "normPath": "Cameras Camera Brightness Mode",
      "path": "Cameras Camera[1..3] Brightness Mode",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera brightness mode. Not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32676,
      "normPath": "Cameras Camera Brightness Mode",
      "path": "Cameras Camera[1..3] Brightness Mode",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "With Flip mode (vertical flip) you can flip the image upside down. Flipping applies both to the self-view and the video that is transmitted to the far end. This feature is not supported by the Quad Camera and the PTZ-12 camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 34084,
      "normPath": "Cameras Camera Flip",
      "path": "Cameras Camera[1..3] Flip",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "With Flip mode (vertical flip) you can flip the image upside down. Flipping applies both to the self-view and the video that is transmitted to the far end. This feature is not supported by the integrated camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 34087,
      "normPath": "Cameras Camera Flip",
      "path": "Cameras Camera[1..3] Flip",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera focus mode.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "AutoLimited",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32650,
      "normPath": "Cameras Camera Focus Mode",
      "path": "Cameras Camera[1..3] Focus Mode",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera focus mode.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32678,
      "normPath": "Cameras Camera Focus Mode",
      "path": "Cameras Camera[1..3] Focus Mode",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "By setting the Gamma Level you can select which gamma correction table to use. This setting may be useful in difficult lighting conditions, where changes to the brightness setting does not provide satisfactory results. Requires the Cameras Camera [n] Gamma Mode to be set to Manual. It's not applicable if you have a Cisco Quad Camera, because this camera automatically adjusts itself based on the room lighting conditions. Also, this feature is not supported by the PTZ-12 camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "7",
          "Min": "0",
          "Step": "7",
          "type": "Integer"
        }
      },
      "id": 32651,
      "normPath": "Cameras Camera Gamma Level",
      "path": "Cameras Camera[1..3] Gamma Level",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "By setting the Gamma Level you can select which gamma correction table to use. This setting may be useful in difficult lighting conditions, where changes to the brightness setting does not provide satisfactory results. Requires the Cameras Camera [n] Gamma Mode to be set to Manual. It's not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "7",
          "Min": "0",
          "Step": "7",
          "type": "Integer"
        }
      },
      "id": 32679,
      "normPath": "Cameras Camera Gamma Level",
      "path": "Cameras Camera[1..3] Gamma Level",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "This setting enables gamma corrections. Gamma describes the nonlinear relationship between image pixels and monitor brightness. It's not applicable if you have a Cisco Quad Camera, because this camera automatically adjusts itself based on the room lighting conditions. Also, this feature is not supported by the PTZ-12 camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32652,
      "normPath": "Cameras Camera Gamma Mode",
      "path": "Cameras Camera[1..3] Gamma Mode",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "This setting enables gamma corrections. Gamma describes the nonlinear relationship between image pixels and monitor brightness. It's not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32680,
      "normPath": "Cameras Camera Gamma Mode",
      "path": "Cameras Camera[1..3] Gamma Mode",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "With Mirror mode (horizontal flip) you can mirror the image on screen. Mirroring applies both to the self-view and the video that is transmitted to the far end. This setting is not applicable when your video conferencing device has a Cisco Quad Camera or when speaker tracking is on. Also, this feature is not supported by the PTZ-12 camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32653,
      "normPath": "Cameras Camera Mirror",
      "path": "Cameras Camera[1..3] Mirror",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "With Mirror mode (horizontal flip) you can mirror the image on screen. Mirroring applies both to the self-view and the video that is transmitted to the far end. Mirroring is automatically disabled when speaker tracking is on.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32681,
      "normPath": "Cameras Camera Mirror",
      "path": "Cameras Camera[1..3] Mirror",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define the white balance level. Requires the Cameras Camera [n] Whitebalance Mode to be set to Manual. It's not applicable if you have a Cisco Quad Camera, because this camera automatically adjusts itself based on the room lighting conditions. Also, the Whitebalance Level setting has no effect for the PTZ-12 camera, which is using Sony's One Push mode when the Whitebalance Mode is set to manual.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "16",
          "Min": "1",
          "Step": "16",
          "type": "Integer"
        }
      },
      "id": 32654,
      "normPath": "Cameras Camera Whitebalance Level",
      "path": "Cameras Camera[1..3] Whitebalance Level",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define the white balance level. Requires the Cameras Camera [n] Whitebalance Mode to be set to Manual. It's not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "16",
          "Min": "1",
          "Step": "16",
          "type": "Integer"
        }
      },
      "id": 32682,
      "normPath": "Cameras Camera Whitebalance Level",
      "path": "Cameras Camera[1..3] Whitebalance Level",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera white balance mode. It's not applicable if you have a Cisco Quad Camera, because this camera automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32655,
      "normPath": "Cameras Camera Whitebalance Mode",
      "path": "Cameras Camera[1..3] Whitebalance Mode",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera white balance mode. It's not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32683,
      "normPath": "Cameras Camera Whitebalance Mode",
      "path": "Cameras Camera[1..3] Whitebalance Mode",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "The camera ID is the number n in Camera [n]. By default, the camera ID is assigned automatically to a camera. If EDID information is not passed on from the camera to the video conferencing device, the camera ID is not persistent after a reboot. This means that a camera may get a new camera ID when the video conferencing device is restarted. You should use the Cameras Camera AssignedSerialNumber setting to cater for configurations where the video conferencing device does not receive EDID information from multiple cameras. This setting allows you to manually assign a camera ID to a camera by associating the camera ID with the camera's serial number. The setting is persistent until the video conferencing device is factory reset. Typical situations where the video conferencing device does not receive EDID information are: when you connect a Cisco TelePresence Precision 60 camera using 3G-SDI, or when you use an HDMI repeater that does not pass on EDID information.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "20",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 33943,
      "normPath": "Cameras Camera AssignedSerialNumber",
      "path": "Cameras Camera[1..7] AssignedSerialNumber",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "This configuration turns backlight compensation on or off. Backlight compensation is useful when there is much light behind the persons in the room. Without compensation the persons will easily appear very dark to the far end. Not applicable if you have a Cisco Quad Camera, because this camera automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32125,
      "normPath": "Cameras Camera Backlight DefaultMode",
      "path": "Cameras Camera[1..7] Backlight DefaultMode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "This configuration turns backlight compensation on or off. Backlight compensation is useful when there is much light behind the persons in the room. Without compensation the persons will easily appear very dark to the far end. Not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32339,
      "normPath": "Cameras Camera Backlight DefaultMode",
      "path": "Cameras Camera[1..7] Backlight DefaultMode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20",
        "description": "Define the brightness level. Requires the Cameras Camera [n] Brightness Mode to be set to Manual.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "31",
          "Min": "1",
          "Step": "31",
          "type": "Integer"
        }
      },
      "id": 32126,
      "normPath": "Cameras Camera Brightness DefaultLevel",
      "path": "Cameras Camera[1..7] Brightness DefaultLevel",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20",
        "description": "Define the brightness level. Requires the Cameras Camera [n] Brightness Mode to be set to Manual. Not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "31",
          "Min": "1",
          "Step": "31",
          "type": "Integer"
        }
      },
      "id": 32340,
      "normPath": "Cameras Camera Brightness DefaultLevel",
      "path": "Cameras Camera[1..7] Brightness DefaultLevel",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera brightness mode.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32127,
      "normPath": "Cameras Camera Brightness Mode",
      "path": "Cameras Camera[1..7] Brightness Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera brightness mode. Not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32341,
      "normPath": "Cameras Camera Brightness Mode",
      "path": "Cameras Camera[1..7] Brightness Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "With Flip mode (vertical flip) you can flip the image upside down. Flipping applies both to the self-view and the video that is transmitted to the far end. This feature is not supported by the Quad Camera and the PTZ-12 camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33945,
      "normPath": "Cameras Camera Flip",
      "path": "Cameras Camera[1..7] Flip",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "With Flip mode (vertical flip) you can flip the image upside down. Flipping applies both to the self-view and the video that is transmitted to the far end. This feature is not supported by the integrated camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 34004,
      "normPath": "Cameras Camera Flip",
      "path": "Cameras Camera[1..7] Flip",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera focus mode.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32129,
      "normPath": "Cameras Camera Focus Mode",
      "path": "Cameras Camera[1..7] Focus Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera focus mode.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "AutoLimited",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32734,
      "normPath": "Cameras Camera Focus Mode",
      "path": "Cameras Camera[1..7] Focus Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "By setting the Gamma Level you can select which gamma correction table to use. This setting may be useful in difficult lighting conditions, where changes to the brightness setting does not provide satisfactory results. Requires the Cameras Camera [n] Gamma Mode to be set to Manual. It's not applicable if you have a Cisco Quad Camera, because this camera automatically adjusts itself based on the room lighting conditions. Also, this feature is not supported by the PTZ-12 camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "7",
          "Min": "0",
          "Step": "7",
          "type": "Integer"
        }
      },
      "id": 32130,
      "normPath": "Cameras Camera Gamma Level",
      "path": "Cameras Camera[1..7] Gamma Level",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "By setting the Gamma Level you can select which gamma correction table to use. This setting may be useful in difficult lighting conditions, where changes to the brightness setting does not provide satisfactory results. Requires the Cameras Camera [n] Gamma Mode to be set to Manual. It's not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "7",
          "Min": "0",
          "Step": "7",
          "type": "Integer"
        }
      },
      "id": 32343,
      "normPath": "Cameras Camera Gamma Level",
      "path": "Cameras Camera[1..7] Gamma Level",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "This setting enables gamma corrections. Gamma describes the nonlinear relationship between image pixels and monitor brightness. It's not applicable if you have a Cisco Quad Camera, because this camera automatically adjusts itself based on the room lighting conditions. Also, this feature is not supported by the PTZ-12 camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32131,
      "normPath": "Cameras Camera Gamma Mode",
      "path": "Cameras Camera[1..7] Gamma Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "This setting enables gamma corrections. Gamma describes the nonlinear relationship between image pixels and monitor brightness. It's not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32344,
      "normPath": "Cameras Camera Gamma Mode",
      "path": "Cameras Camera[1..7] Gamma Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "With Mirror mode (horizontal flip) you can mirror the image on screen. Mirroring applies both to the self-view and the video that is transmitted to the far end. This setting is not applicable when your video conferencing device has a Cisco Quad Camera or when speaker tracking is on. Also, this feature is not supported by the PTZ-12 camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32132,
      "normPath": "Cameras Camera Mirror",
      "path": "Cameras Camera[1..7] Mirror",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "With Mirror mode (horizontal flip) you can mirror the image on screen. Mirroring applies both to the self-view and the video that is transmitted to the far end. This setting is not applicable for the integrated camera or when speaker tracking is on.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32345,
      "normPath": "Cameras Camera Mirror",
      "path": "Cameras Camera[1..7] Mirror",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define the white balance level. Requires the Cameras Camera [n] Whitebalance Mode to be set to Manual. It's not applicable if you have a Cisco Quad Camera, because this camera automatically adjusts itself based on the room lighting conditions. Also, the Whitebalance Level setting has no effect for the PTZ-12 camera, which is using Sony's One Push mode when the Whitebalance Mode is set to manual.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "16",
          "Min": "1",
          "Step": "16",
          "type": "Integer"
        }
      },
      "id": 32134,
      "normPath": "Cameras Camera Whitebalance Level",
      "path": "Cameras Camera[1..7] Whitebalance Level",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define the white balance level. Requires the Cameras Camera [n] Whitebalance Mode to be set to Manual. It's not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "16",
          "Min": "1",
          "Step": "16",
          "type": "Integer"
        }
      },
      "id": 32346,
      "normPath": "Cameras Camera Whitebalance Level",
      "path": "Cameras Camera[1..7] Whitebalance Level",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera white balance mode. It's not applicable if you have a Cisco Quad Camera, because this camera automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32135,
      "normPath": "Cameras Camera Whitebalance Mode",
      "path": "Cameras Camera[1..7] Whitebalance Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera white balance mode. It's not applicable for the integrated camera, because it automatically adjusts itself based on the room lighting conditions.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 32347,
      "normPath": "Cameras Camera Whitebalance Mode",
      "path": "Cameras Camera[1..7] Whitebalance Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "31",
          "Min": "1",
          "Step": "31",
          "type": "Integer"
        },
        "description": "Define the brightness level. Requires the Cameras Camera Brightness Mode to be set to Manual."
      },
      "id": 31210,
      "normPath": "Cameras Camera Brightness DefaultLevel",
      "path": "Cameras Camera Brightness DefaultLevel",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20",
        "description": "Define the brightness level. Requires the Cameras Camera Brightness Mode to be set to Manual.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "31",
          "Min": "1",
          "Step": "31",
          "type": "Integer"
        }
      },
      "id": 34037,
      "normPath": "Cameras Camera Brightness DefaultLevel",
      "path": "Cameras Camera Brightness DefaultLevel",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        },
        "description": "Define the camera brightness mode."
      },
      "id": 31211,
      "normPath": "Cameras Camera Brightness Mode",
      "path": "Cameras Camera Brightness Mode",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the camera brightness mode.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 34038,
      "normPath": "Cameras Camera Brightness Mode",
      "path": "Cameras Camera Brightness Mode",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "3",
          "Min": "-3",
          "Step": "3",
          "type": "Integer"
        }
      },
      "id": 31209,
      "normPath": "Cameras Camera ExposureCompensation Level",
      "path": "Cameras Camera ExposureCompensation Level",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "30",
        "description": "As default, the camera outputs 30 frames per second. This allows for good quality both in close-ups and overview pictures for normal bandwidths and lighting conditions. If the conditions are better, a 60 frames per second output from the camera may give a better overall quality.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "30",
            "60"
          ],
          "type": "Literal"
        }
      },
      "id": 28941,
      "normPath": "Cameras Camera Framerate",
      "path": "Cameras Camera Framerate",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "50Hz",
            "60Hz",
            "Auto"
          ],
          "type": "Literal"
        },
        "description": "If your camera supports power line frequency anti-flickering, the camera is able to compensate for any flicker noise from the electrical power supply. You should set this camera configuration based on your power line frequency. If your camera supports auto detection of line frequency, you can select the Auto option in the configuration. The Cisco cameras support both anti-flickering and auto detection of line frequency. Auto is the default value, so you should change this setting if you have a camera that does not support auto detection."
      },
      "id": 29951,
      "normPath": "Cameras PowerLine Frequency",
      "path": "Cameras PowerLine Frequency",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "If your camera supports power line frequency anti-flickering, the camera is able to compensate for any flicker noise from the electrical power supply. You should set this camera configuration based on your power line frequency. If your camera supports auto detection of line frequency, you can select the Auto option in the configuration. The Cisco cameras support both anti-flickering and auto detection of line frequency. Auto is the default value, so you should change this setting if you have a camera that does not support auto detection.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "50Hz",
            "60Hz",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 30737,
      "normPath": "Cameras PowerLine Frequency",
      "path": "Cameras PowerLine Frequency",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Define the pan position that the presenter tracking camera will move to when the feature is activated. Only the Precision 60 and SpeakerTrack 60 cameras support presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "-65535",
          "Step": "65535",
          "type": "Integer"
        }
      },
      "id": 30054,
      "normPath": "Cameras PresenterTrack CameraPosition Pan",
      "path": "Cameras PresenterTrack CameraPosition Pan",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Define the pan position that the presenter tracking camera will move to when the feature is activated. Only the Precision 60 camera supports presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "-65535",
          "Step": "65535",
          "type": "Integer"
        }
      },
      "id": 30061,
      "normPath": "Cameras PresenterTrack CameraPosition Pan",
      "path": "Cameras PresenterTrack CameraPosition Pan",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Define the tilt position that the presenter tracking camera will move to when the feature is activated. Only the Precision 60 and SpeakerTrack 60 cameras support presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "-65535",
          "Step": "65535",
          "type": "Integer"
        }
      },
      "id": 30055,
      "normPath": "Cameras PresenterTrack CameraPosition Tilt",
      "path": "Cameras PresenterTrack CameraPosition Tilt",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Define the tilt position that the presenter tracking camera will move to when the feature is activated. Only the Precision 60 camera supports presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "-65535",
          "Step": "65535",
          "type": "Integer"
        }
      },
      "id": 30062,
      "normPath": "Cameras PresenterTrack CameraPosition Tilt",
      "path": "Cameras PresenterTrack CameraPosition Tilt",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Define the zoom position that the presenter tracking camera will move to when the feature is activated. Only the Precision 60 and SpeakerTrack 60 cameras support presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "-65535",
          "Step": "65535",
          "type": "Integer"
        }
      },
      "id": 30056,
      "normPath": "Cameras PresenterTrack CameraPosition Zoom",
      "path": "Cameras PresenterTrack CameraPosition Zoom",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Define the zoom position that the presenter tracking camera will move to when the feature is activated. Only the Precision 60 camera supports presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "-65535",
          "Step": "65535",
          "type": "Integer"
        }
      },
      "id": 30063,
      "normPath": "Cameras PresenterTrack CameraPosition Zoom",
      "path": "Cameras PresenterTrack CameraPosition Zoom",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define which video input connector the presenter tracking camera is connected to. Only the Precision 60 camera supports presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "3",
          "Min": "1",
          "Step": "3",
          "type": "Integer"
        }
      },
      "id": 30075,
      "normPath": "Cameras PresenterTrack Connector",
      "path": "Cameras PresenterTrack Connector",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define which video input connector the presenter tracking camera is connected to. Only the Precision 60 and SpeakerTrack 60 cameras support presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "6",
          "Min": "1",
          "Step": "6",
          "type": "Integer"
        }
      },
      "id": 30243,
      "normPath": "Cameras PresenterTrack Connector",
      "path": "Cameras PresenterTrack Connector",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define which video input connector the presenter tracking camera is connected to. Only the Precision 60 camera supports presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "6",
          "Min": "1",
          "Step": "6",
          "type": "Integer"
        }
      },
      "id": 30244,
      "normPath": "Cameras PresenterTrack Connector",
      "path": "Cameras PresenterTrack Connector",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define which video input connector the presenter tracking camera is connected to. Only the Precision 60 and SpeakerTrack 60 cameras support presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "3",
          "Min": "1",
          "Step": "3",
          "type": "Integer"
        }
      },
      "id": 30990,
      "normPath": "Cameras PresenterTrack Connector",
      "path": "Cameras PresenterTrack Connector",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "False",
        "description": "Define whether or not the PresenterTrack feature is available for use. Only the Precision 60 and SpeakerTrack 60 cameras support presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 30058,
      "normPath": "Cameras PresenterTrack Enabled",
      "path": "Cameras PresenterTrack Enabled",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "False",
        "description": "Define whether or not the PresenterTrack feature is available for use. Only the Precision 60 camera supports presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 30065,
      "normPath": "Cameras PresenterTrack Enabled",
      "path": "Cameras PresenterTrack Enabled",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Enabled",
        "description": "Define whether to enable or disable automatic switching between the Remote Presenter and Local Presenter modes in the Briefing room and Classroom scenarios (Room Type templates). Automatic switching implies that the device switches to Local Presenter mode when a person is detected in the PresenterTrack trigger zone, and that the device switches back to the Remote Presenter mode when the local presenter leaves the stage. If this setting is enabled, the Cameras PresenterTrack PresenterDetected status will be updated when a new person enters the trigger zone. Only the Precision 60 and SpeakerTrack 60 cameras support presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Enabled"
          ],
          "type": "Literal"
        }
      },
      "id": 30738,
      "normPath": "Cameras PresenterTrack PresenterDetectedStatus",
      "path": "Cameras PresenterTrack PresenterDetectedStatus",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Enabled",
        "description": "Define whether to enable or disable automatic switching between the Remote Presenter and Local Presenter modes in the Briefing room and Classroom scenarios (Room Type templates). Automatic switching implies that the device switches to Local Presenter mode when a person is detected in the PresenterTrack trigger zone, and that the device switches back to the Remote Presenter mode when the local presenter leaves the stage. If this setting is enabled, the Cameras PresenterTrack PresenterDetected status will be updated when a new person enters the trigger zone. Only the Precision 60 camera supports presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Enabled"
          ],
          "type": "Literal"
        }
      },
      "id": 30855,
      "normPath": "Cameras PresenterTrack PresenterDetectedStatus",
      "path": "Cameras PresenterTrack PresenterDetectedStatus",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Enabled",
        "description": "Define whether to enable or disable automatic switching between the Remote Presenter and Local Presenter modes in the Classroom scenario (Room Type templates). Automatic switching implies that the device switches to Local Presenter mode when a person is detected in the PresenterTrack trigger zone, and that the device switches back to the Remote Presenter mode when the local presenter leaves the stage. If this setting is enabled, the Cameras PresenterTrack PresenterDetected status will be updated when a new person enters the trigger zone. Only the Precision 60 and SpeakerTrack 60 cameras support presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Enabled"
          ],
          "type": "Literal"
        }
      },
      "id": 30991,
      "normPath": "Cameras PresenterTrack PresenterDetectedStatus",
      "path": "Cameras PresenterTrack PresenterDetectedStatus",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Enabled",
        "description": "Define whether to enable or disable automatic switching between the Remote Presenter and Local Presenter modes in the Classroom scenario (Room Type templates). Automatic switching implies that the device switches to Local Presenter mode when a person is detected in the PresenterTrack trigger zone, and that the device switches back to the Remote Presenter mode when the local presenter leaves the stage. If this setting is enabled, the Cameras PresenterTrack PresenterDetected status will be updated when a new person enters the trigger zone. Only the Precision 60 camera supports presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Enabled"
          ],
          "type": "Literal"
        }
      },
      "id": 30995,
      "normPath": "Cameras PresenterTrack PresenterDetectedStatus",
      "path": "Cameras PresenterTrack PresenterDetectedStatus",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the trigger zone, which corresponds to the area where a person's face must be detected for presenter tracking to start. The format is a string of x and y coordinate pairs: \"x1,y1,...xn,yn\", where the range of x is (0,1920) and y is (0,1080). Two coordinate pairs define the upper left and lower right corner of a rectangular trigger zone. More than two coordinate pairs define the vertices of a polygonal trigger zone. Only the Precision 60 and SpeakerTrack 60 cameras support presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 33946,
      "normPath": "Cameras PresenterTrack TriggerZone",
      "path": "Cameras PresenterTrack TriggerZone",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the trigger zone, which corresponds to the area where a person's face must be detected for presenter tracking to start. The format is a string of x and y coordinate pairs: \"x1,y1,...xn,yn\", where the range of x is (0,1920) and y is (0,1080). Two coordinate pairs define the upper left and lower right corner of a rectangular trigger zone. More than two coordinate pairs define the vertices of a polygonal trigger zone. Only the Precision 60 camera supports presenter tracking.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 34005,
      "normPath": "Cameras PresenterTrack TriggerZone",
      "path": "Cameras PresenterTrack TriggerZone",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        },
        "description": "This setting applies only when the Cameras SpeakerTrack Mode is set to Auto. When the closeup functionality is turned on, the device will detect that a person is speaking and select the best framing to cover that person. This is called a closeup and may not include all the persons in the room. If you want all the persons in the room to be in the picture at all times you can turn off the closeup functionality."
      },
      "id": 28788,
      "normPath": "Cameras SpeakerTrack Closeup",
      "path": "Cameras SpeakerTrack Closeup",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "This setting applies only when the Cameras SpeakerTrack Mode is set to Auto. When the closeup functionality is turned on, the device will detect that a person is speaking and select the best framing to cover that person. This is called a closeup and may not include all the persons in the room. If you want all the persons in the room to be in the picture at all times you can turn off the closeup functionality.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33947,
      "normPath": "Cameras SpeakerTrack Closeup",
      "path": "Cameras SpeakerTrack Closeup",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "5",
          "Min": "1",
          "Step": "5",
          "type": "Integer"
        },
        "description": "Define the number of the video input that SpeakerTrack 60's left camera is connected to. This setting applies only when a Cisco TelePresence SpeakerTrack 60 camera is connected to the video conferencing device. Furthermore, Cameras SpeakerTrack ConnectorDetection Mode must be set to Manual."
      },
      "id": 30272,
      "normPath": "Cameras SpeakerTrack ConnectorDetection CameraLeft",
      "path": "Cameras SpeakerTrack ConnectorDetection CameraLeft",
      "products": [
        "bandai"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define the number of the video input that SpeakerTrack 60's left camera is connected to. This setting applies only when a Cisco TelePresence SpeakerTrack 60 camera is connected to the video conferencing device. Furthermore, Cameras SpeakerTrack ConnectorDetection Mode must be set to Manual.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "5",
          "Min": "1",
          "Step": "5",
          "type": "Integer"
        }
      },
      "id": 30740,
      "normPath": "Cameras SpeakerTrack ConnectorDetection CameraLeft",
      "path": "Cameras SpeakerTrack ConnectorDetection CameraLeft",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define the number of the video input that SpeakerTrack 60's left camera is connected to. This setting applies only when a Cisco TelePresence SpeakerTrack 60 camera is connected to the video conferencing device. Furthermore, Cameras SpeakerTrack ConnectorDetection Mode must be set to Manual.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "3",
          "Min": "1",
          "Step": "3",
          "type": "Integer"
        }
      },
      "id": 30992,
      "normPath": "Cameras SpeakerTrack ConnectorDetection CameraLeft",
      "path": "Cameras SpeakerTrack ConnectorDetection CameraLeft",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "2",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "5",
          "Min": "1",
          "Step": "5",
          "type": "Integer"
        },
        "description": "Define the number of the video input that SpeakerTrack 60's right camera is connected to. This setting applies only when a Cisco TelePresence SpeakerTrack 60 camera is connected to the video conferencing device. Furthermore, Cameras SpeakerTrack ConnectorDetection Mode must be set to Manual."
      },
      "id": 30273,
      "normPath": "Cameras SpeakerTrack ConnectorDetection CameraRight",
      "path": "Cameras SpeakerTrack ConnectorDetection CameraRight",
      "products": [
        "bandai"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "2",
        "description": "Define the number of the video input that SpeakerTrack 60's right camera is connected to. This setting applies only when a Cisco TelePresence SpeakerTrack 60 camera is connected to the video conferencing device. Furthermore, Cameras SpeakerTrack ConnectorDetection Mode must be set to Manual.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "5",
          "Min": "1",
          "Step": "5",
          "type": "Integer"
        }
      },
      "id": 30741,
      "normPath": "Cameras SpeakerTrack ConnectorDetection CameraRight",
      "path": "Cameras SpeakerTrack ConnectorDetection CameraRight",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "2",
        "description": "Define the number of the video input that SpeakerTrack 60's right camera is connected to. This setting applies only when a Cisco TelePresence SpeakerTrack 60 camera is connected to the video conferencing device. Furthermore, Cameras SpeakerTrack ConnectorDetection Mode must be set to Manual.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "3",
          "Min": "1",
          "Step": "3",
          "type": "Integer"
        }
      },
      "id": 30993,
      "normPath": "Cameras SpeakerTrack ConnectorDetection CameraRight",
      "path": "Cameras SpeakerTrack ConnectorDetection CameraRight",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        },
        "description": "This setting applies only when a Cisco TelePresence SpeakerTrack 60 camera is connected to the video conferencing device. Define whether to automatically detect or manually configure which video input each individual camera is connected to. You should choose manual configuration in situations where the video conferencing device does not receive EDID information from the cameras. Typically, this will be when you use HDMI repeaters that do not pass on EDID information."
      },
      "id": 29739,
      "normPath": "Cameras SpeakerTrack ConnectorDetection Mode",
      "path": "Cameras SpeakerTrack ConnectorDetection Mode",
      "products": [
        "bandai"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "This setting applies only when a Cisco TelePresence SpeakerTrack 60 camera is connected to the video conferencing device. Define whether to automatically detect or manually configure which video input each individual camera is connected to. You should choose manual configuration in situations where the video conferencing device does not receive EDID information from the cameras. Typically, this will be when you use HDMI repeaters that do not pass on EDID information.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 30742,
      "normPath": "Cameras SpeakerTrack ConnectorDetection Mode",
      "path": "Cameras SpeakerTrack ConnectorDetection Mode",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Speaker tracking uses automatic camera framing to select the best camera view based on where people are in the room. The camera uses an audio tracking technique that finds and captures a close-up of the active speaker.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 28733,
      "normPath": "Cameras SpeakerTrack Mode",
      "path": "Cameras SpeakerTrack Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "hopen",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The video conferencing device supports the Best overview feature. Best overview uses automatic camera framing to select the best camera view based on where people are in the room. Speaker tracking is not supported, but this settings turns on/off the use of the Best overview.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 33766,
      "normPath": "Cameras SpeakerTrack Mode",
      "path": "Cameras SpeakerTrack Mode",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "This setting applies only when using a camera with support for speaker tracking. For video conferencing devices with a Cisco Quad Camera: Speaker tracking uses automatic camera framing to select the best camera view based on where people are in the room. The Quad Camera uses an audio tracking technique that finds and captures a close-up of the active speaker. For video conferencing devices with a Cisco TelePresence SpeakerTrack 60 Camera: The dual camera assembly consists of two cameras and uses an audio tracking technique that finds and captures a close-up of the active speaker. When a change of speaker is detected, the video conferencing device can switch automatically between the two cameras to always show the best camera view. Refer to the Cameras SpeakerTrack TrackingMode setting for different switching modes.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 33948,
      "normPath": "Cameras SpeakerTrack Mode",
      "path": "Cameras SpeakerTrack Mode",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The video conferencing device supports the Best overview feature. Best overview uses automatic camera framing to select the best camera view based on where people are in the room. Speaker tracking is not supported, but this settings turns on/off the use of the Best overview.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 34039,
      "normPath": "Cameras SpeakerTrack Mode",
      "path": "Cameras SpeakerTrack Mode",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "This setting applies only when using a Cisco TelePresence SpeakerTrack 60 camera, and when Cameras SpeakerTrack Mode is set to Auto. The speaker tracking algorithm can react to changes in two modes, one faster than the other. The mode determines when the camera view will change to a new speaker.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Conservative"
          ],
          "type": "Literal"
        }
      },
      "id": 28386,
      "normPath": "Cameras SpeakerTrack TrackingMode",
      "path": "Cameras SpeakerTrack TrackingMode",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Conservative"
          ],
          "type": "Literal"
        },
        "description": "This setting applies only when using a Cisco TelePresence SpeakerTrack 60 camera, and when Cameras SpeakerTrack Mode is set to Auto. The speaker tracking algorithm can react to changes in two modes, one faster than the other. The mode determines when the camera view will change to a new speaker."
      },
      "id": 29740,
      "normPath": "Cameras SpeakerTrack TrackingMode",
      "path": "Cameras SpeakerTrack TrackingMode",
      "products": [
        "bandai"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        },
        "description": "The Snap to Whiteboard feature extends the speaker tracking functionality. When a presenter is standing next to the whiteboard, the camera will capture both the presenter and the whiteboard if the Snap to Whiteboard feature is enabled. If the feature is disabled, only the presenter will be captured. The Snap to Whiteboard feature is set up from the touch controller or web interface."
      },
      "id": 30274,
      "normPath": "Cameras SpeakerTrack Whiteboard Mode",
      "path": "Cameras SpeakerTrack Whiteboard Mode",
      "products": [
        "bandai"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The Snap to Whiteboard feature extends the speaker tracking functionality, thus you need a camera that supports speaker tracking. When a presenter is standing next to the whiteboard, the camera will capture both the presenter and the whiteboard if the Snap to Whiteboard feature is enabled. If the feature is disabled, only the presenter will be captured. The Snap to Whiteboard feature is set up from the touch controller or web interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33949,
      "normPath": "Cameras SpeakerTrack Whiteboard Mode",
      "path": "Cameras SpeakerTrack Whiteboard Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The Snap to Whiteboard feature extends the speaker tracking functionality. When a presenter is standing next to the whiteboard, the camera will capture both the presenter and the whiteboard if the Snap to Whiteboard feature is enabled. If the feature is disabled, only the presenter will be captured. The Snap to Whiteboard feature is set up from the touch controller or web interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 34055,
      "normPath": "Cameras SpeakerTrack Whiteboard Mode",
      "path": "Cameras SpeakerTrack Whiteboard Mode",
      "products": [
        "hopen",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Define how long (in seconds) an incoming call has to wait before it is answered automatically by the device. Requires that AutoAnswer Mode is switched on.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "50",
          "Min": "0",
          "Step": "50",
          "type": "Integer"
        }
      },
      "id": 30744,
      "normPath": "Conference AutoAnswer Delay",
      "path": "Conference AutoAnswer Delay",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define the auto answer mode. Use the Conference AutoAnswer Delay setting if you want the device to wait a number of seconds before answering the call, and use the Conference AutoAnswer Mute setting if you want your microphone to be muted when the call is answered.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30745,
      "normPath": "Conference AutoAnswer Mode",
      "path": "Conference AutoAnswer Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define if the microphone shall be muted when an incoming call is automatically answered. Requires that AutoAnswer Mode is switched on.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 28390,
      "normPath": "Conference AutoAnswer Mute",
      "path": "Conference AutoAnswer Mute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the Default Call Protocol to be used when placing calls from the device.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "H320",
            "H323",
            "Sip",
            "Spark"
          ],
          "type": "Literal"
        }
      },
      "id": 30746,
      "normPath": "Conference DefaultCall Protocol",
      "path": "Conference DefaultCall Protocol",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "6000",
        "description": "Define the Default Call Rate to be used when placing calls from the device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "6000",
          "Min": "64",
          "Step": "6000",
          "type": "Integer"
        }
      },
      "id": 30747,
      "normPath": "Conference DefaultCall Rate",
      "path": "Conference DefaultCall Rate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70s",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "16000",
        "description": "Define the Default Call Rate to be used when placing calls from the device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "20000",
          "Min": "64",
          "Step": "20000",
          "type": "Integer"
        }
      },
      "id": 30860,
      "normPath": "Conference DefaultCall Rate",
      "path": "Conference DefaultCall Rate",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "10000",
        "description": "Define the Default Call Rate to be used when placing calls from the device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "10000",
          "Min": "64",
          "Step": "10000",
          "type": "Integer"
        }
      },
      "id": 30881,
      "normPath": "Conference DefaultCall Rate",
      "path": "Conference DefaultCall Rate",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "60",
        "description": "This setting determines the default duration of a Do Not Disturb session, i.e. the period when incoming calls are rejected and registered as missed calls. The session can be terminated earlier by using the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "1440",
          "Min": "1",
          "Step": "1440",
          "type": "Integer"
        }
      },
      "id": 28394,
      "normPath": "Conference DoNotDisturb DefaultTimeout",
      "path": "Conference DoNotDisturb DefaultTimeout",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "BestEffort",
        "description": "Define the conference encryption mode. A padlock with the text \"Encryption On\" or \"Encryption Off\" displays on screen for a few seconds when the conference starts. NOTE: If the Encryption Option Key is not installed on the device, the encryption mode is always Off.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "BestEffort",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30748,
      "normPath": "Conference Encryption Mode",
      "path": "Conference Encryption Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 34361,
      "normPath": "Conference EndToEndEncryption Identity PreferredDomain",
      "path": "Conference EndToEndEncryption Identity PreferredDomain",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Lets you decide if the remote side (far end) should be allowed to select your video sources and control your local camera (pan, tilt, zoom).",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 29651,
      "normPath": "Conference FarEndControl Mode",
      "path": "Conference FarEndControl Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "On",
        "description": "Define the far end control (H.224) signal capability mode.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 28398,
      "normPath": "Conference FarEndControl SignalCapability",
      "path": "Conference FarEndControl SignalCapability",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Off",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 28399,
      "normPath": "Conference FarendMessage Mode",
      "path": "Conference FarendMessage Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "Auto",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 34553,
      "normPath": "Conference JoinLeaveNotifications",
      "path": "Conference JoinLeaveNotifications",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "6000",
        "description": "Define the maximum receive bit rate to be used when placing or receiving calls. Note that this is the maximum bit rate for each individual call; use the Conference MaxTotalReceiveCallRate setting to set the aggregated maximum for all simultaneous active calls.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "6000",
          "Min": "64",
          "Step": "6000",
          "type": "Integer"
        }
      },
      "id": 28401,
      "normPath": "Conference MaxReceiveCallRate",
      "path": "Conference MaxReceiveCallRate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70s",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "10000",
        "description": "Define the maximum receive bit rate to be used when placing or receiving calls. Note that this is the maximum bit rate for each individual call; use the Conference MaxTotalReceiveCallRate setting to set the aggregated maximum for all simultaneous active calls.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "10000",
          "Min": "64",
          "Step": "10000",
          "type": "Integer"
        }
      },
      "id": 28792,
      "normPath": "Conference MaxReceiveCallRate",
      "path": "Conference MaxReceiveCallRate",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20000",
        "description": "Define the maximum receive bit rate to be used when placing or receiving calls. Note that this is the maximum bit rate for each individual call; use the Conference MaxTotalReceiveCallRate setting to set the aggregated maximum for all simultaneous active calls.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "20000",
          "Min": "64",
          "Step": "20000",
          "type": "Integer"
        }
      },
      "id": 29867,
      "normPath": "Conference MaxReceiveCallRate",
      "path": "Conference MaxReceiveCallRate",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "15000",
        "description": "This configuration applies when using a device's built-in MultiSite feature (optional) to host a multipoint video conference. Define the maximum overall receive bit rate allowed. The bit rate will be divided fairly among all active calls at any time. This means that the individual calls will be up-speeded or down-speeded as appropriate when someone leaves or enters a multipoint conference, or when a call is put on hold (suspended) or resumed. The maximum receive bit rate for each individual call is defined in the Conference MaxReceiveCallRate setting.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "15000",
          "Min": "64",
          "Step": "15000",
          "type": "Integer"
        }
      },
      "id": 30749,
      "normPath": "Conference MaxTotalReceiveCallRate",
      "path": "Conference MaxTotalReceiveCallRate",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20000",
        "description": "This configuration applies when using a device's built-in MultiSite feature (optional) to host a multipoint video conference. Define the maximum overall receive bit rate allowed. The bit rate will be divided fairly among all active calls at any time. This means that the individual calls will be up-speeded or down-speeded as appropriate when someone leaves or enters a multipoint conference, or when a call is put on hold (suspended) or resumed. The maximum receive bit rate for each individual call is defined in the Conference MaxReceiveCallRate setting.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "20000",
          "Min": "64",
          "Step": "20000",
          "type": "Integer"
        }
      },
      "id": 30861,
      "normPath": "Conference MaxTotalReceiveCallRate",
      "path": "Conference MaxTotalReceiveCallRate",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "6000",
        "description": "This configuration applies when using a device's built-in MultiSite feature (optional) to host a multipoint video conference. Define the maximum overall receive bit rate allowed. The bit rate will be divided fairly among all active calls at any time. This means that the individual calls will be up-speeded or down-speeded as appropriate when someone leaves or enters a multipoint conference, or when a call is put on hold (suspended) or resumed. The maximum receive bit rate for each individual call is defined in the Conference MaxReceiveCallRate setting.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "6000",
          "Min": "64",
          "Step": "6000",
          "type": "Integer"
        }
      },
      "id": 30936,
      "normPath": "Conference MaxTotalReceiveCallRate",
      "path": "Conference MaxTotalReceiveCallRate",
      "products": [
        "bandai",
        "havella",
        "hopen",
        "octavio",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "10000",
        "description": "This configuration applies when using a device's built-in MultiSite feature (optional) to host a multipoint video conference. Define the maximum overall receive bit rate allowed. The bit rate will be divided fairly among all active calls at any time. This means that the individual calls will be up-speeded or down-speeded as appropriate when someone leaves or enters a multipoint conference, or when a call is put on hold (suspended) or resumed. The maximum receive bit rate for each individual call is defined in the Conference MaxReceiveCallRate setting.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "10000",
          "Min": "64",
          "Step": "10000",
          "type": "Integer"
        }
      },
      "id": 34018,
      "normPath": "Conference MaxTotalReceiveCallRate",
      "path": "Conference MaxTotalReceiveCallRate",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "15000",
        "description": "This configuration applies when using a device's built-in MultiSite feature (optional) to host a multipoint video conference. Define the maximum overall transmit bit rate allowed. The bit rate will be divided fairly among all active calls at any time. This means that the individual calls will be up-speeded or down-speeded as appropriate when someone leaves or enters a multipoint conference, or when a call is put on hold (suspended) or resumed. The maximum transmit bit rate for each individual call is defined in the Conference MaxTransmitCallRate setting.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "15000",
          "Min": "64",
          "Step": "15000",
          "type": "Integer"
        }
      },
      "id": 30750,
      "normPath": "Conference MaxTotalTransmitCallRate",
      "path": "Conference MaxTotalTransmitCallRate",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20000",
        "description": "This configuration applies when using a device's built-in MultiSite feature (optional) to host a multipoint video conference. Define the maximum overall transmit bit rate allowed. The bit rate will be divided fairly among all active calls at any time. This means that the individual calls will be up-speeded or down-speeded as appropriate when someone leaves or enters a multipoint conference, or when a call is put on hold (suspended) or resumed. The maximum transmit bit rate for each individual call is defined in the Conference MaxTransmitCallRate setting.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "20000",
          "Min": "64",
          "Step": "20000",
          "type": "Integer"
        }
      },
      "id": 30862,
      "normPath": "Conference MaxTotalTransmitCallRate",
      "path": "Conference MaxTotalTransmitCallRate",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "6000",
        "description": "This configuration applies when using a device's built-in MultiSite feature (optional) to host a multipoint video conference. Define the maximum overall transmit bit rate allowed. The bit rate will be divided fairly among all active calls at any time. This means that the individual calls will be up-speeded or down-speeded as appropriate when someone leaves or enters a multipoint conference, or when a call is put on hold (suspended) or resumed. The maximum transmit bit rate for each individual call is defined in the Conference MaxTransmitCallRate setting.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "6000",
          "Min": "64",
          "Step": "6000",
          "type": "Integer"
        }
      },
      "id": 30937,
      "normPath": "Conference MaxTotalTransmitCallRate",
      "path": "Conference MaxTotalTransmitCallRate",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "6000",
        "description": "Define the maximum transmit bit rate to be used when placing or receiving calls. Note that this is the maximum bit rate for each individual call; use the Conference MaxTotalTransmitCallRate setting to set the aggregated maximum for all simultaneous active calls.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "6000",
          "Min": "64",
          "Step": "6000",
          "type": "Integer"
        }
      },
      "id": 28404,
      "normPath": "Conference MaxTransmitCallRate",
      "path": "Conference MaxTransmitCallRate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70s",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20000",
        "description": "Define the maximum transmit bit rate to be used when placing or receiving calls. Note that this is the maximum bit rate for each individual call; use the Conference MaxTotalTransmitCallRate setting to set the aggregated maximum for all simultaneous active calls.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "20000",
          "Min": "64",
          "Step": "20000",
          "type": "Integer"
        }
      },
      "id": 29870,
      "normPath": "Conference MaxTransmitCallRate",
      "path": "Conference MaxTransmitCallRate",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define if the microphones shall be unmuted automatically when all calls are disconnected. In a meeting room or other shared resources this may be done to prepare the device for the next user.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30751,
      "normPath": "Conference MicUnmuteOnDisconnect Mode",
      "path": "Conference MicUnmuteOnDisconnect Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Auto",
        "description": "Define how to expand a point-to-point video call (a call involving only two parties) into a multipoint conference with more participants (ad hoc conferences). Both the built-in MultiSite feature, which relies only on local resources, and different solutions based on centralized infrastructure (multipoint control units – MCUs) are available. The MultiSite feature is an upgrade option and may not be available on all devices. The MultiSite option key must be installed on the device. If registered to a Cisco TelePresence Video Communication Server (VCS), the device can use MultiSite when calling other video devices. If registered to a Cisco Unified Communications Manager (CUCM) version 8.6.2 or newer, the device can use either a CUCM conference bridge, or the device's own built-in MultiSite feature. Which option to use, is set-up by CUCM. In either case, multiparty conferences may be set up via an MCU if you call an MCU that allows devices to add participants to a conference (Direct Remote Add).",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "CUCMMediaResourceGroupList",
            "MultiSite",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 30753,
      "normPath": "Conference Multipoint Mode",
      "path": "Conference Multipoint Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The device supports multistream video for conferences.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 30752,
      "normPath": "Conference MultiStream Mode",
      "path": "Conference MultiStream Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Video",
        "description": "Define the call type for each facility service. Up to five different facility services are supported. A facility service is not available unless both the FacilityService Service [n] Name and the FacilityService Service [n] Number settings are properly set. Facility services are available from the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Audio",
            "Video"
          ],
          "type": "Literal"
        }
      },
      "id": 32136,
      "normPath": "FacilityService Service CallType",
      "path": "FacilityService Service[1..5] CallType",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Live Support",
        "description": "Define the name of the facility service. Up to five different facility services are supported. A facility service is not available unless both the FacilityService Service [n] Name and the FacilityService Service [n] Number settings are properly set. The name will show on the facility service call button, which appears when you tap the question mark icon in the top bar. Facility services are available from the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "1024",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32137,
      "normPath": "FacilityService Service Name",
      "path": "FacilityService Service[1..5] Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the number (URI or phone number) of the facility service. Up to five different facility services are supported. A facility service is not available unless both the FacilityService Service [n] Name and the FacilityService Service [n] Number settings are properly set. Facility services are available from the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "1024",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32138,
      "normPath": "FacilityService Service Number",
      "path": "FacilityService Service[1..5] Number",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Helpdesk",
        "description": "Up to five different facility services can be supported simultaneously. With this setting you can select what kind of services they are. A facility service is not available unless both the FacilityService Service [n] Name and the FacilityService Service [n] Number settings are properly set. Facility services are available from the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Catering",
            "Concierge",
            "Emergency",
            "Helpdesk",
            "Other",
            "Security",
            "Transportation"
          ],
          "type": "Literal"
        }
      },
      "id": 32139,
      "normPath": "FacilityService Service Type",
      "path": "FacilityService Service[1..5] Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "InputNoAction",
        "description": "The four GPIO pins are configured individually. The actual measured pin state (Low/High) can be retrieved by the GPIO Pin [1..4] State status. The default state for a pin in output mode is High (+12 V). NOTE: A pin defined to output mode can be set to force line Low actively. If set to High, the line will be high only when it is not connected to an external device that pulls the line low.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "InputAcceptAllCalls",
            "InputDisconnectAllCalls",
            "InputMuteMicrophones",
            "InputNoAction",
            "OutputAllCallsEncrypted",
            "OutputInCall",
            "OutputManualState",
            "OutputMicrophonesMuted",
            "OutputPresentationOn",
            "OutputStandbyActive"
          ],
          "type": "Literal"
        }
      },
      "id": 33950,
      "normPath": "GPIO Pin Mode",
      "path": "GPIO Pin[1..4] Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "The device sends the H323 Authentication Login Name and the H323 Authentication Password to an H.323 Gatekeeper for authentication. The authentication is a one way authentication from the device to the H.323 Gatekeeper, i.e. the device is authenticated to the gatekeeper. If the H.323 Gatekeeper indicates that no authentication is required, the device will still try to register. Requires the H.323 Authentication Mode to be enabled.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30755,
      "normPath": "H323 Authentication LoginName",
      "path": "H323 Authentication LoginName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Off",
        "description": "Define the authenticatin mode for the H.323 profile.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 28423,
      "normPath": "H323 Authentication Mode",
      "path": "H323 Authentication Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "The device sends the H323 Authentication Login Name and the H323 Authentication Password to an H.323 Gatekeeper for authentication. The authentication is a one way authentication from the device to the H.323 Gatekeeper, i.e. the device is authenticated to the gatekeeper. If the H.323 Gatekeeper indicates that no authentication is required, the device will still try to register. Requires the H.323 Authentication Mode to be enabled.",
        "hide_value": "True",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30756,
      "normPath": "H323 Authentication Password",
      "path": "H323 Authentication Password",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Gatekeeper",
        "description": "Defines whether to use a Gatekeeper or Direct calling when establishing H.323 calls. Direct H.323 calls can be made also when H323 CallSetup Mode is set to Gatekeeper.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Direct",
            "Gatekeeper"
          ],
          "type": "Literal"
        }
      },
      "id": 28425,
      "normPath": "H323 CallSetup Mode",
      "path": "H323 CallSetup Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Off",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 34240,
      "normPath": "H323 Encryption AES256Support",
      "path": "H323 Encryption AES256Support",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Min1024bit",
        "description": "Define the minimum or maximum key size for the Diffie-Hellman key exchange method, which is used when establishing the Advanced Encryption Standard (AES) encryption key.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Max1024bit",
            "Min1024bit",
            "Min2048bit"
          ],
          "type": "Literal"
        }
      },
      "id": 28426,
      "normPath": "H323 Encryption KeySize",
      "path": "H323 Encryption KeySize",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Define the IP address of the Gatekeeper. Requires H323 CallSetup Mode to be set to Gatekeeper.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 28427,
      "normPath": "H323 Gatekeeper Address",
      "path": "H323 Gatekeeper Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "The H.323 Alias E.164 defines the address of the device, according to the numbering plan implemented in the H.323 Gatekeeper. The E.164 alias is equivalent to a telephone number, sometimes combined with access codes.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "30",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30757,
      "normPath": "H323 H323Alias E164",
      "path": "H323 H323Alias E164",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Define the H.323 Alias ID, which is used to address the device on a H.323 Gatekeeper and will be displayed in the call lists.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "49",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30758,
      "normPath": "H323 H323Alias ID",
      "path": "H323 H323Alias ID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Define the external/global IP address of the router with NAT support. This address will be exposed when setting up a call to devices outside your private network. Refer to the H323 NAT Mode setting for details when the NAT Address is used. In the router, the following ports must be routed to the video conferencing device's IP address: * Port 1720 * Port 5555-6555 * Port 2326-2487",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 33891,
      "normPath": "H323 NAT Address",
      "path": "H323 NAT Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Off",
        "description": "The H323 NAT Mode is intended to be used if your device is on a private network and is not registered to a gatekeeper. H323 NAT Mode can then be used to reach devices on a public network. NAT is not supported for IPv6. NOTE: The H323 NAT Mode and H323 NAT Address settings will be ignored if the video conferencing devices is registered to a gatekeeper. We recommend the use of a gatekeeper with firewall traversal capabilities, rather than using the H323 NAT Mode.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33892,
      "normPath": "H323 NAT Mode",
      "path": "H323 NAT Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "True",
        "description": "The HttpClient Mode setting is used to allow or prohibit communication with an external HTTP(S) server. The Mode setting does not distinguish between HTTP and HTTPS. You must use the HttpClient AllowHTTP setting to further allow or prohibit the use of HTTP.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 28433,
      "normPath": "HttpClient AllowHTTP",
      "path": "HttpClient AllowHTTP",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "False",
        "description": "You can choose whether or not to allow the video conferencing device to communicate with a server over HTTPS without checking the server's certificate first. Even if the device is allowed to skip the certificate validation process, it doesn't automatically do it. You must specifically set the AllowInsecureHTTPS parameter in each xCommand HttpClient command for data to be exchanged with the server without certificate validation.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 30761,
      "normPath": "HttpClient AllowInsecureHTTPS",
      "path": "HttpClient AllowInsecureHTTPS",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Allow or prohibit communication with an external HTTP(S) server using HTTP(S) requests and responses.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 28435,
      "normPath": "HttpClient Mode",
      "path": "HttpClient Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "There are several UseHttpProxy settings that specify if a service shall communicate via an HTTP proxy or not. The HttpClient UseHttpProxy setting applies to macros and arbitrary HTTP(S) requests using the HttpClient commands. For this setting to have any effect, a proxy server for HTTP, HTTPS, and WebSocket traffic must be set up using the NetworkServices HTTP Proxy settings.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30762,
      "normPath": "HttpClient UseHttpProxy",
      "path": "HttpClient UseHttpProxy",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "This setting applies when a video conferencing device connects to an HTTPS server for arbitrary HTTPS communication (refer to the HttpClient Post/Put/Patch/Get/Delete commands). For phone book, provisioning, and external logging servers, see the Phonebook Server 1 TlsVerify, Provisioning TlsVerify, and Logging External TlsVerify settings. Before establishing a connection between the device and the HTTPS server, the device checks if the certificate of the server is signed by a trusted Certificate Authority (CA). The CA certificate must be included in the CA list on the device, either pre-installed or manually uploaded using the web interface or API. In general, the minimum TLS (Transport Layer Security) version for the HTTPS connection is 1.1. There are two exceptions to this rule: 1) For compatibility reasons, the minimum TLS version is 1.0 for devices that are registered to CUCM. 2) Devices registered to the Webex cloud service always use version 1.2. Note: The value is set to Off for a device that has been upgraded to CE9.9 (or later) from CE9.8 or earlier software versions, provided that the device has not been factory reset after the upgrade, and that the old NetworkServices HTTPS VerifyServerCertificate setting was not explicitly set to On.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30561,
      "normPath": "HttpFeedback TlsVerify",
      "path": "HttpFeedback TlsVerify",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "There are several UseHttpProxy settings that specify if a service shall communicate via an HTTP proxy or not. The HttpFeedback UseHttpProxy setting applies to feedback sent from the video device. For this setting to have any effect, a proxy server for HTTP, HTTPS, and WebSocket traffic must be set up using the NetworkServices HTTP Proxy settings.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30562,
      "normPath": "HttpFeedback UseHttpProxy",
      "path": "HttpFeedback UseHttpProxy",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Off",
        "description": "Specify whether or not logs from the device can be uploaded to the Webex cloud service. The device logs will be filtered for personally-identifiable information before they are sent to the cloud. When enabled, the log upload can be initiated from the device itself or from Control Hub. The device will display a \"Send logs\" button on the user interface, and there will be a \"Manage Logs\" section on the Devices page in Control Hub. The device must either be registered to the Webex cloud service or registered to an on-premises service and linked to Webex Edge for Devices.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33767,
      "normPath": "Logging CloudUpload Mode",
      "path": "Logging CloudUpload Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Specify whether or not to store the device logs on a remote syslog server. This setting has no effect if the Logging Mode setting is set to Off. You must enter the address of the remote server in the Logging External Server Address setting. Unless otherwise specified in the Logging External Server Port setting, the standard syslog port is used.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30564,
      "normPath": "Logging External Mode",
      "path": "Logging External Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "SyslogTLS",
        "description": "Specify which protocol to use toward the remote logging server. You can use either the syslog protocol over TLS (Transport Layer Security), or the syslog protocol in plaintext. For details about the syslog protocol, see RFC 5424.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Syslog",
            "SyslogTLS"
          ],
          "type": "Literal"
        }
      },
      "id": 30565,
      "normPath": "Logging External Protocol",
      "path": "Logging External Protocol",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Specify the address of the remote syslog server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30566,
      "normPath": "Logging External Server Address",
      "path": "Logging External Server Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "514",
        "description": "The port that the remote syslog server listens for messages on. If set to 0, the device will use the standard syslog port. The standard syslog port is 514 for syslog, and 6514 for syslog over TLS.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "0",
          "Step": "65535",
          "type": "Integer"
        }
      },
      "id": 30567,
      "normPath": "Logging External Server Port",
      "path": "Logging External Server Port",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "This setting applies when a video conferencing device connects to a remote syslog server. It applies to both regular logging (refer to the Logging External Mode setting) and audit logging (refer to the Security Audit Logging Mode setting). Before establishing a connection between the device and the syslog server, the device checks if the certificate of the server is signed by a trusted Certificate Authority (CA). The CA certificate must be included in the CA list on the device, either pre-installed or manually uploaded using the web interface or API. The minimum TLS (Transport Layer Security) version for the syslog connection is 1.1.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30568,
      "normPath": "Logging External TlsVerify",
      "path": "Logging External TlsVerify",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Specify whether or not to store the system logs on the device (local files). These are the files that you get when you download the log bundles from the device. This setting has no effect if the Logging Mode setting is set to Off.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30569,
      "normPath": "Logging Internal Mode",
      "path": "Logging Internal Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "All the macros run in a single process on the video conferencing device, called the macro runtime. It should be running by default, but you can choose to stop and start it manually. If you restart the device, the runtime will automatically start again if auto start is enabled.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30764,
      "normPath": "Macros AutoStart",
      "path": "Macros AutoStart",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Macros allow you to write snippets of JavaScript code that can automate parts of your video conferencing device, thus creating custom behavior. Use of macros is disabled by default, but the first time you open the Macro Editor you will be asked whether to enable use of macros on the device. Use this setting when you want to manually enable, or to permanently disable the use of macros on the device. You can disable the use of macros within the Macro Editor. But this will not permanently disable macros from running, because every time the device is reset the macros will be re-enabled automatically.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30765,
      "normPath": "Macros Mode",
      "path": "Macros Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "5",
        "description": "Macros are continuously monitored to detect unresponsive code. Unresponsive macros are typically a sign of a programming error, but occasionally it might be due to limited system resources. Increasing the value allows macros to run for longer without being terminated, while decreasing the value ensures that faulty macros do not consume system resources.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "0",
          "Step": "65535",
          "type": "Integer"
        }
      },
      "id": 30766,
      "normPath": "Macros UnresponsiveTimeout",
      "path": "Macros UnresponsiveTimeout",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Domain Name System Security extensions (DNSSEC) is a set of extensions to DNS. It is used to authenticate DNS replies for zones that are signed. It will still allow unsigned zones.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 31843,
      "normPath": "Network DNS DNSSEC Mode",
      "path": "Network[1] DNS DNSSEC Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "The DNS Domain Name is the default domain name suffix which is added to unqualified names. Example: If the DNS Domain Name is \"company.com\" and the name to lookup is \"MyVideoSystem\", this will result in the DNS lookup \"MyVideoSystem.company.com\".",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35235,
      "normPath": "Network DNS Domain Name",
      "path": "Network[1] DNS Domain Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35236,
      "normPath": "Network Address",
      "path": "Network[1] DNS Server[1..3] Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "The 802.1X Anonymous ID string is to be used as unencrypted identity with EAP (Extensible Authentication Protocol) types that support different tunneled identity, like EAP-PEAP and EAP-TTLS. If set, the anonymous ID will be used for the initial (unencrypted) EAP Identity Request.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35237,
      "normPath": "Network IEEE8021X AnonymousIdentity",
      "path": "Network[1] IEEE8021X AnonymousIdentity",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define the Md5 (Message-Digest Algorithm 5) mode. This is a Challenge Handshake Authentication Protocol that relies on a shared secret. Md5 is a Weak security.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35238,
      "normPath": "Network IEEE8021X Eap Md5",
      "path": "Network[1] IEEE8021X Eap Md5",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define the Peap (Protected Extensible Authentication Protocol) mode. Authenticates LAN clients without the need for client certificates. Developed by Microsoft, Cisco and RSA Security.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35239,
      "normPath": "Network IEEE8021X Eap Peap",
      "path": "Network[1] IEEE8021X Eap Peap",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Enable or disable the use of EAP-TLS (Transport Layer Security) for IEEE802.1x connections. The EAP-TLS protocol, defined in RFC 5216, is considered one of the most secure EAP standards. LAN clients are authenticated using client certificates.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35240,
      "normPath": "Network IEEE8021X Eap Tls",
      "path": "Network[1] IEEE8021X Eap Tls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define the TTLS (Tunneled Transport Layer Security) mode. Authenticates LAN clients without the need for client certificates. Developed by Funk Software and Certicom. Usually supported by Agere Systems, Proxim and Avaya.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35241,
      "normPath": "Network IEEE8021X Eap Ttls",
      "path": "Network[1] IEEE8021X Eap Ttls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the username for 802.1X authentication.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35242,
      "normPath": "Network IEEE8021X Identity",
      "path": "Network[1] IEEE8021X Identity",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The device can be connected to an IEEE 802.1X LAN network, with a port-based network access control that is used to provide authenticated network access for Ethernet networks.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35243,
      "normPath": "Network IEEE8021X Mode",
      "path": "Network[1] IEEE8021X Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the password for 802.1X authentication.",
        "hide_value": "True",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35244,
      "normPath": "Network IEEE8021X Password",
      "path": "Network[1] IEEE8021X Password",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Verification of the server-side certificate of an IEEE802.1x connection against the certificates in the local CA-list when TLS is used. The CA-list must be uploaded to the video conferencing device. This can be done from the web interface. This setting takes effect only when Network [1] IEEE8021X Eap Tls is enabled (On).",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35245,
      "normPath": "Network IEEE8021X TlsVerify",
      "path": "Network[1] IEEE8021X TlsVerify",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Authentication using a private key/certificate pair during an IEEE802.1x connection. The authentication X.509 certificate must be uploaded to the video conferencing device. This can be done from the web interface.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35246,
      "normPath": "Network IEEE8021X UseClientCertificate",
      "path": "Network[1] IEEE8021X UseClientCertificate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Dual",
        "description": "Select if the device should use IPv4, IPv6, or dual IP stack, on the network interface. NOTE: After changing this setting you may have to wait up to 30 seconds before it takes effect.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Dual",
            "IPv4",
            "IPv6"
          ],
          "type": "Literal"
        }
      },
      "id": 35247,
      "normPath": "Network IPStack",
      "path": "Network[1] IPStack",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the static IPv4 network address for the device. Applicable only when Network IPv4 Assignment is set to Static.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35248,
      "normPath": "Network IPv4 Address",
      "path": "Network[1] IPv4 Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "DHCP",
        "description": "Define how the device will obtain its IPv4 address, subnet mask, and gateway address. The client identifier, which is used in the DHCP requests, is the DHCP Unique Identifier (DUID) as specified in RFC 4361.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "DHCP",
            "Static"
          ],
          "type": "Literal"
        }
      },
      "id": 35249,
      "normPath": "Network IPv4 Assignment",
      "path": "Network[1] IPv4 Assignment",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "DHCP",
        "description": "Define how the device will obtain its IPv4 address, subnet mask, and gateway address. The device's client identifier, which is used in the DHCP requests, is \"01\" followed by the MAC address. For Touch 10 the client identifier is the MAC address, and Room Navigator is using the DHCP Unique Identifier (DUID) as specified in RFC 4361.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "DHCP",
            "Static"
          ],
          "type": "Literal"
        }
      },
      "id": 35276,
      "normPath": "Network IPv4 Assignment",
      "path": "Network[1] IPv4 Assignment",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the IPv4 network gateway address. Applicable only when the Network IPv4 Assignment is set to Static.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35250,
      "normPath": "Network IPv4 Gateway",
      "path": "Network[1] IPv4 Gateway",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "MAC",
            "Opaque"
          ],
          "type": "Literal"
        }
      },
      "id": 35251,
      "normPath": "Network IPv4 InterfaceIdentifier",
      "path": "Network[1] IPv4 InterfaceIdentifier",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the IPv4 network subnet mask. Applicable only when the Network IPv4 Assignment is set to Static.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35252,
      "normPath": "Network IPv4 SubnetMask",
      "path": "Network[1] IPv4 SubnetMask",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the static IPv6 network address for the device. Applicable only when the Network IPv6 Assignment is set to Static.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35253,
      "normPath": "Network IPv6 Address",
      "path": "Network[1] IPv6 Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Autoconf",
        "description": "Define how the device will obtain its IPv6 address, subnet mask, and gateway address. The client identifier, which is used in the DHCP requests, is the DHCP Unique Identifier (DUID) as specified in RFC 4361.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Autoconf",
            "DHCPv6",
            "Static"
          ],
          "type": "Literal"
        }
      },
      "id": 35254,
      "normPath": "Network IPv6 Assignment",
      "path": "Network[1] IPv6 Assignment",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Autoconf",
        "description": "Define how the device will obtain its IPv6 address, subnet mask, and gateway address. The device's client identifier, which is used in the DHCP requests, is \"01\" followed by the MAC address. For Touch 10 the client identifier is the MAC address, and Room Navigator is using the DHCP Unique Identifier (DUID) as specified in RFC 4361.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Autoconf",
            "DHCPv6",
            "Static"
          ],
          "type": "Literal"
        }
      },
      "id": 35277,
      "normPath": "Network IPv6 Assignment",
      "path": "Network[1] IPv6 Assignment",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Retrieve a set of DHCP options, for example NTP and DNS server addresses, from a DHCPv6 server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35255,
      "normPath": "Network IPv6 DHCPOptions",
      "path": "Network[1] IPv6 DHCPOptions",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the IPv6 network gateway address. This setting is only applicable when the Network IPv6 Assignment is set to Static.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35256,
      "normPath": "Network IPv6 Gateway",
      "path": "Network[1] IPv6 Gateway",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "MAC",
        "description": "Define the IPv6 interface identifier for the device. The interface identifier you choose, either MAC or Opaque, will determine the method that is used for generating part of the the IPv6 address. This is applicable to both link-local IPv6 addresses and Stateless Address Autoconfiguration (SLAAC) addresses. The address contains a 64-bit prefix and a 64-bit interface itentifier generated by the device. With MAC, an EUI-64 based interface identifier is generated, as described in RFC-2373. With Opaque, a random 64-bit interface identifier is generated as described in RFC-7217 on the first boot of the device, and this is used forever, or until factory reset. ",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "MAC",
            "Opaque"
          ],
          "type": "Literal"
        }
      },
      "id": 35257,
      "normPath": "Network IPv6 InterfaceIdentifier",
      "path": "Network[1] IPv6 InterfaceIdentifier",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1500",
        "description": "Define the Ethernet MTU (Maximum Transmission Unit) size. The MTU size must be supported by your network infrastructure. The minimum size is 576 for IPv4 and 1280 for IPv6.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "1500",
          "Min": "576",
          "Step": "1500",
          "type": "Integer"
        }
      },
      "id": 35258,
      "normPath": "Network MTU",
      "path": "Network[1] MTU",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "46",
        "description": "This setting takes effect only if Network QoS Mode is set to Diffserv. Define which priority Audio packets should have in the IP network. The traffic classes recommended in the DiffServ RFCs map to a decimal value between 0 and 63. We recommend you use EF for Audio. EF equals the decimal value 46. The priority set here might be overridden when packets are leaving the network controlled by the local network administrator.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "63",
          "Min": "0",
          "Step": "63",
          "type": "Integer"
        }
      },
      "id": 35259,
      "normPath": "Network QoS Diffserv Audio",
      "path": "Network[1] QoS Diffserv Audio",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "34",
        "description": "This setting takes effect only if Network QoS Mode is set to Diffserv. Define which priority Data packets should have in the IP network. The traffic classes recommended in the DiffServ RFCs map to a decimal value between 0 and 63. We recommend you use AF41 for Data. AF41 equals the decimal value 34. The priority set here might be overridden when packets are leaving the network controlled by the local network administrator.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "63",
          "Min": "0",
          "Step": "63",
          "type": "Integer"
        }
      },
      "id": 35260,
      "normPath": "Network QoS Diffserv Data",
      "path": "Network[1] QoS Diffserv Data",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "This setting takes effect only if Network QoS Mode is set to Diffserv. Define which priority ICMPv6 packets should have in the IP network. The traffic classes recommended in the DiffServ RFCs map to a decimal value between 0 and 63. We recommend you use 0 for ICMPv6. The priority set here might be overridden when packets are leaving the network controlled by the local network administrator.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "63",
          "Min": "0",
          "Step": "63",
          "type": "Integer"
        }
      },
      "id": 35261,
      "normPath": "Network QoS Diffserv ICMPv6",
      "path": "Network[1] QoS Diffserv ICMPv6",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "This setting takes effect only if Network QoS Mode is set to Diffserv. Define which priority NTP packets should have in the IP network. The traffic classes recommended in the DiffServ RFCs map to a decimal value between 0 and 63. We recommend you use 0 for NTP. The priority set here might be overridden when packets are leaving the network controlled by the local network administrator.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "63",
          "Min": "0",
          "Step": "63",
          "type": "Integer"
        }
      },
      "id": 35262,
      "normPath": "Network QoS Diffserv NTP",
      "path": "Network[1] QoS Diffserv NTP",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "24",
        "description": "This setting takes effect only if Network QoS Mode is set to Diffserv. Define which priority Signalling packets that are deemed critical (time-sensitive) for the real-time operation should have in the IP network. The traffic classes recommended in the DiffServ RFCs map to a decimal value between 0 and 63. We recommend you use CS3 for Signalling. CS3 equals the decimal value 24. The priority set here might be overridden when packets are leaving the network controlled by the local network administrator.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "63",
          "Min": "0",
          "Step": "63",
          "type": "Integer"
        }
      },
      "id": 35263,
      "normPath": "Network QoS Diffserv Signalling",
      "path": "Network[1] QoS Diffserv Signalling",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "34",
        "description": "This setting takes effect only if Network QoS Mode is set to Diffserv. Define which priority Video packets should have in the IP network. The packets of the presentation channel (shared content) are also in the Video packet category. The traffic classes recommended in the DiffServ RFCs map to a decimal value between 0 and 63. We recommend you use AF41 for Video. AF41 equals the decimal value 34. The priority set here might be overridden when packets are leaving the network controlled by the local network administrator.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "63",
          "Min": "0",
          "Step": "63",
          "type": "Integer"
        }
      },
      "id": 35264,
      "normPath": "Network QoS Diffserv Video",
      "path": "Network[1] QoS Diffserv Video",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Diffserv",
        "description": "The QoS (Quality of Service) is a method which handles the priority of audio, video and other data in the network. The QoS settings must be supported by the infrastructure. Diffserv (Differentiated Services) is a networking architecture that specifies a simple, scalable and coarse-grained mechanism for classifying and managing network traffic. It provides QoS priorities on IP networks.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Diffserv",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 35265,
      "normPath": "Network QoS Mode",
      "path": "Network[1] QoS Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define which IP addresses (IPv4/IPv6) are allowed for remote access to the device from SSH/HTTP/HTTPS. Multiple IP addresses are separated by a white space. A network mask (IP range) is specified by <ip address>/N, where N is 1-32 for IPv4, and N is 1-128 for IPv6. The /N is a common indication of a network mask where the first N bits are set. Thus 192.168.0.0/24 would match any address starting with 192.168.0, since these are the first 24 bits in the address.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35266,
      "normPath": "Network RemoteAccess Allow",
      "path": "Network[1] RemoteAccess Allow",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the Ethernet link speed. We recommend not to change from the default value, which negotiates with the network to set the speed automatically. If you do not use auto-negotiation, make sure that the speed you choose is supported by the closest switch in your network infrastructure.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "10full",
            "10half",
            "100full",
            "100half",
            "1000full",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 31873,
      "normPath": "Network Speed",
      "path": "Network[1] Speed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the VLAN voice mode. The VLAN Voice Mode will be set to Auto automatically if you have Cisco UCM (Cisco Unified Communications Manager) as provisioning infrastructure. Note that Auto mode will NOT work if the NetworkServices CDP Mode setting is Off.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 35268,
      "normPath": "Network VLAN Voice Mode",
      "path": "Network[1] VLAN Voice Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define the VLAN voice ID. This setting will only take effect if Network VLAN Voice Mode is set to Manual.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "4094",
          "Min": "1",
          "Step": "4094",
          "type": "Integer"
        }
      },
      "id": 35269,
      "normPath": "Network VLAN Voice VlanId",
      "path": "Network[1] VLAN Voice VlanId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Enable or disable the CDP (Cisco Discovery Protocol) daemon. Enabling CDP will make the device report certain statistics and device identifiers to a CDP-enabled switch. If CDP is disabled, the Network VLAN Voice Mode: Auto setting will not work.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30571,
      "normPath": "NetworkServices CDP Mode",
      "path": "NetworkServices CDP Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Off",
        "description": "Define whether the device should be able to place and receive H.323 calls or not.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30768,
      "normPath": "NetworkServices H323 Mode",
      "path": "NetworkServices H323 Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "HTTPS",
        "description": "Define whether or not to allow access to the device using the HTTP or HTTPS (HTTP Secure) protocols. Note that the device's web interface use HTTP or HTTPS. If this setting is switched Off, you cannot use the web interface. For additional security (encryption and decryption of requests and pages that are returned by the web server), allow only HTTPS. Note: The default value is HTTP+HTTPS for devices that have been upgraded to CE9.4 (or later) from an earlier software version, provided that the device has not been factory reset after the upgrade.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "HTTP+HTTPS",
            "HTTPS",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 30572,
      "normPath": "NetworkServices HTTP Mode",
      "path": "NetworkServices HTTP Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "This is the username part of the credentials for authentication towards the HTTP proxy. Requires that the NetworkServices HTTP Proxy Mode is set to Manual.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "80",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35270,
      "normPath": "NetworkServices HTTP Proxy LoginName",
      "path": "NetworkServices HTTP Proxy LoginName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "You can configure to use a proxy server for HTTP, HTTPS, and WebSocket traffic. The HTTP proxy can be set up manually, it can be auto-configured (PACUrl), fully automated (WPAD), or it can be turned off. If NetworkServices HTTP Proxy Mode is not turned Off, you can further specify which services shall use the proxy in the HttpClient UseHttpProxy, HttpFeedback UseHttpProxy, and WebEngine UseHttpProxy settings. Communication with the Cisco Webex cloud will always go via the proxy if NetworkServices HTTP Proxy Mode is not turned Off. Regardless of the Proxy Mode, the device will never communicate with CUCM, MRA (CUCM via Expressway), or TMS via proxy.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Manual",
            "Off",
            "PACUrl",
            "WPAD"
          ],
          "type": "Literal"
        }
      },
      "id": 35271,
      "normPath": "NetworkServices HTTP Proxy Mode",
      "path": "NetworkServices HTTP Proxy Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Set the URL of the PAC (Proxy Auto Configuration) script. Requires that the NetworkServices HTTP Proxy Mode is set to PACUrl.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35272,
      "normPath": "NetworkServices HTTP Proxy PACUrl",
      "path": "NetworkServices HTTP Proxy PACUrl",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "This is the password part of the credentials for authentication towards the HTTP proxy. Requires that the NetworkServices HTTP Proxy Mode is set to Manual.",
        "hide_value": "True",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35273,
      "normPath": "NetworkServices HTTP Proxy Password",
      "path": "NetworkServices HTTP Proxy Password",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Set the URL of the HTTP proxy server. Requires that the NetworkServices HTTP Proxy Mode is set to Manual.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35274,
      "normPath": "NetworkServices HTTP Proxy Url",
      "path": "NetworkServices HTTP Proxy Url",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "TLSv1.1",
        "description": "Set the lowest version of the TLS (Transport Layer Security) protocol that is allowed for HTTPS.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "TLSv1.1",
            "TLSv1.2"
          ],
          "type": "Literal"
        }
      },
      "id": 33772,
      "normPath": "NetworkServices HTTPS Server MinimumTLSVersion",
      "path": "NetworkServices HTTPS Server MinimumTLSVersion",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The HTTP Strict Transport Security header lets a web site inform the browser that it should never load the site using HTTP and should automatically convert all attempts to access the site using HTTP to HTTPS requests instead.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 26886,
      "normPath": "NetworkServices HTTPS StrictTransportSecurity",
      "path": "NetworkServices HTTPS StrictTransportSecurity",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "When the video conferencing device connects to an HTTPS client (like a web browser), the client can be asked to present a certificate to the video conferencing device to identify itself.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30575,
      "normPath": "NetworkServices HTTPS VerifyClientCertificate",
      "path": "NetworkServices HTTPS VerifyClientCertificate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Auto",
        "description": "The Network Time Protocol (NTP) is used to synchronize the device's time and date to a reference time server. The time server will be queried regularly for time updates.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 30576,
      "normPath": "NetworkServices NTP Mode",
      "path": "NetworkServices NTP Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "0.tandberg.pool.ntp.org",
        "description": "The address of the NTP server that will be used when NetworkServices NTP Mode is set to Manual, and when NetworkServices NTP Mode is set to Auto and no address is supplied by a DHCP server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 31877,
      "normPath": "NetworkServices NTP Server Address",
      "path": "NetworkServices NTP Server[1..3] Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "To make sure that the NTP information comes from a trusted source, the video conferencing device must know the ID/key pair that the NTP source uses. Use the NetworkServices NTP Server [n] Key setting to supply the key. Prefix the key with \"HEX:\".",
        "hide_value": "True",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "2045",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 33773,
      "normPath": "NetworkServices NTP Server Key",
      "path": "NetworkServices NTP Server[1..3] Key",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "SHA256",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "None",
            "SHA1",
            "SHA256"
          ],
          "type": "Literal"
        }
      },
      "id": 26891,
      "normPath": "NetworkServices NTP Server KeyAlgorithm",
      "path": "NetworkServices NTP Server[1..3] KeyAlgorithm",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "To make sure that the NTP information comes from a trusted source, the video conferencing device must know the ID/key pair that the NTP source uses. Use the NetworkServices NTP Server [n] KeyId settings for the ID.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "10",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 33774,
      "normPath": "NetworkServices NTP Server KeyId",
      "path": "NetworkServices NTP Server[1..3] KeyId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether the device should be able to place and receive SIP calls or not.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30769,
      "normPath": "NetworkServices SIP Mode",
      "path": "NetworkServices SIP Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        },
        "description": "When sending an email message from this device, this is the name of the mailbox that the message is sent from."
      },
      "id": 28802,
      "normPath": "NetworkServices SMTP From",
      "path": "NetworkServices SMTP From",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "When sending an email message from this device, this is the name of the mailbox that the message is sent from.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30898,
      "normPath": "NetworkServices SMTP From",
      "path": "NetworkServices SMTP From",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        },
        "description": "You can set up the device to use SMTP (Simple Mail Transfer Protocol) for sending email from the device to a mail server for relaying. This is required if you want to allow users to send their whiteboards and presentations via email to people inside or outside their organization. If the device is set up for encrypted communication (see the NetworkServices SMTP Security setting), the device only allows connections where the SMTP server's certificate is validated. There is no option for ignoring the certificate check."
      },
      "id": 28803,
      "normPath": "NetworkServices SMTP Mode",
      "path": "NetworkServices SMTP Mode",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "You can set up the device to use SMTP (Simple Mail Transfer Protocol) for sending email from the device to a mail server for relaying. This is required if you want to allow users to send their whiteboards and presentations via email to people inside or outside their organization. If the device is set up for encrypted communication (see the NetworkServices SMTP Security setting), the device only allows connections where the SMTP server's certificate is validated. There is no option for ignoring the certificate check.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30899,
      "normPath": "NetworkServices SMTP Mode",
      "path": "NetworkServices SMTP Mode",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "hide_value": "True",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        },
        "description": "This is the password part of the credentials that are used to authenticate the device with the SMTP server. This setting may be required by the SMTP server."
      },
      "id": 28804,
      "normPath": "NetworkServices SMTP Password",
      "path": "NetworkServices SMTP Password",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "This is the password part of the credentials that are used to authenticate the device with the SMTP server. This setting may be required by the SMTP server.",
        "hide_value": "True",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30900,
      "normPath": "NetworkServices SMTP Password",
      "path": "NetworkServices SMTP Password",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "0",
          "Step": "65535",
          "type": "Integer"
        },
        "description": "This port is used for outgoing emails from the device to the SMTP server. Set a port number based on the encryption setting (NetworkServices SMTP Security) and the requirements of the SMTP server. Do not use the default value."
      },
      "id": 28805,
      "normPath": "NetworkServices SMTP Port",
      "path": "NetworkServices SMTP Port",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "This port is used for outgoing emails from the device to the SMTP server. Set a port number based on the encryption setting (NetworkServices SMTP Security) and the requirements of the SMTP server. Do not use the default value.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "0",
          "Step": "65535",
          "type": "Integer"
        }
      },
      "id": 30901,
      "normPath": "NetworkServices SMTP Port",
      "path": "NetworkServices SMTP Port",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "StartTls",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "None",
            "StartTls",
            "Tls"
          ],
          "type": "Literal"
        },
        "description": "Choose if and how to secure the communication between the device and the SMTP server."
      },
      "id": 28806,
      "normPath": "NetworkServices SMTP Security",
      "path": "NetworkServices SMTP Security",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "StartTls",
        "description": "Choose if and how to secure the communication between the device and the SMTP server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "None",
            "StartTls",
            "Tls"
          ],
          "type": "Literal"
        }
      },
      "id": 30902,
      "normPath": "NetworkServices SMTP Security",
      "path": "NetworkServices SMTP Security",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        },
        "description": "This is the address of the SMTP server."
      },
      "id": 28807,
      "normPath": "NetworkServices SMTP Server",
      "path": "NetworkServices SMTP Server",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "This is the address of the SMTP server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30903,
      "normPath": "NetworkServices SMTP Server",
      "path": "NetworkServices SMTP Server",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "80",
          "MinLength": "0",
          "type": "String"
        },
        "description": "This is the username part of the credentials that are used to authenticate the device with the SMTP server. This setting may be required by the SMTP server."
      },
      "id": 29471,
      "normPath": "NetworkServices SMTP Username",
      "path": "NetworkServices SMTP Username",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "This is the username part of the credentials that are used to authenticate the device with the SMTP server. This setting may be required by the SMTP server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "80",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30904,
      "normPath": "NetworkServices SMTP Username",
      "path": "NetworkServices SMTP Username",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the name of the SNMP community. The SNMP community name is used to authenticate SNMP requests. If an SNMP request from a management system does not include a matching community name (case sensitive), the message is dropped and the SNMP agent in the video device will not send a response. If you have the Cisco TelePresence Management Suite (TMS) you must make sure the same SNMP community is configured there.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 33775,
      "normPath": "NetworkServices SNMP CommunityName",
      "path": "NetworkServices SNMP CommunityName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "SNMP (Simple Network Management Protocol) is used by network management systems to monitor and manage devices such as routers, servers, and switches, that are connected to the IP network. SNMP exposes management data in the form of variables on the managed devices, which describe the device status and configuration. These variables can then be remotely queried, and sometimes set, by managing applications.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "ReadOnly",
            "ReadWrite"
          ],
          "type": "Literal"
        }
      },
      "id": 30578,
      "normPath": "NetworkServices SNMP Mode",
      "path": "NetworkServices SNMP Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define contact information that SNMP servers can use.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30579,
      "normPath": "NetworkServices SNMP SystemContact",
      "path": "NetworkServices SNMP SystemContact",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define location information that SNMP servers can use.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30580,
      "normPath": "NetworkServices SNMP SystemLocation",
      "path": "NetworkServices SNMP SystemLocation",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "RSA",
        "description": "Choose the cryptographic algorithm that shall be used for the SSH host key. Choices are RSA (Rivest–Shamir–Adleman) with 2048 bits keysize, ECDSA (Elliptic Curve Digital Signature Algorithm) with NIST curve P-384, and EdDSA (Edwards-curve Digital Signature Algorithm) with ed25519 signature schema.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "ECDSA",
            "RSA",
            "ed25519"
          ],
          "type": "Literal"
        }
      },
      "id": 26899,
      "normPath": "NetworkServices SSH HostKeyAlgorithm",
      "path": "NetworkServices SSH HostKeyAlgorithm",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The SSH (or Secure Shell) protocol can provide secure encrypted communication between the video conferencing device and your local computer.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30582,
      "normPath": "NetworkServices SSH Mode",
      "path": "NetworkServices SSH Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Fully disable UPnP (Universal Plug and Play), or enable UPnP for a short time period after the video conferencing device has been switched on or restarted. The default operation is that UPnP is enabled when you switch on or restart the video conferencing device. Then UPnP is automatically disabled after the timeout period that is defined in the NetworkServices UPnP Timeout setting. When UPnP is enabled, the device advertises its presence on the network. The advertisement permits a touch controller to discover video conferencing devices automatically, and you do not need to manually enter the device's IP address in order to pair the touch controller.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33893,
      "normPath": "NetworkServices UPnP Mode",
      "path": "NetworkServices UPnP Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "FollowHTTPService",
        "description": "It is possible to interact with the API of the device over the WebSocket protocol, both the insecure and secure versions (ws and wss). A WebSocket is tied to HTTP, so that also HTTP or HTTPS must be enabled before you can use WebSockets (see the NetworkServices HTTP Mode setting).",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "FollowHTTPService",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 33467,
      "normPath": "NetworkServices Websocket",
      "path": "NetworkServices Websocket",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Choose which information the user should see when logging on to the device through SSH.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30772,
      "normPath": "NetworkServices WelcomeText",
      "path": "NetworkServices WelcomeText",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "True",
        "description": "Devices that have a built-in Wi-Fi adapter, can connect to the network either via Ethernet or Wi-Fi. Both Ethernet and Wi-Fi are allowed by default, and the user can choose which one to use from the user interface. With this setting, the administrator can disable Wi-Fi configuration, so that it cannot be set up from the user interface. The devices support the following standards: IEEE 802.11a, IEEE 802.11b, IEEE 802.11g, IEEE 802.11n, and IEEE 802.11ac. The device supports the following security protocols: WPA-PSK (AES), WPA2-PSK (AES), EAP-TLS, EAP-TTLS, EAP-FAST, PEAP, EAP-MSCHAPv2, EAP-GTC, and open networks (not secured). If the PID (Product ID), found on the rating label at the rear of the device, contains the letters NR (No Radio) the device does not support Wi-Fi.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 33776,
      "normPath": "NetworkServices Wifi Allowed",
      "path": "NetworkServices Wifi Allowed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define whether or not to allow the use of a third-party input device, such as a USB keyboard or a wireless remote control with a USB dongle. The input device must advertise itself as a USB keyboard. You must define and implement the actions to be taken as response to key clicks yourself.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 28447,
      "normPath": "Peripherals InputDevice Mode",
      "path": "Peripherals InputDevice Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        },
        "description": "Define whether or not to allow the use of a third-party input device, such as a USB keyboard or a wireless remote control with a USB dongle. The input device must advertise itself as a USB keyboard. You must define and implement the actions to be taken as response to key clicks yourself."
      },
      "id": 29277,
      "normPath": "Peripherals InputDevice Mode",
      "path": "Peripherals InputDevice Mode",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "In order to use a touch controller (Cisco Webex Room Navigator or Cisco Touch 10) as user interface for the video conferencing device, the touch controller must be paired to the device. When the touch controller is paired via the network (LAN), this is referred to as remote pairing. Remote pairing is allowed by default; you must switch this setting Off if you want to prevent remote pairing. Board 55/70 does not support the Room Navigator.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33894,
      "normPath": "Peripherals Pairing CiscoTouchPanels RemotePairing",
      "path": "Peripherals Pairing CiscoTouchPanels RemotePairing",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "In order to use a touch controller (Cisco Webex Room Navigator or Cisco Touch 10) as user interface for the video conferencing device, the touch controller must be either directly connected to the device or paired to the device via LAN. The latter is referred to as remote pairing. Remote pairing is allowed by default; you must switch this setting Off if you want to prevent remote pairing.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33954,
      "normPath": "Peripherals Pairing CiscoTouchPanels RemotePairing",
      "path": "Peripherals Pairing CiscoTouchPanels RemotePairing",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "0"
          ],
          "type": "Literal"
        },
        "description": "Define the number of cameras that are expected to be connected to the video conferencing device. This information is used by the device's diagnostics service. If the number of connected cameras does not match this setting, the diagnostics service will report it as an inconsistency."
      },
      "id": 29279,
      "normPath": "Peripherals Profile Cameras",
      "path": "Peripherals Profile Cameras",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Minimum1",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "Minimum1",
            "NotSet"
          ],
          "type": "Literal"
        },
        "description": "Define the number of cameras that are expected to be connected to the video conferencing device. This information is used by the device's diagnostics service. If the number of connected cameras does not match this setting, the diagnostics service will report it as an inconsistency."
      },
      "id": 30276,
      "normPath": "Peripherals Profile Cameras",
      "path": "Peripherals Profile Cameras",
      "products": [
        "bandai"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Minimum1",
        "description": "Define the number of cameras that are expected to be connected to the video conferencing device. This information is used by the device's diagnostics service. If the number of connected cameras does not match this setting, the diagnostics service will report it as an inconsistency.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "Minimum1",
            "NotSet"
          ],
          "type": "Literal"
        }
      },
      "id": 30776,
      "normPath": "Peripherals Profile Cameras",
      "path": "Peripherals Profile Cameras",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "NotSet",
        "description": "Define if a third-party control system, for example Crestron or AMX, is expected to be connected to the video conferencing device. This information is used by the video conferencing device's diagnostics service. If the number of connected control systems does not match this setting, the diagnostics service will report it as an inconsistency. Note that only one third-party control system is supported. If set to 1, the control system must send heart beats to the video conferencing device using xCommand Peripherals Pair and HeartBeat commands. Failing to do so will cause the video conferenceing device to show a warning that it has lost connectivity to the control system.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "NotSet"
          ],
          "type": "Literal"
        }
      },
      "id": 30777,
      "normPath": "Peripherals Profile ControlSystems",
      "path": "Peripherals Profile ControlSystems",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "NotSet",
        "description": "Define if a third-party control system, for example Crestron or AMX, is expected to be connected to the video conferencing device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "NotSet"
          ],
          "type": "Literal"
        }
      },
      "id": 33895,
      "normPath": "Peripherals Profile ControlSystems",
      "path": "Peripherals Profile ControlSystems",
      "products": [
        "bandai",
        "octavio"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "NotSet",
        "description": "Define if a third-party control system, for example Crestron or AMX, is expected to be connected to the video conferencing device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "NotSet"
          ],
          "type": "Literal"
        }
      },
      "id": 34027,
      "normPath": "Peripherals Profile ControlSystems",
      "path": "Peripherals Profile ControlSystems",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "0"
          ],
          "type": "Literal"
        },
        "description": "Define the number of Cisco touch controllers that are expected to be connected to the device. This information is used by the device's diagnostics service. If the number of connected touch controllers does not match this setting, the diagnostics service will report it as an inconsistency."
      },
      "id": 29280,
      "normPath": "Peripherals Profile TouchPanels",
      "path": "Peripherals Profile TouchPanels",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Minimum1",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "Minimum1",
            "NotSet"
          ],
          "type": "Literal"
        },
        "description": "Define the number of Cisco touch controllers that are expected to be connected to the device. This information is used by the device's diagnostics service. If the number of connected touch controllers does not match this setting, the diagnostics service will report it as an inconsistency."
      },
      "id": 30277,
      "normPath": "Peripherals Profile TouchPanels",
      "path": "Peripherals Profile TouchPanels",
      "products": [
        "bandai"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Minimum1",
        "description": "Define the number of Cisco touch controllers that are expected to be connected to the device. This information is used by the device's diagnostics service. If the number of connected touch controllers does not match this setting, the diagnostics service will report it as an inconsistency.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "0",
            "1",
            "2",
            "3",
            "4",
            "5",
            "Minimum1",
            "NotSet"
          ],
          "type": "Literal"
        }
      },
      "id": 33955,
      "normPath": "Peripherals Profile TouchPanels",
      "path": "Peripherals Profile TouchPanels",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define a name for the external phone book.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32075,
      "normPath": "Phonebook Server ID",
      "path": "Phonebook Server[1] ID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Enabled",
        "description": "Configure if the phonebook server supports pagination (paging) or not. Pagination means that the server supports consecutive searches, and these searches can be relative to an offset. This allows the user interface to perform as many consecutive searches as required to get the complete search result. If Pagination is Disabled the device does a single search and returns a maximum of 100 entries in the search result. It is not possible to scroll to any further search results beyond that.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Enabled"
          ],
          "type": "Literal"
        }
      },
      "id": 32076,
      "normPath": "Phonebook Server Pagination",
      "path": "Phonebook Server[1] Pagination",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "On",
        "description": "This setting applies when a video conferencing device connects to an external phone book server via HTTPS. Before establishing a connection between the device and the HTTPS server, the device checks if the certificate of the server is signed by a trusted Certificate Authority (CA). The CA certificate must be included in the CA list on the device, either pre-installed or manually uploaded using the web interface or API. In general, the minimum TLS (Transport Layer Security) version for the HTTPS connection is 1.1. There are two exceptions to this rule: 1) For compatibility reasons, the minimum TLS version is 1.0 for devices that are registered to CUCM. 2) Devices registered to the Webex cloud service always use version 1.2. Note: The value is set to Off for a device that has been upgraded to CE9.9 (or later) from CE9.8 or earlier software versions, provided that the device has not been factory reset after the upgrade, and that the old NetworkServices HTTPS VerifyServerCertificate setting was not explicitly set to On.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33896,
      "normPath": "Phonebook Server TlsVerify",
      "path": "Phonebook Server[1] TlsVerify",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Select the phonebook server type.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "CUCM",
            "Off",
            "Spark",
            "TMS",
            "VCS"
          ],
          "type": "Literal"
        }
      },
      "id": 32078,
      "normPath": "Phonebook Server Type",
      "path": "Phonebook Server[1] Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the address (URL) to the external phone book server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32079,
      "normPath": "Phonebook Server URL",
      "path": "Phonebook Server[1] URL",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Auto",
        "description": "This setting controls how the device discovers whether it should request an internal or external configuration from the provisioning server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "External",
            "Internal"
          ],
          "type": "Literal"
        }
      },
      "id": 28458,
      "normPath": "Provisioning Connectivity",
      "path": "Provisioning Connectivity",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Enabled",
        "description": "Enable devices to send call statistics to CUCM which will then be populated in CUCM's Call Management Records The call statistics are sent to CUCM upon termination of a call.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Enabled"
          ],
          "type": "Literal"
        }
      },
      "id": 33897,
      "normPath": "Provisioning CUCM CallManagementRecords CallDiagnostics",
      "path": "Provisioning CUCM CallManagementRecords CallDiagnostics",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Define the IP Address or DNS name of the external manager / provisioning system. If an External Manager Address (and Path) is configured, the device will send a message to this address when starting up. When receiving this message the external manager / provisioning system can return configurations/commands to the unit as a result. When using CUCM or TMS provisioning, the DHCP server can be set up to provide the external manager address automatically (DHCP Option 242 for TMS, and DHCP Option 150 for CUCM). An address set in the Provisioning ExternalManager Address setting will override the address provided by DHCP.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 33898,
      "normPath": "Provisioning ExternalManager Address",
      "path": "Provisioning ExternalManager Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Only applicable when the device is provisioned by Cisco Unified Communication Manager (CUCM) and an alternate CUCM is available for redundancy. Define the address of the alternate CUCM. If the main CUCM is not available, the device will be provisioned by the alternate CUCM. When the main CUCM is available again, the device will be provisioned by this CUCM.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30780,
      "normPath": "Provisioning ExternalManager AlternateAddress",
      "path": "Provisioning ExternalManager AlternateAddress",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Define the SIP domain for the VCS provisioning server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 28461,
      "normPath": "Provisioning ExternalManager Domain",
      "path": "Provisioning ExternalManager Domain",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Define the Path to the external manager / provisioning system. This setting is required when several management services reside on the same server, i.e. share the same External Manager address.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 28462,
      "normPath": "Provisioning ExternalManager Path",
      "path": "Provisioning ExternalManager Path",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "HTTP",
        "description": "Define whether to use the HTTP (unsecure communication) or HTTPS (secure communication) protocol when sending requests to the external manager / provisioning system. The selected protocol must be enabled in the NetworkServices HTTP Mode setting.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "HTTP",
            "HTTPS"
          ],
          "type": "Literal"
        }
      },
      "id": 28463,
      "normPath": "Provisioning ExternalManager Protocol",
      "path": "Provisioning ExternalManager Protocol",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "This is the username part of the credentials used to authenticate the device with the provisioning server. This setting must be used when required by the provisioning server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "MaxLength": "80",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30781,
      "normPath": "Provisioning LoginName",
      "path": "Provisioning LoginName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "It is possible to configure a device using a provisioning system (external manager). This allows video conferencing network administrators to manage many devices simultaneously. With this setting you choose which type of provisioning system to use. Provisioning can also be switched off. Contact your provisioning system provider/representative for more information.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "CUCM",
            "Edge",
            "Off",
            "TMS",
            "VCS",
            "Webex",
            "WebexCalling"
          ],
          "type": "Literal"
        }
      },
      "id": 33135,
      "normPath": "Provisioning Mode",
      "path": "Provisioning Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "This is the password part of the credentials used to authenticate the device with the provisioning server. This setting must be used when required by the provisioning server.",
        "hide_value": "True",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "MaxLength": "64",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30782,
      "normPath": "Provisioning Password",
      "path": "Provisioning Password",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "This setting applies when a video conferencing device connects to a provisioning server via HTTPS. Before establishing a connection between the device and the HTTPS server, the device checks if the certificate of the server is signed by a trusted Certificate Authority (CA). The CA certificate must be included in the CA list on the device, either pre-installed or manually uploaded using the web interface or API. In general, the minimum TLS (Transport Layer Security) version for the HTTPS connection is 1.1. There are two exceptions to this rule: 1) For compatibility reasons, the minimum TLS version is 1.0 for devices that are registered to CUCM. 2) Devices registered to the Webex cloud service always use version 1.2. Note: The value is set to Off for a device that has been upgraded to CE9.9 (or later) from CE9.8 or earlier software versions, provided that the device has not been factory reset after the upgrade, and that the old NetworkServices HTTPS VerifyServerCertificate setting was not explicitly set to On. The certificate check is always performed, regardless of this setting, if the device is provisioned from the Cisco Webex cloud service or from CUCM via Expressway (also known as MRA or Edge).",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30783,
      "normPath": "Provisioning TlsVerify",
      "path": "Provisioning TlsVerify",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define if the device is linked to Webex Edge for Devices, which gives access to select Webex cloud services. The setting applies only to devices that are registered to an on-premises service.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30784,
      "normPath": "Provisioning WebexEdge",
      "path": "Provisioning WebexEdge",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "False",
        "description": "This setting applies only when NetworkServices HTTP Mode is set to HTTP+HTTPS or HTTPS. By default, Proximity connections use TCP port 443. Use this setting to allow Proximity connections also on port 65533.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 31419,
      "normPath": "Proximity AlternatePort Enabled",
      "path": "Proximity AlternatePort Enabled",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "On",
        "description": "The Proximity Mode setting has no effect for devices that are registered to the Webex cloud service. To prevent a cloud registered device from sending ultrasound pairing messages, you must set Audio Ultrasound MaxVolume to 0. For devices registered on-premises, the Proximity Mode setting determines whether the device will emit ultrasound pairing messages or not. When the device emits ultrasound pairing messages, Cisco collaboration clients can detect that they are close to the device. In order to use a client, at least one of the Proximity services must be enabled (refer to the Proximity Services settings) as well. In general, Cisco recommends enabling all the Proximity services. The Proximity Mode and Audio Ultrasound MaxVolume settings only affect ultrasound pairing messages. To stop all ultrasound emissions, the RoomAnalytics PeoplePresenceDetector and Standby WakeupOnMotionDetection settings must also be switched Off.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33778,
      "normPath": "Proximity Mode",
      "path": "Proximity Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Off",
        "description": "The Proximity Mode setting has no effect for devices that are registered to the Webex cloud service. To prevent a cloud registered device from sending ultrasound pairing messages, you must set Audio Ultrasound MaxVolume to 0. For devices registered on-premises, the Proximity Mode setting determines whether the device will emit ultrasound pairing messages or not. When the device emits ultrasound pairing messages, Cisco collaboration clients can detect that they are close to the device. In order to use a client, at least one of the Proximity services must be enabled (refer to the Proximity Services settings) as well. In general, Cisco recommends enabling all the Proximity services. The Proximity Mode and Audio Ultrasound MaxVolume settings only affect ultrasound pairing messages. To stop all ultrasound emissions, the RoomAnalytics PeoplePresenceDetector and Standby WakeupOnMotionDetection settings must also be switched Off.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33899,
      "normPath": "Proximity Mode",
      "path": "Proximity Mode",
      "products": [
        "bandai",
        "barents",
        "octavio",
        "polaris",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Disabled",
        "description": "Enable or disable basic call control features on Cisco collaboration clients. When this setting is enabled, you are able to control a call using a Cisco collaboration client (for example dial, mute, adjust volume and hang up). This service is supported by mobile devices (iOS and Android). Proximity Mode must be On for this setting to take any effect.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Enabled"
          ],
          "type": "Literal"
        }
      },
      "id": 30786,
      "normPath": "Proximity Services CallControl",
      "path": "Proximity Services CallControl",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Enabled",
        "description": "Enable or disable content sharing from Cisco collaboration clients. When this setting is enabled, you can share content from a Cisco collaboration client wirelessly on the device, e.g. share your laptop screen. This service is supported by laptops (OS X and Windows). Proximity Mode must be On for this setting to take any effect.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Enabled"
          ],
          "type": "Literal"
        }
      },
      "id": 30787,
      "normPath": "Proximity Services ContentShare FromClients",
      "path": "Proximity Services ContentShare FromClients",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Disabled",
        "description": "This is no longer applicable.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Disabled"
          ],
          "type": "Literal"
        }
      },
      "id": 33900,
      "normPath": "Proximity Services ContentShare ToClients",
      "path": "Proximity Services ContentShare ToClients",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "10",
        "description": "Set the interval at which the ambient noise estimation is run, if enabled. The xConfiguration RoomAnalytics AmbientNoiseEstimation Mode can be used to enable or disable ambient noise estimations.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Max": "60",
          "Min": "10",
          "Step": "60",
          "type": "Integer"
        }
      },
      "id": 33782,
      "normPath": "RoomAnalytics AmbientNoiseEstimation Interval",
      "path": "RoomAnalytics AmbientNoiseEstimation Interval",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The device can estimate the stationary ambient noise level (background noise level) in the room. The result is reported in the RoomAnalytics AmbientNoise Level dBA status. The status is updated when a new ambient noise level is detected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30789,
      "normPath": "RoomAnalytics AmbientNoiseEstimation Mode",
      "path": "RoomAnalytics AmbientNoiseEstimation Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "By using face detection, the device – when a Cisco Quad Camera is connected - has the capability to find how many persons are in the room. By default, the device only counts people when in a call, or when displaying the self-view picture.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30790,
      "normPath": "RoomAnalytics PeopleCountOutOfCall",
      "path": "RoomAnalytics PeopleCountOutOfCall",
      "products": [
        "barents",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "By using face detection, the device has the capability to find how many persons are in the room. By default, the device only counts people when in a call, or when displaying the self-view picture.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30857,
      "normPath": "RoomAnalytics PeopleCountOutOfCall",
      "path": "RoomAnalytics PeopleCountOutOfCall",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "By using face detection, the device has the capability to find how many persons are in the room. By default, the device only counts people when in a call, or when displaying the self-view picture.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33783,
      "normPath": "RoomAnalytics PeopleCountOutOfCall",
      "path": "RoomAnalytics PeopleCountOutOfCall",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The device has the capability to find whether or not people are present in the room, and report the result in the RoomAnalytics PeoplePresence status. The feature is based on ultrasound. Read the status description for more details. Ultrasound signals for presence detection are not emitted when both this setting AND the Standby WakeupOnMotionDetection setting are switched Off. The Audio Ultrasound MaxVolume and Proximity Mode settings has no effect on presence detection.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30590,
      "normPath": "RoomAnalytics PeoplePresenceDetector",
      "path": "RoomAnalytics PeoplePresenceDetector",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1800",
        "description": "Defines how often the RT60 will be measured and reported to the RoomAnalytics status. The interval is in seconds. The RoomAnalytics ReverberationTime Mode configuration must be enabled to set the interval.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Max": "3600",
          "Min": "60",
          "Step": "3600",
          "type": "Integer"
        }
      },
      "id": 33784,
      "normPath": "RoomAnalytics ReverberationTime Interval",
      "path": "RoomAnalytics ReverberationTime Interval",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Reverberation time is a measure of how fast a sound will \"fade away\" or decay in a room. This is highly related to the perception of the acoustic quality of a room. The Cisco Webex devices are capable of measuring the reverberation time, RT60, directly from the acoustic echo canceller. As opposed to traditional reverberation time measurement where it is required to emit a noise or impulse signal in the room, the Cisco device will measure RT60 as a “silent measurement”. Due to the silent measurement behavior, the RT60 values will be indicative and not strictly correct according to the ISO 3382-2 standard. The measurements will measure the RT60 values for each octave band from 125 Hz to 4 kHz. ",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33785,
      "normPath": "RoomAnalytics ReverberationTime Mode",
      "path": "RoomAnalytics ReverberationTime Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Daily",
        "description": "Enable or disable the daily room cleanup of web data. Use xConfiguration RoomCleanup AutoRun HourOfDay to set the time of day.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Daily",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 33786,
      "normPath": "RoomCleanup AutoRun ContentType WebData",
      "path": "RoomCleanup AutoRun ContentType WebData",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Daily",
        "description": "Enable or disable the daily room cleanup of whiteboards. Use xConfiguration RoomCleanup AutoRun HourOfDay to set the time of day.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Daily",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 33787,
      "normPath": "RoomCleanup AutoRun ContentType Whiteboards",
      "path": "RoomCleanup AutoRun ContentType Whiteboards",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Set the hour of the day when room cleanup will be performed each day.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "23",
          "Min": "0",
          "Step": "23",
          "type": "Integer"
        }
      },
      "id": 33788,
      "normPath": "RoomCleanup AutoRun HourOfDay",
      "path": "RoomCleanup AutoRun HourOfDay",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "False",
        "description": "The room scheduling feature allows you to book a room directly from the touch controller that is in the meeting room. You can also extend an ongoing meeting if the room is still available. You can also use the Webex Assistant (voice-driven virtual assistant) to book or extend a meeting. The room scheduling feature requires that the device is registered to the Webex cloud service or linked to Webex Edge for devices. In addition, the room must be set up with a calendar service that allows booking. The room scheduling feature is not supported on personal mode devices.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 33901,
      "normPath": "RoomScheduler Enabled",
      "path": "RoomScheduler Enabled",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Internal",
        "description": "Define where to record or transmit the audit logs. The audit logs are sent to a syslog server. This setting has no effect if the Logging Mode setting is set to Off. When using the External or ExternalSecure mode you must enter the address of the audit server in the Security Audit Server Address setting.",
        "read": [
          "Admin",
          "Audit",
          "User"
        ],
        "role": [
          "Audit"
        ],
        "valuespace": {
          "Values": [
            "External",
            "ExternalSecure",
            "Internal",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 33790,
      "normPath": "Security Audit Logging Mode",
      "path": "Security Audit Logging Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Ignore",
        "description": "Define what happens when the connection to the syslog server is lost. This setting is only relevant when Security Audit Logging Mode is set to ExternalSecure.",
        "read": [
          "Admin",
          "Audit",
          "User"
        ],
        "role": [
          "Audit"
        ],
        "valuespace": {
          "Values": [
            "Halt",
            "Ignore"
          ],
          "type": "Literal"
        }
      },
      "id": 26930,
      "normPath": "Security Audit OnError Action",
      "path": "Security Audit OnError Action",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Set the IP address or DNS name of the syslog server that the audit logs are sent to. This setting is only relevant when Security Audit Logging Mode is set to External or ExternalSecure.",
        "read": [
          "Admin",
          "Audit",
          "User"
        ],
        "role": [
          "Audit"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 26931,
      "normPath": "Security Audit Server Address",
      "path": "Security Audit Server Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "514",
        "description": "The audit logs are sent to a syslog server. Define the port of the syslog server that the device shall send its audit logs to. This setting is only relevant when Security Audit Server PortAssignment is set to Manual.",
        "read": [
          "Admin",
          "Audit",
          "User"
        ],
        "role": [
          "Audit"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "0",
          "Step": "65535",
          "type": "Integer"
        }
      },
      "id": 30592,
      "normPath": "Security Audit Server Port",
      "path": "Security Audit Server Port",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The audit logs are sent to a syslog server. You can define how the port number of the external syslog server will be assigned. This setting is only relevant when Security Audit Logging Mode is set to External or ExternalSecure. To see which port number is used you can check the Security Audit Server Port status. Navigate to Setup > Status on the web interface or; if on a command line interface, run the command xStatus Security Audit Server Port.",
        "read": [
          "Admin",
          "Audit",
          "User"
        ],
        "role": [
          "Audit"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 26933,
      "normPath": "Security Audit Server PortAssignment",
      "path": "Security Audit Server PortAssignment",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "If required, you can set the device in FIPS mode (Federal Information Processing Standard (FIPS) Publication 140-3, Security Requirements for Cryptographic Modules). While in FIPS mode the remote support user is not available, and Digest access authentication is not supported between the device and an HTTP Proxy, because Digest access authentication is using MD5 cryptographic hashing, which is not allowed in FIPS. This last limitation only affects Webex registered devices, since an HTTP Proxy is used only for the Webex solution. You should allow only HTTPS, and do not switch on SNMP or IEEE8021X in FIPS mode (keep the default values). For changes to this setting to take full effect, you must restart the device.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33791,
      "normPath": "Security Fips Mode",
      "path": "Security Fips Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "60",
        "description": "Define how long the device will lock out a user after failed login to a web or SSH session. Restart the device for any change to this setting to take effect.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "10000",
          "Min": "0",
          "Step": "10000",
          "type": "Integer"
        }
      },
      "id": 33792,
      "normPath": "Security Session FailedLoginsLockoutTime",
      "path": "Security Session FailedLoginsLockoutTime",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Define how long the device will accept inactivity from the user before automatically logging out from a web or SSH session. Restart the device for any change to this setting to take effect.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "10000",
          "Min": "0",
          "Step": "10000",
          "type": "Integer"
        }
      },
      "id": 33793,
      "normPath": "Security Session InactivityTimeout",
      "path": "Security Session InactivityTimeout",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "Define the maximum number of failed login attempts per user for a web or SSH session. If the user exceeded the maximum number of attempts the user will be locked out. 0 means that there is no limit for failed logins. Restart the device for any change to this setting to take effect.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "10",
          "Min": "0",
          "Step": "10",
          "type": "Integer"
        }
      },
      "id": 33794,
      "normPath": "Security Session MaxFailedLogins",
      "path": "Security Session MaxFailedLogins",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20",
        "description": "The maximum number of simultaneous sessions per user is 20 sessions.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "20",
          "Min": "1",
          "Step": "20",
          "type": "Integer"
        }
      },
      "id": 26938,
      "normPath": "Security Session MaxSessionsPerUser",
      "path": "Security Session MaxSessionsPerUser",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "20",
        "description": "The maximum number of simultaneous sessions in total is 20 sessions.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "20",
          "Min": "1",
          "Step": "20",
          "type": "Integer"
        }
      },
      "id": 26939,
      "normPath": "Security Session MaxTotalSessions",
      "path": "Security Session MaxTotalSessions",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "When logging in to the device using SSH you will see the UserId, time and date of the last session that did a successful login.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30804,
      "normPath": "Security Session ShowLastLogon",
      "path": "Security Session ShowLastLogon",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "115200",
        "description": "Set the baud rate (data transmission rate) for the serial port. Other connection parameters for the serial port are: Data bits: 8; Parity: None; Stop bits: 1; Flow control: None.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "115200"
          ],
          "type": "Literal"
        }
      },
      "id": 30945,
      "normPath": "SerialPort BaudRate",
      "path": "SerialPort BaudRate",
      "products": [
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "115200",
        "description": "Set the baud rate (data transmission rate) for the serial port. Other connection parameters for the serial port are: Data bits: 8; Parity: None; Stop bits: 1; Flow control: None. This setting is not available for the first generation of boards (Webex Board 55 and Webex Board 70).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "115200"
          ],
          "type": "Literal"
        }
      },
      "id": 33795,
      "normPath": "SerialPort BaudRate",
      "path": "SerialPort BaudRate",
      "products": [
        "bandai",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "115200",
        "description": "Set the baud rate (data transmission rate) for the serial port. A new baud rate takes effect after a device reboot. This setting does not have any effect on a dedicated maintenance port (micro USB). The maintenance port always uses the default baud rate. Other connection parameters for the serial port are: Data bits: 8; Parity: None; Stop bits: 1; Flow control: None.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "9600",
            "19200",
            "38400",
            "57600",
            "115200"
          ],
          "type": "Literal"
        }
      },
      "id": 33956,
      "normPath": "SerialPort BaudRate",
      "path": "SerialPort BaudRate",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define if login shall be required when connecting to a serial port. This setting is not available for the first generation of boards (Webex Board 55 and Webex Board 70).",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30596,
      "normPath": "SerialPort LoginRequired",
      "path": "SerialPort LoginRequired",
      "products": [
        "bandai",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define if login shall be required when connecting to a serial port. If the device has more than one serial port, this setting applies to all of them.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30806,
      "normPath": "SerialPort LoginRequired",
      "path": "SerialPort LoginRequired",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define if login shall be required when connecting to a serial port.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30910,
      "normPath": "SerialPort LoginRequired",
      "path": "SerialPort LoginRequired",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Enable/disable the serial port.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 26943,
      "normPath": "SerialPort Mode",
      "path": "SerialPort Mode",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Enable/disable the serial port. This setting is not available for the first generation of boards (Webex Board 55 and Webex Board 70).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30597,
      "normPath": "SerialPort Mode",
      "path": "SerialPort Mode",
      "products": [
        "bandai",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Enable/disable the serial port. This setting applies to all serial ports.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30807,
      "normPath": "SerialPort Mode",
      "path": "SerialPort Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Off",
        "description": "ANAT (Alternative Network Address Types) enables media negotiation for multiple addresses and address types, as specified in RFC 4091.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 28472,
      "normPath": "SIP ANAT",
      "path": "SIP ANAT",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "This is the password part of the credentials used to authenticate towards the SIP proxy.",
        "hide_value": "True",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "128",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 28473,
      "normPath": "SIP Authentication Password",
      "path": "SIP Authentication Password",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "This is the username part of the credentials used to authenticate towards the SIP proxy.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "128",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30791,
      "normPath": "SIP Authentication UserName",
      "path": "SIP Authentication UserName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Auto",
        "description": "Select the transport protocol to be used over the LAN.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "TCP",
            "Tls",
            "UDP"
          ],
          "type": "Literal"
        }
      },
      "id": 28475,
      "normPath": "SIP DefaultTransport",
      "path": "SIP DefaultTransport",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "When configured the incoming call will report the display name instead of the SIP URI.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "550",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 28476,
      "normPath": "SIP DisplayName",
      "path": "SIP DisplayName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Host",
        "description": "The ICE protocol needs some time to reach a conclusion about which media route to use (up to the first 5 seconds of a call). During this period media for the device will be sent to the Default Candidate as defined in this setting.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Host",
            "Relay",
            "Rflx"
          ],
          "type": "Literal"
        }
      },
      "id": 30792,
      "normPath": "SIP Ice DefaultCandidate",
      "path": "SIP Ice DefaultCandidate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Auto",
        "description": "ICE (Interactive Connectivity Establishment, RFC 5245) is a NAT traversal solution that the devices can use to discover the optimized media path. Thus the shortest route for audio and video is always secured between the devices. Initially STUN (Session Traversal Utilities for NAT) messages are exchanged when setting up the media path.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30793,
      "normPath": "SIP Ice Mode",
      "path": "SIP Ice Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "On",
        "description": "Turn on or off the listening for incoming connections on the SIP TCP/UDP ports. If turned off, the device will only be reachable through a SIP Proxy (CUCM or VCS). As a security measure, SIP ListenPort should be Off when the device is registered to a SIP Proxy.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30795,
      "normPath": "SIP ListenPort",
      "path": "SIP ListenPort",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "octavio",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Auto",
        "description": "Turn on or off the listening for incoming connections on the SIP TCP/UDP ports. If turned off, the device will only be reachable through a SIP Proxy (CUCM or VCS). As a security measure, SIP ListenPort should be Off when the device is registered to a SIP Proxy.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30883,
      "normPath": "SIP ListenPort",
      "path": "SIP ListenPort",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "TLSv1.0",
        "description": "Set the lowest version of the TLS (Transport Layer Security) protocol that is allowed for SIP.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "TLSv1.0",
            "TLSv1.1",
            "TLSv1.2"
          ],
          "type": "Literal"
        }
      },
      "id": 33902,
      "normPath": "SIP MinimumTLSVersion",
      "path": "SIP MinimumTLSVersion",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "The Proxy Address is the manually configured address for the outbound proxy. It is possible to use a fully qualified domain name, or an IP address. The default port is 5060 for TCP and UDP but another one can be provided.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32080,
      "normPath": "SIP Proxy Address",
      "path": "SIP Proxy[1..4] Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "On",
        "description": "Before establishing a connection over SIP TLS, the device checks if the certificate of the peer is signed by a trusted Certificate Authority (CA). The CA must be included in the CA list that is manually uploaded to the device using the web interface or API. The list of pre-installed certificates is not used to validate certificates for SIP TLS connections. Note: The value is set to Off for a device that has been upgraded to CE9.9 (or later) from CE9.8 or earlier software versions, provided that the device has not been factory reset after the upgrade, and that the setting was not explicitly set to On. Use the SIP MinimumTLSVersion setting to specify which TLS versions are allowed.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30796,
      "normPath": "SIP TlsVerify",
      "path": "SIP TlsVerify",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Define the password needed for accessing the TURN server.",
        "hide_value": "True",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "128",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 28489,
      "normPath": "SIP Turn Password",
      "path": "SIP Turn Password",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Define the address of the TURN (Traversal Using Relay NAT) server. It is used as a media relay fallback and it is also used to discover the device's own public IP address.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30799,
      "normPath": "SIP Turn Server",
      "path": "SIP Turn Server",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Define the username needed for accessing the TURN server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "128",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30800,
      "normPath": "SIP Turn UserName",
      "path": "SIP Turn UserName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "The SIP URI (Uniform Resource Identifier) is the address that is used to identify the device. The URI is registered and used by the SIP services to route inbound calls to the device. The SIP URI syntax is defined in RFC 3261.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30801,
      "normPath": "SIP URI",
      "path": "SIP URI",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "DefaultCameraPosition",
        "description": "Define the camera position after a restart of the video conferencing device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "DefaultCameraPosition",
            "None",
            "RestoreCameraPosition"
          ],
          "type": "Literal"
        }
      },
      "id": 30808,
      "normPath": "Standby BootAction",
      "path": "Standby BootAction",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "octavio",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "RestoreCameraPosition",
        "description": "Define the camera position after a restart of the video conferencing device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "DefaultCameraPosition",
            "None",
            "RestoreCameraPosition"
          ],
          "type": "Literal"
        }
      },
      "id": 31003,
      "normPath": "Standby BootAction",
      "path": "Standby BootAction",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether the device should go into standby mode or not.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30598,
      "normPath": "Standby Control",
      "path": "Standby Control",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70s",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether the device should go into standby mode or not.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 34375,
      "normPath": "Standby Control",
      "path": "Standby Control",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "10",
        "description": "Define how long (in minutes) the device shall be in idle mode before it goes into standby mode. Requires the Standby Control to be enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "480",
          "Min": "1",
          "Step": "480",
          "type": "Integer"
        }
      },
      "id": 30599,
      "normPath": "Standby Delay",
      "path": "Standby Delay",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "4",
        "description": "Define how long (in minutes) the device shall be in idle mode before it goes into standby mode. Requires the Standby Control to be enabled.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "480",
          "Min": "1",
          "Step": "480",
          "type": "Integer"
        }
      },
      "id": 30884,
      "normPath": "Standby Delay",
      "path": "Standby Delay",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 34302,
      "normPath": "Standby Halfwake Mode",
      "path": "Standby Halfwake Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "2",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "1440",
          "Min": "0",
          "Step": "1440",
          "type": "Integer"
        }
      },
      "id": 35018,
      "normPath": "Standby Level Networked Delay",
      "path": "Standby Level Networked Delay",
      "products": [
        "octavio"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 35019,
      "normPath": "Standby Level Networked Mode",
      "path": "Standby Level Networked Mode",
      "products": [
        "octavio"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "By default, a device does not play out audio in digital signage mode even if the web page has audio. You can use this setting to override the default behavior.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30809,
      "normPath": "Standby Signage Audio",
      "path": "Standby Signage Audio",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "NonInteractive",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Interactive",
            "NonInteractive"
          ],
          "type": "Literal"
        },
        "description": "By default, a user cannot interact with a digital signage web page. You can use this setting to enable the ability to interact with the web page."
      },
      "id": 28818,
      "normPath": "Standby Signage InteractionMode",
      "path": "Standby Signage InteractionMode",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "NonInteractive",
        "description": "By default, a user cannot interact with a digital signage web page. You can use this setting to enable the ability to interact with the web page.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Interactive",
            "NonInteractive"
          ],
          "type": "Literal"
        }
      },
      "id": 30946,
      "normPath": "Standby Signage InteractionMode",
      "path": "Standby Signage InteractionMode",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Content from a URL (a web page) can replace the traditional half-wake background image and information. This feature is called digital signage. The use of digital signage does not prevent the device from entering standby the normal way. Therefore, the Standby Delay setting determines for how long the digital signage is shown before the device goes into standby.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30810,
      "normPath": "Standby Signage Mode",
      "path": "Standby Signage Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Content from a URL (a web page) can replace the traditional half-wake background image and information. This feature is called digital signage. Users can interact with the web page, for example click on a link or enter text in a form. The use of digital signage does not prevent the device from entering standby the normal way. Therefore, the Standby Delay setting determines for how long the digital signage is shown before the device goes into standby.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33796,
      "normPath": "Standby Signage Mode",
      "path": "Standby Signage Mode",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "You can use this setting to force a web page to refresh at regular intervals. This is useful for web pages that are not able to refresh themselves. It is not recommended to set a refresh interval with the interactive mode.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "1440",
          "Min": "0",
          "Step": "1440",
          "type": "Integer"
        }
      },
      "id": 30811,
      "normPath": "Standby Signage RefreshInterval",
      "path": "Standby Signage RefreshInterval",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Set the URL of the web page you want to display on the screen (digital signage). If the length of the URL is 0, the device retains normal half-wake mode. If the URL fails, the device retains normal half-wake mode and a diagnostics message is issued.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "2000",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30812,
      "normPath": "Standby Signage Url",
      "path": "Standby Signage Url",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PrivacyPosition",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "None",
            "PrivacyPosition"
          ],
          "type": "Literal"
        },
        "description": "Define the camera position when going into standby mode."
      },
      "id": 26968,
      "normPath": "Standby StandbyAction",
      "path": "Standby StandbyAction",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PrivacyPosition",
        "description": "Define the camera position when going into standby mode.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "None",
            "PrivacyPosition"
          ],
          "type": "Literal"
        }
      },
      "id": 28498,
      "normPath": "Standby StandbyAction",
      "path": "Standby StandbyAction",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "RestoreCameraPosition",
        "description": "Define the camera position when leaving standby mode.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "DefaultCameraPosition",
            "None",
            "RestoreCameraPosition"
          ],
          "type": "Literal"
        }
      },
      "id": 28499,
      "normPath": "Standby WakeupAction",
      "path": "Standby WakeupAction",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Automatic wake up on motion detection is a feature that allows the device to detect when people enter the room. The feature is based on ultrasound detection. Ultrasound signals for motion detection are not emitted when both this setting AND the RoomAnalytics PeoplePresenceDetector setting are switched Off. The Audio Ultrasound MaxVolume and Proximity Mode settings has no effect on motion detection.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30600,
      "normPath": "Standby WakeupOnMotionDetection",
      "path": "Standby WakeupOnMotionDetection",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Automatic wake up on motion detection is a feature that allows the device to detect when people enter the room. The feature is based on ultrasound detection. Ultrasound signals for motion detection are not emitted when both this setting AND the RoomAnalytics PeoplePresenceDetector setting are switched Off. The Audio Ultrasound MaxVolume and Proximity Mode settings has no effect on motion detection.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30813,
      "normPath": "Standby WakeupOnMotionDetection",
      "path": "Standby WakeupOnMotionDetection",
      "products": [
        "bandai",
        "barents",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "If the device crashes, the device can automatically send logs to the Cisco Automatic Crash Report tool (ACR) for analyses. The ACR tool is for Cisco internal usage only and not available to customers.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30602,
      "normPath": "SystemUnit CrashReporting Mode",
      "path": "SystemUnit CrashReporting Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "acr.cisco.com",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 26973,
      "normPath": "SystemUnit CrashReporting URL",
      "path": "SystemUnit CrashReporting URL",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "The SystemUnit CustomDeviceId provides a place for you to store custom information about a unit. This can be useful, for example, in aiding to track devices in a provisioning setup).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 33797,
      "normPath": "SystemUnit CustomDeviceId",
      "path": "SystemUnit CustomDeviceId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "Define the device name. The device name will be sent as the hostname in a DHCP request and when the device is acting as an SNMP Agent.",
        "read": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30603,
      "normPath": "SystemUnit Name",
      "path": "SystemUnit Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "DD_MM_YY",
        "description": "Define the date format.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "DD_MM_YY",
            "MM_DD_YY",
            "YY_MM_DD"
          ],
          "type": "Literal"
        }
      },
      "id": 26976,
      "normPath": "Time DateFormat",
      "path": "Time DateFormat",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "24H",
        "description": "Define the time format.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "12H",
            "24H"
          ],
          "type": "Literal"
        }
      },
      "id": 26977,
      "normPath": "Time TimeFormat",
      "path": "Time TimeFormat",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Etc/UTC",
        "description": "Define the time zone for the geographical location of the device. The information in the value space is from the tz database, also called the IANA Time Zone Database.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Khartoum",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Havana",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Nuuk",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Damascus",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Pyongyang",
            "Asia/Qatar",
            "Asia/Qostanay",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tehran",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "Cuba",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Iran",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ],
          "type": "Literal"
        }
      },
      "id": 30604,
      "normPath": "Time Zone",
      "path": "Time Zone",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Default",
        "description": "You can enable an incoming call notification with amplified visuals. The screen and touch controller will flash red/white approximately once every second (1.75 Hz) to make it easier for hearing impaired users to notice an incoming call. If the device is already in a call the screen will not flash as this will disturb the on-going call, instead you will get a normal notification on screen and touch panel.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "AmplifiedVisuals",
            "Default"
          ],
          "type": "Literal"
        }
      },
      "id": 33903,
      "normPath": "UserInterface Accessibility IncomingCallNotification",
      "path": "UserInterface Accessibility IncomingCallNotification",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Webex Assistant allows you to control the device by using voice commands. Webex Assistant is a cloud service, so the device must either be registered to the Webex cloud service or registered to an on-premises service and linked to Webex Edge for Devices. Use this setting to enable or disable the Webex Assistant on the device.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33904,
      "normPath": "UserInterface Assistant Mode",
      "path": "UserInterface Assistant Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Sets the meeting details to private. “Schedule meeting” will be displayed as the title of the meeting.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 30817,
      "normPath": "UserInterface Bookings Visibility Title",
      "path": "UserInterface Bookings Visibility Title",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "If the device is set up with branding customizations, this setting affects the colors of the logo that is shown when the device is awake. You can choose whether you want to show the logo in full color, or reduce the opacity of the logo so that it blends in more naturally with the background and other elements on the screen.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Native"
          ],
          "type": "Literal"
        }
      },
      "id": 30605,
      "normPath": "UserInterface Branding AwakeBranding Colors",
      "path": "UserInterface Branding AwakeBranding Colors",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Choose which type of contact information to show in the user interface.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "DisplayName",
            "E164Alias",
            "H320Number",
            "H323Id",
            "IPv4",
            "IPv6",
            "None",
            "SipUri",
            "SystemName"
          ],
          "type": "Literal"
        }
      },
      "id": 26986,
      "normPath": "UserInterface ContactInfo Type",
      "path": "UserInterface ContactInfo Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "256",
          "MinLength": "0",
          "type": "String"
        },
        "description": "A custom message can be displayed, in the lower left side of the screen, in awake mode."
      },
      "id": 35013,
      "normPath": "UserInterface CustomMessage",
      "path": "UserInterface CustomMessage",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "A custom message can be displayed, in the lower left side of the screen, in awake mode.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "256",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 35014,
      "normPath": "UserInterface CustomMessage",
      "path": "UserInterface CustomMessage",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Hide or show diagnostics notifications on the user interface.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 30607,
      "normPath": "UserInterface Diagnostics Notifications",
      "path": "UserInterface Diagnostics Notifications",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Choose whether or not to remove the default End Call button from the user interface. The setting removes only the button, not its functionality as such.",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 28502,
      "normPath": "UserInterface Features Call End",
      "path": "UserInterface Features Call End",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 35233,
      "normPath": "UserInterface Features Call JoinGoogleMeet",
      "path": "UserInterface Features Call JoinGoogleMeet",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Choose whether or not to remove the default Join Webex button from the user interface. The button allows users to dial into a Webex meeting using just the Webex meeting number, no domain is required. However, for this to work, you must set up the infrastructure to allow calls to be routed to *@webex.com.",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 33906,
      "normPath": "UserInterface Features Call JoinWebex",
      "path": "UserInterface Features Call JoinWebex",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Choose whether or not to remove the default in-call Keypad button from the user interface. This button opens a keypad, which for example can be used for DTMF input.",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 30819,
      "normPath": "UserInterface Features Call Keypad",
      "path": "UserInterface Features Call Keypad",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Choose whether or not to remove the default Hold, Transfer, and Resume in-call buttons from the user interface. The setting removes only the buttons, not their functionality as such.",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 28504,
      "normPath": "UserInterface Features Call MidCallControls",
      "path": "UserInterface Features Call MidCallControls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Hidden",
        "description": "Choose whether or not to show the toggle button for Music Mode in the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 33907,
      "normPath": "UserInterface Features Call MusicMode",
      "path": "UserInterface Features Call MusicMode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Choose whether or not to remove the default Call button (including the directory, favorites, and recent calls lists) and the default in-call Add participant button from the user interface. The setting removes only the buttons, not their functionality as such.",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 28505,
      "normPath": "UserInterface Features Call Start",
      "path": "UserInterface Features Call Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Choose whether or not to show the default \"Turn video off\" button in the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 28506,
      "normPath": "UserInterface Features Call VideoMute",
      "path": "UserInterface Features Call VideoMute",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        },
        "description": "Choose whether or not to show the default \"Turn video off\" button in the user interface."
      },
      "id": 28820,
      "normPath": "UserInterface Features Call VideoMute",
      "path": "UserInterface Features Call VideoMute",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "False",
        "description": "Choose whether or not to remove all default buttons from the user interface. The setting removes only the buttons, not their functionality as such.",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 28507,
      "normPath": "UserInterface Features HideAll",
      "path": "UserInterface Features HideAll",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Choose whether or not to remove the default buttons and other UI elements for sharing and previewing content, both in call and out of call, from the user interface. The setting removes only the buttons and UI elements, not their functionality as such. You can still share content using Cisco Proximity or Cisco Webex apps.",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 33908,
      "normPath": "UserInterface Features Share Start",
      "path": "UserInterface Features Share Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "Integrator",
          "TouchUser",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 28822,
      "normPath": "UserInterface Features Whiteboard Start",
      "path": "UserInterface Features Whiteboard Start",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "You can configure the device to make a keyboard click sound effect (key tone) when typing text or numbers.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30820,
      "normPath": "UserInterface KeyTones Mode",
      "path": "UserInterface KeyTones Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "You can configure the device to make a keyboard click sound effect (key tone) when typing text or numbers.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30913,
      "normPath": "UserInterface KeyTones Mode",
      "path": "UserInterface KeyTones Mode",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "English",
        "description": "Select the language to be used in the user interface. If the language is not supported, the default language (English) will be used.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Arabic",
            "Catalan",
            "ChineseSimplified",
            "ChineseTraditional",
            "Czech",
            "Danish",
            "Dutch",
            "English",
            "EnglishUK",
            "Finnish",
            "French",
            "FrenchCanadian",
            "German",
            "Hebrew",
            "Hungarian",
            "Italian",
            "Japanese",
            "Korean",
            "Norwegian",
            "Polish",
            "Portuguese",
            "PortugueseBrazilian",
            "Russian",
            "Spanish",
            "SpanishLatin",
            "Swedish",
            "Turkish"
          ],
          "type": "Literal"
        }
      },
      "id": 26996,
      "normPath": "UserInterface Language",
      "path": "UserInterface Language",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define for how long the encryption indicator is shown on screen. The icon for encrypted calls is a locked padlock.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "AlwaysOff",
            "AlwaysOn",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 27000,
      "normPath": "UserInterface OSD EncryptionIndicator",
      "path": "UserInterface OSD EncryptionIndicator",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "128",
          "MinLength": "0",
          "type": "String"
        },
        "description": "A custom message can be displayed in the middle of the main screen when the device is in the half wake state. The custom message will replace the default message, which gives instructions how to start using the device. You can also delete the default message, without adding a custom message."
      },
      "id": 30608,
      "normPath": "UserInterface OSD HalfwakeMessage",
      "path": "UserInterface OSD HalfwakeMessage",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "",
        "description": "A custom message can be displayed in the middle of the main screen when the device is in the half wake state. The custom message will replace the default message, which gives instructions how to start using the device. You can also delete the default message, without adding a custom message.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "128",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 30821,
      "normPath": "UserInterface OSD HalfwakeMessage",
      "path": "UserInterface OSD HalfwakeMessage",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "You can configure a device to output a clean video stream. This is referred to as broadcast mode. In this mode the indicators, notifications, and controls are removed. This mode is primarily for broadcasting and recording services where you only want to pass on the video to your viewers.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Unobstructed"
          ],
          "type": "Literal"
        }
      },
      "id": 33800,
      "normPath": "UserInterface OSD Mode",
      "path": "UserInterface OSD Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define on which monitor the on-screen information and indicators (OSD) should be displayed.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 28511,
      "normPath": "UserInterface OSD Output",
      "path": "UserInterface OSD Output",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define on which monitor the on-screen information and indicators (OSD) should be displayed.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 28883,
      "normPath": "UserInterface OSD Output",
      "path": "UserInterface OSD Output",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define on which monitor the on-screen information and indicators (OSD) should be displayed.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 28982,
      "normPath": "UserInterface OSD Output",
      "path": "UserInterface OSD Output",
      "products": [
        "hopen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define on which monitor the on-screen information and indicators (OSD) should be displayed.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 29012,
      "normPath": "UserInterface OSD Output",
      "path": "UserInterface OSD Output",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define on which monitor the on-screen information and indicators (OSD) should be displayed.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1"
          ],
          "type": "Literal"
        }
      },
      "id": 29299,
      "normPath": "UserInterface OSD Output",
      "path": "UserInterface OSD Output",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "cloud",
        "default": "All",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "All",
            "People",
            "Rooms"
          ],
          "type": "Literal"
        }
      },
      "id": 27005,
      "normPath": "UserInterface Phonebook DefaultSearchFilter",
      "path": "UserInterface Phonebook DefaultSearchFilter",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "ReadWrite",
        "description": "This setting determines if a user is allowed to add or change a contact in the Directory and Favorites list from the user interface of the device.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "ReadOnly",
            "ReadWrite"
          ],
          "type": "Literal"
        }
      },
      "id": 30822,
      "normPath": "UserInterface Phonebook Mode",
      "path": "UserInterface Phonebook Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Configure the display of proximity notifications on the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30609,
      "normPath": "UserInterface Proximity Notifications",
      "path": "UserInterface Proximity Notifications",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Normal",
        "description": "This setting allows you to prevent important device information from being exposed in the user interface (drop down menu and Settings panel), for example the contact information and IP addresses of the video conferencing device, touch controller, and UCM/VCS registrars. It is important to note that such information is not hidden when navigating further into the Settings panel. If you want to fully prevent that people without administrator rights can see the contact information, IP addresses, MAC address, serial number, and software version, you must also set the UserInterface SettingsMenu Mode to Locked, and of course have a passphrase for all user accounts with administrator rights.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Normal",
            "Strong"
          ],
          "type": "Literal"
        }
      },
      "id": 30610,
      "normPath": "UserInterface Security Mode",
      "path": "UserInterface Security Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Unlocked",
        "description": "The Settings panel in the user interface (touch controller or on-screen) can be protected by the device's admin password. If this password is blank, anyone can access the settings in the Settings panel, and for example factory reset the device. If authentication is enabled, all settings that require authentication have a padlock icon. You will be prompted to enter the administrator's username and passphrase when you select the setting. Some settings do not require authentication, they do not have a padlock icon. ",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Locked",
            "Unlocked"
          ],
          "type": "Literal"
        }
      },
      "id": 33802,
      "normPath": "UserInterface SettingsMenu Mode",
      "path": "UserInterface SettingsMenu Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Choose whether or not to show the device name (or contact information) and the associated drop down menu and Settings panel on the user interface.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 30612,
      "normPath": "UserInterface SettingsMenu Visibility",
      "path": "UserInterface SettingsMenu Visibility",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "You can configure the device to make a sound effect, e.g. when someone connects a laptop or mobile through Proximity. The keyboard click sound effect when typing text is not affected by this setting (refer to the UserInterface Keytones Mode setting).",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30613,
      "normPath": "UserInterface SoundEffects Mode",
      "path": "UserInterface SoundEffects Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Light",
            "Night"
          ],
          "type": "Literal"
        }
      },
      "id": 34586,
      "normPath": "UserInterface Theme Name",
      "path": "UserInterface Theme Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Activity indicators let you see who is drawing and annotating in a call. The avatars of the participants or the initials of the device are displayed when someone is interacting with the whiteboard, so you can follow who is drawing or annotating. Applies only to cloud-registered devices.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30823,
      "normPath": "UserInterface Whiteboard ActivityIndicators",
      "path": "UserInterface Whiteboard ActivityIndicators",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "The LDAP filter is used to determine which users should be granted administrator privileges. You always have to set either an LDAP Admin Group or an LDAP Admin Filter. An LDAP Admin Filter takes precedence, so if the UserManagement LDAP Admin Filter is set, the UserManagement LDAP Admin Group setting is ignored.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "1024",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 33805,
      "normPath": "UserManagement LDAP Admin Filter",
      "path": "UserManagement LDAP Admin Filter",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Members of this AD (Active Directory) group will be given administrator access. This setting is a shorthand for saying (memberOf:1.2.840.113556.1.4.1941:=<group name>). You always have to set either an LDAP Admin Group or an LDAP Admin Filter. An LDAP Admin Filter takes precedence, so if the UserManagement LDAP Admin Filter is set, the UserManagement LDAP Admin Group setting is ignored.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 33806,
      "normPath": "UserManagement LDAP Admin Group",
      "path": "UserManagement LDAP Admin Group",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "The attribute used to map to the provided username. If not set, sAMAccountName is used.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 27029,
      "normPath": "UserManagement LDAP Attribute",
      "path": "UserManagement LDAP Attribute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "The distinguishing name of the entry at which to start a search (base).",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 27030,
      "normPath": "UserManagement LDAP BaseDN",
      "path": "UserManagement LDAP BaseDN",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "LDAPS",
        "description": "Define how to secure the communication between the device and the LDAP server. You can override the port number by using the UserManagement LDAP Server Port setting.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "LDAPS",
            "None",
            "STARTTLS"
          ],
          "type": "Literal"
        }
      },
      "id": 30615,
      "normPath": "UserManagement LDAP Encryption",
      "path": "UserManagement LDAP Encryption",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "TLSv1.2",
        "description": "Set the lowest version of the TLS (Transport Layer Security) protocol that is allowed for LDAP.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "TLSv1.0",
            "TLSv1.1",
            "TLSv1.2"
          ],
          "type": "Literal"
        }
      },
      "id": 33807,
      "normPath": "UserManagement LDAP MinimumTLSVersion",
      "path": "UserManagement LDAP MinimumTLSVersion",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Off",
        "description": "The device supports the use of an LDAP (Lightweight Directory Access Protocol) server as a central place to store and validate usernames and passwords. Use this setting to configure whether or not to use LDAP authentication. Our implementation is tested for the Microsoft Active Directory (AD) service. If you switch on LDAP Mode, make sure to configure the other UserManagement LDAP settings to suit your setup. Here is a few examples. Example 1: - UserManagement LDAP Mode: On - UserManagement LDAP Address: \"192.0.2.20\" - UserManagement LDAP BaseDN: \"DC=company, DC=com\" - UserManagement LDAP Admin Group: \"CN=admin group, OU=company groups, DC=company, DC=com\" Example 2: - UserManagement LDAP Mode: On - UserManagement LDAP Address: \"192.0.2.20\" - UserManagement LDAP BaseDN: \"DC=company, DC=com\" - UserManagement LDAP Admin Filter: \"(|(memberof=CN=admin group, OU=company groups, DC=company, DC=com)(sAMAccountName=username))\"",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33808,
      "normPath": "UserManagement LDAP Mode",
      "path": "UserManagement LDAP Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "",
        "description": "Set the IP address or hostname of the LDAP server.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "MaxLength": "255",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 27034,
      "normPath": "UserManagement LDAP Server Address",
      "path": "UserManagement LDAP Server Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "0",
        "description": "Set the port to connect to the LDAP server on. If set to 0, use the default for the selected protocol (see the UserManagement LDAP Encryption setting).",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "65535",
          "Min": "0",
          "Step": "65535",
          "type": "Integer"
        }
      },
      "id": 27035,
      "normPath": "UserManagement LDAP Server Port",
      "path": "UserManagement LDAP Server Port",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "On",
        "description": "When the device connects to an LDAP server, the server will identify itself to the device by presenting its certificate. Use this setting to determine whether or not the device will verify the server certificate.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30617,
      "normPath": "UserManagement LDAP VerifyServerCertificate",
      "path": "UserManagement LDAP VerifyServerCertificate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "When signing in to the device as a local user, the password must follow the rules set by the UserManagement PasswordPolicy settings. These settings replace the “systemtools securitysetting” command that was available in software versions older than CE9.10. A new password rule will not apply to existing passwords but will take effect on the next password change. This setting specifies the minimum number of numerical characters (0..9) in the password.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "4",
          "Min": "0",
          "Step": "4",
          "type": "Integer"
        }
      },
      "id": 33809,
      "normPath": "UserManagement PasswordPolicy Complexity MinimumDigits",
      "path": "UserManagement PasswordPolicy Complexity MinimumDigits",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "8",
        "description": "When signing in to the device as a local user, the password must follow the rules set by the UserManagement PasswordPolicy settings. These settings replace the “systemtools securitysetting” command that was available in software versions older than CE9.10. A new password rule will not apply to existing passwords but will take effect on the next password change. This setting specifies the minimum number of characters in the password.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "256",
          "Min": "0",
          "Step": "256",
          "type": "Integer"
        }
      },
      "id": 33810,
      "normPath": "UserManagement PasswordPolicy Complexity MinimumLength",
      "path": "UserManagement PasswordPolicy Complexity MinimumLength",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "When signing in to the device as a local user, the password must follow the rules set by the UserManagement PasswordPolicy settings. These settings replace the “systemtools securitysetting” command that was available in software versions older than CE9.10. A new password rule will not apply to existing passwords but will take effect on the next password change. This setting specifies the minimum number of lower-case letters in the password.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "4",
          "Min": "0",
          "Step": "4",
          "type": "Integer"
        }
      },
      "id": 33811,
      "normPath": "UserManagement PasswordPolicy Complexity MinimumLowercase",
      "path": "UserManagement PasswordPolicy Complexity MinimumLowercase",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "When signing in to the device as a local user, the password must follow the rules set by the UserManagement PasswordPolicy settings. These settings replace the “systemtools securitysetting” command that was available in software versions older than CE9.10. A new password rule will not apply to existing passwords but will take effect on the next password change. This setting specifies the minimum number of special characters in the password.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "4",
          "Min": "0",
          "Step": "4",
          "type": "Integer"
        }
      },
      "id": 33812,
      "normPath": "UserManagement PasswordPolicy Complexity MinimumSpecial",
      "path": "UserManagement PasswordPolicy Complexity MinimumSpecial",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "When signing in to the device as a local user, the password must follow the rules set by the UserManagement PasswordPolicy settings. These settings replace the “systemtools securitysetting” command that was available in software versions older than CE9.10. A new password rule will not apply to existing passwords but will take effect on the next password change. This setting specifies the minimum number of upper-case letters in the password.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "4",
          "Min": "0",
          "Step": "4",
          "type": "Integer"
        }
      },
      "id": 33813,
      "normPath": "UserManagement PasswordPolicy Complexity MinimumUppercase",
      "path": "UserManagement PasswordPolicy Complexity MinimumUppercase",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "When signing in to the device as a local user, the password must follow the rules set by the UserManagement PasswordPolicy settings. These settings replace the “systemtools securitysetting” command that was available in software versions older than CE9.10. A new password rule will not apply to existing passwords but will take effect on the next password change. This setting specifies the maximum number of days before a password becomes invalid.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "7300",
          "Min": "0",
          "Step": "7300",
          "type": "Integer"
        }
      },
      "id": 33814,
      "normPath": "UserManagement PasswordPolicy MaxLifetime",
      "path": "UserManagement PasswordPolicy MaxLifetime",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "12",
        "description": "When signing in to the device as a local user, the password must follow the rules set by the UserManagement PasswordPolicy settings. These settings replace the “systemtools securitysetting” command that was available in software versions older than CE9.10. A new password rule will not apply to existing passwords but will take effect on the next password change. This setting specifies the reuse limit (n), which means that a user cannot change to either of their previous n passwords.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Max": "24",
          "Min": "0",
          "Step": "24",
          "type": "Integer"
        }
      },
      "id": 33815,
      "normPath": "UserManagement PasswordPolicy ReuseLimit",
      "path": "UserManagement PasswordPolicy ReuseLimit",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define the default input source for main video in calls. The main video is played on this source when you switch on or restart the video conferencing device. Use the Video Input SetMainVideoSource command to change to another source while the device is running.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1"
          ],
          "type": "Literal"
        }
      },
      "id": 30627,
      "normPath": "Video DefaultMainSource",
      "path": "Video DefaultMainSource",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define the default input source for main video in calls. The main video is played on this source when you switch on or restart the video conferencing device. Use the Video Input SetMainVideoSource command to change to another source while the device is running.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6"
          ],
          "type": "Literal"
        }
      },
      "id": 30825,
      "normPath": "Video DefaultMainSource",
      "path": "Video DefaultMainSource",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "Define the default input source for main video in calls. The main video is played on this source when you switch on or restart the video conferencing device. Use the Video Input SetMainVideoSource command to change to another source while the device is running.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3"
          ],
          "type": "Literal"
        }
      },
      "id": 30858,
      "normPath": "Video DefaultMainSource",
      "path": "Video DefaultMainSource",
      "products": [
        "bandai",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1"
          ],
          "type": "Literal"
        }
      },
      "id": 31880,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[1] CameraControl CameraId",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: 1; [2]: 2; [3]: 3; [4]: 2; [5]: 3; [6]: 2; [7]: 3; [8]: 2; [9]: 3; [10]: 2; [11]: 3; [12]: 2; [13]: 3; ",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input. Use the xStatus Camera API command to see the IDs of the different cameras.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "type": "Literal"
        }
      },
      "id": 32145,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[1] CameraControl CameraId",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1"
          ],
          "type": "Literal"
        }
      },
      "id": 32379,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[1] CameraControl CameraId",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: 1; [2]: 2; [3]: 2; [4]: 2; ",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "type": "Literal"
        }
      },
      "id": 32656,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[1] CameraControl CameraId",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "type": "Literal"
        }
      },
      "id": 32685,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[1] CameraControl CameraId",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether the camera that is connected to this video input connector can be controlled or not. Note that camera control is not available for Connector 2 (USB-C) and Connector 3 (HDMI).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 31881,
      "normPath": "Video Input Connector CameraControl Mode",
      "path": "Video Input Connector[1] CameraControl Mode",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: On; [2]: On; [3]: Off; [4]: On; [5]: Off; [6]: On; [7]: Off; [8]: On; [9]: Off; [10]: On; [11]: Off; [12]: On; [13]: Off; ",
        "description": "Define whether the camera that is connected to this video input connector can be controlled or not.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32146,
      "normPath": "Video Input Connector CameraControl Mode",
      "path": "Video Input Connector[1] CameraControl Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether the camera that is connected to this video input connector can be controlled or not.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32657,
      "normPath": "Video Input Connector CameraControl Mode",
      "path": "Video Input Connector[1] CameraControl Mode",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video input (HDMI) supports Consumer Electronics Control (CEC). When this setting is enabled, information about the connected device (for example device type and device name) is available in the video conferencing device status (Video Input Connector[n] ConnectedDevice CEC [n]), provided that the connected device also supports CEC. If you have Cisco Quad Camera, do not switch off CEC on that connector because then there will be no sound on the speakers on the camera. CEC is required for HDMI ARC (Audio Return Channel), which is the channel used for sending audio from the video conferencing device to the camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32144,
      "normPath": "Video Input Connector CEC Mode",
      "path": "Video Input Connector[1] CEC Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video input (HDMI) supports Consumer Electronics Control (CEC). When this setting is enabled, information about the connected device (for example device type and device name) is available in the video conferencing device status (Video Input Connector[n] ConnectedDevice CEC [n]), provided that the connected device also supports CEC.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32684,
      "normPath": "Video Input Connector CEC Mode",
      "path": "Video Input Connector[1] CEC Mode",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screens that are connected to output connector 1 and 2. The screens must support HDCP.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32147,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[1] HDCP Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screens that are connected to output connector 1 and 2. The screens must support HDCP, which is the case for integrated screens.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32348,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[1] HDCP Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screen that is connected to output connector 1. The screen must support HDCP.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32658,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[1] HDCP Mode",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screen that is connected to output connector 1.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32686,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[1] HDCP Mode",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "camera",
        "description": "Select which type of input source is connected to the video input. Note that Connector 1 is the device's integrated camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "camera"
          ],
          "type": "Literal"
        }
      },
      "id": 31882,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[1] InputSourceType",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: camera; [2]: camera; [3]: PC; [4]: camera; [5]: PC; [6]: camera; [7]: PC; [8]: camera; [9]: PC; [10]: camera; [11]: PC; [12]: camera; [13]: PC; ",
        "description": "Select which type of input source is connected to the video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32148,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[1] InputSourceType",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "camera",
        "description": "Select which type of input source is connected to the video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32659,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[1] InputSourceType",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "camera",
        "description": "Select which type of input source is connected to the video input. The integrated camera is connected to Connector 1.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32687,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[1] InputSourceType",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "camera",
        "description": "Select which type of input source is connected to the video input. Note that Connector 1 is the device's integrated camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "camera"
          ],
          "type": "Literal"
        }
      },
      "id": 34040,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[1] InputSourceType",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Camera",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 31883,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[1] Name",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: Camera 1; [2]: Camera 2; [3]: PC 1 (HDMI); [4]: Camera 2; [5]: PC 1 (HDMI); [6]: Camera 2; [7]: PC 1 (HDMI); [8]: Camera 2; [9]: PC 1 (HDMI); [10]: Camera 2; [11]: PC 1 (HDMI); [12]: Camera 2; [13]: PC 1 (HDMI); ",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32149,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[1] Name",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1920_1080_60",
        "description": "Define the preferred screen resolution and refresh rate that the video conferencing device advertises to the input sources that are connected via HDMI (for example a laptop). The logic for selection of the resolution on the source side will choose this resolution and refresh rate automatically, unless it is overridden manually by the source device (for example the laptop's display configuration software). Note that larger formats than 1920_1080_60 use much more data, and requires a presentation cable (or adapter) that is qualified for at least HDMI 1.4b data rates.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_60"
          ],
          "type": "Literal"
        }
      },
      "id": 33958,
      "normPath": "Video Input Connector PreferredResolution",
      "path": "Video Input Connector[1] PreferredResolution",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Manual",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. In general, any input source can be used as a presentation source; normally, the main camera will not be used as a presentation source. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 32153,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[1] PresentationSelection",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Motion",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Quad Camera, SpeakerTrack 60 camera, or Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 33959,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[1] Quality",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Motion",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 34088,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[1] Quality",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The devices connected to the video input should follow the rules for RGB video quantization range defined in CTA-861. Unfortunately some devices do not follow the standard and this configuration may be used to override the settings to get a perfect image with any source.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Full",
            "Limited"
          ],
          "type": "Literal"
        }
      },
      "id": 33960,
      "normPath": "Video Input Connector RGBQuantizationRange",
      "path": "Video Input Connector[1] RGBQuantizationRange",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Never",
        "description": "Define the visibility of the video input connector in the menus on the user interface. Note that Connector 1 is the device's integrated camera, which is not available as a presentation source.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 31885,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[1] Visibility",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: Never; [2]: IfSignal; [3]: IfSignal; [4]: IfSignal; [5]: IfSignal; [6]: IfSignal; [7]: IfSignal; ",
        "description": "Define the visibility of the video input connector in the menus on the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32156,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[1] Visibility",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Never",
        "description": "Define the visibility of the video input connector in the menus on the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32358,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[1] Visibility",
      "products": [
        "barents_70i",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Never",
        "description": "Define the visibility of the video input connector in the menus on the user interface. Note that Connector 1 is the device's integrated camera, which is not available as a presentation source.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 34041,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[1] Visibility",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1"
          ],
          "type": "Literal"
        }
      },
      "id": 31886,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[2] CameraControl CameraId",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "2",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input. Use the xStatus Camera API command to see the IDs of the different cameras.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "type": "Literal"
        }
      },
      "id": 32158,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[2] CameraControl CameraId",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1"
          ],
          "type": "Literal"
        }
      },
      "id": 32385,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[2] CameraControl CameraId",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "2",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "type": "Literal"
        }
      },
      "id": 32660,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[2] CameraControl CameraId",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define whether the camera that is connected to this video input connector can be controlled or not. Note that camera control is not available for Connector 2 (USB-C) and Connector 3 (HDMI).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 31887,
      "normPath": "Video Input Connector CameraControl Mode",
      "path": "Video Input Connector[2] CameraControl Mode",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether the camera that is connected to this video input connector can be controlled or not.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32159,
      "normPath": "Video Input Connector CameraControl Mode",
      "path": "Video Input Connector[2] CameraControl Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video input (HDMI) supports Consumer Electronics Control (CEC). When this setting is enabled, information about the connected device (for example device type and device name) is available in the video conferencing device status (Video Input Connector[n] ConnectedDevice CEC [n]), provided that the connected device also supports CEC. If you have Cisco Quad Camera, do not switch off CEC on that connector because then there will be no sound on the speakers on the camera. CEC is required for HDMI ARC (Audio Return Channel), which is the channel used for sending audio from the video conferencing device to the camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32157,
      "normPath": "Video Input Connector CEC Mode",
      "path": "Video Input Connector[2] CEC Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video input (HDMI) supports Consumer Electronics Control (CEC). When this setting is enabled, information about the connected device (for example device type and device name) is available in the video conferencing device status (Video Input Connector[n] ConnectedDevice CEC [n]), provided that the connected device also supports CEC.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32402,
      "normPath": "Video Input Connector CEC Mode",
      "path": "Video Input Connector[2] CEC Mode",
      "products": [
        "havella",
        "hopen",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video input (HDMI) supports Consumer Electronics Control (CEC). When this setting is enabled, information about the connected device (for example device type and device name) is available in the video conferencing device status (Video Input Connector[n] ConnectedDevice CEC [n]), provided that the connected device also supports CEC.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33819,
      "normPath": "Video Input Connector CEC Mode",
      "path": "Video Input Connector[2] CEC Mode",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screens that are connected to output connector 1 and 2. The screens must support HDCP.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32160,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[2] HDCP Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screens that are connected to output connector 1 and 2. The screens must support HDCP, which is the case for integrated screens.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32349,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[2] HDCP Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screen that is connected to output connector 1. The screen must support HDCP.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32661,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[2] HDCP Mode",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screen that is connected to output connector 1.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32688,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[2] HDCP Mode",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the integrated screen.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 34072,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[2] HDCP Mode",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC",
        "description": "Select which type of input source is connected to the video input. Note that Connector 1 is the device's integrated camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 31888,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[2] InputSourceType",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "camera",
        "description": "Select which type of input source is connected to the video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32161,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[2] InputSourceType",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC",
        "description": "Select which type of input source is connected to the video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32662,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[2] InputSourceType",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC",
        "description": "Select which type of input source is connected to the video input. The integrated camera is connected to Connector 1.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32689,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[2] InputSourceType",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC",
        "description": "Select which type of input source is connected to the video input. Note that Connector 1 is the device's integrated camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 34042,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[2] InputSourceType",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 31889,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[2] Name",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Camera 2",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32162,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[2] Name",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC 1 (HDMI)",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32663,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[2] Name",
      "products": [
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC (USB-C)",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 34566,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[2] Name",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1920_1080_60",
        "description": "Define the preferred screen resolution and refresh rate that the video conferencing device advertises to the input sources that are connected via HDMI (for example a laptop). The logic for selection of the resolution on the source side will choose this resolution and refresh rate automatically, unless it is overridden manually by the source device (for example the laptop's display configuration software). Note that larger formats than 1920_1080_60 use much more data, and requires a presentation cable (or adapter) that is qualified for at least HDMI 1.4b data rates.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_60",
            "2560_1440_60",
            "3840_2160_30"
          ],
          "type": "Literal"
        }
      },
      "id": 33821,
      "normPath": "Video Input Connector PreferredResolution",
      "path": "Video Input Connector[2] PreferredResolution",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1920_1080_60",
        "description": "Define the preferred screen resolution and refresh rate that the video conferencing device advertises to the input sources that are connected via HDMI (for example a laptop). The logic for selection of the resolution on the source side will choose this resolution and refresh rate automatically, unless it is overridden manually by the source device (for example the laptop's display configuration software). Note that larger formats than 1920_1080_60 use much more data, and requires a presentation cable (or adapter) that is qualified for at least HDMI 1.4b data rates.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_60"
          ],
          "type": "Literal"
        }
      },
      "id": 33961,
      "normPath": "Video Input Connector PreferredResolution",
      "path": "Video Input Connector[2] PreferredResolution",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "octavio"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "3840_2160_60",
        "description": "Define the preferred screen resolution and refresh rate that the video conferencing device advertises to the input sources that are connected via HDMI (for example a laptop). The logic for selection of the resolution on the source side will choose this resolution and refresh rate automatically, unless it is overridden manually by the source device (for example the laptop's display configuration software). Note that larger formats than 1920_1080_60 use much more data, and requires a presentation cable (or adapter) that is qualified for at least HDMI 1.4b data rates.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_60",
            "2560_1440_60",
            "3840_2160_30",
            "3840_2160_60"
          ],
          "type": "Literal"
        }
      },
      "id": 34069,
      "normPath": "Video Input Connector PreferredResolution",
      "path": "Video Input Connector[2] PreferredResolution",
      "products": [
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Manual",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. In general, any input source can be used as a presentation source; normally, the main camera will not be used as a presentation source. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 32166,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[2] PresentationSelection",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "AutoShare",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 32373,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[2] PresentationSelection",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Desktop",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 32618,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[2] PresentationSelection",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "OnConnect",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. In general, any input source can be used as a presentation source; normally, the main camera will not be used as a presentation source. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 32664,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[2] PresentationSelection",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "OnConnect",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 34043,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[2] PresentationSelection",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Sharpness",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 31892,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[2] Quality",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Sharpness",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 32391,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[2] Quality",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Motion",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Quad Camera, SpeakerTrack 60 camera, or Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 33962,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[2] Quality",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Sharpness",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Quad Camera, SpeakerTrack 60 camera, or Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 34085,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[2] Quality",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Sharpness",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 34089,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[2] Quality",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The devices connected to the video input should follow the rules for RGB video quantization range defined in CTA-861. Unfortunately some devices do not follow the standard and this configuration may be used to override the settings to get a perfect image with any source.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Full",
            "Limited"
          ],
          "type": "Literal"
        }
      },
      "id": 33822,
      "normPath": "Video Input Connector RGBQuantizationRange",
      "path": "Video Input Connector[2] RGBQuantizationRange",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "IfSignal",
        "description": "Define the visibility of the video input connector in the menus on the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32168,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[2] Visibility",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Never",
        "description": "Define the visibility of the video input connector in the menus on the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32359,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[2] Visibility",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "IfSignal",
        "description": "Define the visibility of the video input connector in the menus on the user interface. Note that Connector 1 is the device's integrated camera, which is not available as a presentation source.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32374,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[2] Visibility",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Always",
        "description": "Define the visibility of the video input connector in the menus on the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32666,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[2] Visibility",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Always",
        "description": "Define the visibility of the video input connector in the menus on the user interface. Note that Connector 1 is the device's integrated camera, which is not available as a presentation source.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 34044,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[2] Visibility",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "3",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input. Use the xStatus Camera API command to see the IDs of the different cameras.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "type": "Literal"
        }
      },
      "id": 32170,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[3] CameraControl CameraId",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1"
          ],
          "type": "Literal"
        }
      },
      "id": 32446,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[3] CameraControl CameraId",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1"
          ],
          "type": "Literal"
        }
      },
      "id": 32619,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[3] CameraControl CameraId",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "3",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "type": "Literal"
        }
      },
      "id": 32667,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[3] CameraControl CameraId",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define whether the camera that is connected to this video input connector can be controlled or not.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32171,
      "normPath": "Video Input Connector CameraControl Mode",
      "path": "Video Input Connector[3] CameraControl Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define whether the camera that is connected to this video input connector can be controlled or not. Note that camera control is not available for Connector 2 (USB-C) and Connector 3 (HDMI).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32620,
      "normPath": "Video Input Connector CameraControl Mode",
      "path": "Video Input Connector[3] CameraControl Mode",
      "products": [
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Define whether the camera that is connected to this video input connector can be controlled or not.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32668,
      "normPath": "Video Input Connector CameraControl Mode",
      "path": "Video Input Connector[3] CameraControl Mode",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video input (HDMI) supports Consumer Electronics Control (CEC). When this setting is enabled, information about the connected device (for example device type and device name) is available in the video conferencing device status (Video Input Connector[n] ConnectedDevice CEC [n]), provided that the connected device also supports CEC. If you have Cisco Quad Camera, do not switch off CEC on that connector because then there will be no sound on the speakers on the camera. CEC is required for HDMI ARC (Audio Return Channel), which is the channel used for sending audio from the video conferencing device to the camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32169,
      "normPath": "Video Input Connector CEC Mode",
      "path": "Video Input Connector[3] CEC Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video input (HDMI) supports Consumer Electronics Control (CEC). When this setting is enabled, information about the connected device (for example device type and device name) is available in the video conferencing device status (Video Input Connector[n] ConnectedDevice CEC [n]), provided that the connected device also supports CEC.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32632,
      "normPath": "Video Input Connector CEC Mode",
      "path": "Video Input Connector[3] CEC Mode",
      "products": [
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video input (HDMI) supports Consumer Electronics Control (CEC). When this setting is enabled, information about the connected device (for example device type and device name) is available in the video conferencing device status (Video Input Connector[n] ConnectedDevice CEC [n]), provided that the connected device also supports CEC.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 34062,
      "normPath": "Video Input Connector CEC Mode",
      "path": "Video Input Connector[3] CEC Mode",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screens that are connected to output connector 1 and 2. The screens must support HDCP.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32172,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[3] HDCP Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screens that are connected to output connector 1 and 2. The screens must support HDCP, which is the case for integrated screens.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32350,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[3] HDCP Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screen that is connected to output connector 1. The screen must support HDCP.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32669,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[3] HDCP Mode",
      "products": [
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screen that is connected to output connector 1.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32691,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[3] HDCP Mode",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the integrated screen.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 34073,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[3] HDCP Mode",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC",
        "description": "Select which type of input source is connected to the video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32173,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[3] InputSourceType",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC",
        "description": "Select which type of input source is connected to the video input. Note that Connector 1 is the device's integrated camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32621,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[3] InputSourceType",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC",
        "description": "Select which type of input source is connected to the video input. The integrated camera is connected to Connector 1.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32692,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[3] InputSourceType",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC",
        "description": "Select which type of input source is connected to the video input. Note that Connector 1 is the device's integrated camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 34074,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[3] InputSourceType",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC 1 (HDMI)",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32174,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[3] Name",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC (HDMI)",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32574,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[3] Name",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC 2 (HDMI)",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32670,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[3] Name",
      "products": [
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1920_1080_60",
        "description": "Define the preferred screen resolution and refresh rate that the video conferencing device advertises to the input sources that are connected via HDMI (for example a laptop). The logic for selection of the resolution on the source side will choose this resolution and refresh rate automatically, unless it is overridden manually by the source device (for example the laptop's display configuration software). Note that larger formats than 1920_1080_60 use much more data, and requires a presentation cable (or adapter) that is qualified for at least HDMI 1.4b data rates.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_60",
            "2560_1440_60",
            "3840_2160_30"
          ],
          "type": "Literal"
        }
      },
      "id": 33964,
      "normPath": "Video Input Connector PreferredResolution",
      "path": "Video Input Connector[3] PreferredResolution",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1920_1080_60",
        "description": "Define the preferred screen resolution and refresh rate that the video conferencing device advertises to the input sources that are connected via HDMI (for example a laptop). The logic for selection of the resolution on the source side will choose this resolution and refresh rate automatically, unless it is overridden manually by the source device (for example the laptop's display configuration software). Note that larger formats than 1920_1080_60 use much more data, and requires a presentation cable (or adapter) that is qualified for at least HDMI 1.4b data rates.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_60"
          ],
          "type": "Literal"
        }
      },
      "id": 34064,
      "normPath": "Video Input Connector PreferredResolution",
      "path": "Video Input Connector[3] PreferredResolution",
      "products": [
        "octavio"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "3840_2160_60",
        "description": "Define the preferred screen resolution and refresh rate that the video conferencing device advertises to the input sources that are connected via HDMI (for example a laptop). The logic for selection of the resolution on the source side will choose this resolution and refresh rate automatically, unless it is overridden manually by the source device (for example the laptop's display configuration software). Note that larger formats than 1920_1080_60 use much more data, and requires a presentation cable (or adapter) that is qualified for at least HDMI 1.4b data rates.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_60",
            "2560_1440_60",
            "3840_2160_30",
            "3840_2160_60"
          ],
          "type": "Literal"
        }
      },
      "id": 34070,
      "normPath": "Video Input Connector PreferredResolution",
      "path": "Video Input Connector[3] PreferredResolution",
      "products": [
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "OnConnect",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. In general, any input source can be used as a presentation source; normally, the main camera will not be used as a presentation source. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 32178,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[3] PresentationSelection",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Desktop",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 32623,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[3] PresentationSelection",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "OnConnect",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 34075,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[3] PresentationSelection",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Sharpness",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 32452,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[3] Quality",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Sharpness",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 32624,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[3] Quality",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Sharpness",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Quad Camera, SpeakerTrack 60 camera, or Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 33965,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[3] Quality",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Sharpness",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 34090,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[3] Quality",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The devices connected to the video input should follow the rules for RGB video quantization range defined in CTA-861. Unfortunately some devices do not follow the standard and this configuration may be used to override the settings to get a perfect image with any source.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Full",
            "Limited"
          ],
          "type": "Literal"
        }
      },
      "id": 33966,
      "normPath": "Video Input Connector RGBQuantizationRange",
      "path": "Video Input Connector[3] RGBQuantizationRange",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "IfSignal",
        "description": "Define the visibility of the video input connector in the menus on the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32181,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[3] Visibility",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "IfSignal",
        "description": "Define the visibility of the video input connector in the menus on the user interface. Note that Connector 1 is the device's integrated camera, which is not available as a presentation source.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32625,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[3] Visibility",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Always",
        "description": "Define the visibility of the video input connector in the menus on the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32671,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[3] Visibility",
      "products": [
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Always",
        "description": "Define the visibility of the video input connector in the menus on the user interface. Note that Connector 1 is the device's integrated camera, which is not available as a presentation source.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 34076,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[3] Visibility",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "4",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input. Use the xStatus Camera API command to see the IDs of the different cameras.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "type": "Literal"
        }
      },
      "id": 32183,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[4] CameraControl CameraId",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define whether the camera that is connected to this video input connector can be controlled or not.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32184,
      "normPath": "Video Input Connector CameraControl Mode",
      "path": "Video Input Connector[4] CameraControl Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video input (HDMI) supports Consumer Electronics Control (CEC). When this setting is enabled, information about the connected device (for example device type and device name) is available in the video conferencing device status (Video Input Connector[n] ConnectedDevice CEC [n]), provided that the connected device also supports CEC. If you have Cisco Quad Camera, do not switch off CEC on that connector because then there will be no sound on the speakers on the camera. CEC is required for HDMI ARC (Audio Return Channel), which is the channel used for sending audio from the video conferencing device to the camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32182,
      "normPath": "Video Input Connector CEC Mode",
      "path": "Video Input Connector[4] CEC Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screens that are connected to output connector 1 and 2. The screens must support HDCP.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32185,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[4] HDCP Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screens that are connected to output connector 1 and 2. The screens must support HDCP, which is the case for integrated screens.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32351,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[4] HDCP Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC",
        "description": "Select which type of input source is connected to the video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32186,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[4] InputSourceType",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC 2 (HDMI)",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32187,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[4] Name",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1920_1080_60",
        "description": "Define the preferred screen resolution and refresh rate that the video conferencing device advertises to the input sources that are connected via HDMI (for example a laptop). The logic for selection of the resolution on the source side will choose this resolution and refresh rate automatically, unless it is overridden manually by the source device (for example the laptop's display configuration software). Note that larger formats than 1920_1080_60 use much more data, and requires a presentation cable (or adapter) that is qualified for at least HDMI 1.4b data rates.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_60",
            "2560_1440_60",
            "3840_2160_30"
          ],
          "type": "Literal"
        }
      },
      "id": 33968,
      "normPath": "Video Input Connector PreferredResolution",
      "path": "Video Input Connector[4] PreferredResolution",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "OnConnect",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. In general, any input source can be used as a presentation source; normally, the main camera will not be used as a presentation source. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 32191,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[4] PresentationSelection",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Sharpness",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Quad Camera, SpeakerTrack 60 camera, or Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 33969,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[4] Quality",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The devices connected to the video input should follow the rules for RGB video quantization range defined in CTA-861. Unfortunately some devices do not follow the standard and this configuration may be used to override the settings to get a perfect image with any source.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Full",
            "Limited"
          ],
          "type": "Literal"
        }
      },
      "id": 33970,
      "normPath": "Video Input Connector RGBQuantizationRange",
      "path": "Video Input Connector[4] RGBQuantizationRange",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "IfSignal",
        "description": "Define the visibility of the video input connector in the menus on the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32194,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[4] Visibility",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "5",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input. Use the xStatus Camera API command to see the IDs of the different cameras.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "type": "Literal"
        }
      },
      "id": 32196,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[5] CameraControl CameraId",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define whether the camera that is connected to this video input connector can be controlled or not.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32197,
      "normPath": "Video Input Connector CameraControl Mode",
      "path": "Video Input Connector[5] CameraControl Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "The video input (HDMI) supports Consumer Electronics Control (CEC). When this setting is enabled, information about the connected device (for example device type and device name) is available in the video conferencing device status (Video Input Connector[n] ConnectedDevice CEC [n]), provided that the connected device also supports CEC. If you have Cisco Quad Camera, do not switch off CEC on that connector because then there will be no sound on the speakers on the camera. CEC is required for HDMI ARC (Audio Return Channel), which is the channel used for sending audio from the video conferencing device to the camera.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32195,
      "normPath": "Video Input Connector CEC Mode",
      "path": "Video Input Connector[5] CEC Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screens that are connected to output connector 1 and 2. The screens must support HDCP.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32198,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[5] HDCP Mode",
      "products": [
        "barents"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "One of the video conferencing device's HDMI inputs can be configured to support HDCP protected content (High-bandwidth Digital Content Protection, version 1.4). This allows customers to re-purpose a video conferencing device's screen by connecting devices such as a Google ChromeCast, an AppleTV, or an HDTV decoder. This type of content cannot be shared while in a call. When the input connector is configured to support HDCP, it is reserved for this type of content. This means that you can't share any content from this specific connector while in a call, regardless of what is connected, nor can you take web snapshots of this source. HDCP protected content is displayed on the screens that are connected to output connector 1 and 2. The screens must support HDCP, which is the case for integrated screens.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32352,
      "normPath": "Video Input Connector HDCP Mode",
      "path": "Video Input Connector[5] HDCP Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC",
        "description": "Select which type of input source is connected to the video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32199,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[5] InputSourceType",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PC 3 (HDMI)",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32200,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[5] Name",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1920_1080_60",
        "description": "Define the preferred screen resolution and refresh rate that the video conferencing device advertises to the input sources that are connected via HDMI (for example a laptop). The logic for selection of the resolution on the source side will choose this resolution and refresh rate automatically, unless it is overridden manually by the source device (for example the laptop's display configuration software). Note that larger formats than 1920_1080_60 use much more data, and requires a presentation cable (or adapter) that is qualified for at least HDMI 1.4b data rates.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_60",
            "2560_1440_60",
            "3840_2160_30"
          ],
          "type": "Literal"
        }
      },
      "id": 33972,
      "normPath": "Video Input Connector PreferredResolution",
      "path": "Video Input Connector[5] PreferredResolution",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "OnConnect",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. In general, any input source can be used as a presentation source; normally, the main camera will not be used as a presentation source. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 32204,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[5] PresentationSelection",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Sharpness",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Quad Camera, SpeakerTrack 60 camera, or Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 33973,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[5] Quality",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The devices connected to the video input should follow the rules for RGB video quantization range defined in CTA-861. Unfortunately some devices do not follow the standard and this configuration may be used to override the settings to get a perfect image with any source.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Full",
            "Limited"
          ],
          "type": "Literal"
        }
      },
      "id": 33974,
      "normPath": "Video Input Connector RGBQuantizationRange",
      "path": "Video Input Connector[5] RGBQuantizationRange",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "IfSignal",
        "description": "Define the visibility of the video input connector in the menus on the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32207,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[5] Visibility",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "6",
        "description": "The camera ID is a unique identifier of the camera that is connected to this video input. Use the xStatus Camera API command to see the IDs of the different cameras.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ],
          "type": "Literal"
        }
      },
      "id": 32208,
      "normPath": "Video Input Connector CameraControl CameraId",
      "path": "Video Input Connector[6] CameraControl CameraId",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "Define whether the camera that is connected to this video input connector can be controlled or not.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32209,
      "normPath": "Video Input Connector CameraControl Mode",
      "path": "Video Input Connector[6] CameraControl Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "camera",
        "description": "Select which type of input source is connected to the video input.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "PC",
            "camera",
            "document_camera",
            "mediaplayer",
            "other",
            "whiteboard"
          ],
          "type": "Literal"
        }
      },
      "id": 32210,
      "normPath": "Video Input Connector InputSourceType",
      "path": "Video Input Connector[6] InputSourceType",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Camera 3 (SDI)",
        "description": "Define a name for the video input connector.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "50",
          "MinLength": "0",
          "type": "String"
        }
      },
      "id": 32211,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[6] Name",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Manual",
        "description": "Define how the video conferencing device will behave when you connect a presentation source to the video input. In general, any input source can be used as a presentation source; normally, the main camera will not be used as a presentation source. If the device is in standby mode, it will wake up when you connect a presentation source. Sharing the presentation with the far end requires additional action (select Share on the user interface) except when this setting is set to AutoShare.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "AutoShare",
            "Desktop",
            "Manual",
            "OnConnect"
          ],
          "type": "Literal"
        }
      },
      "id": 32214,
      "normPath": "Video Input Connector PresentationSelection",
      "path": "Video Input Connector[6] PresentationSelection",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Motion",
        "description": "When encoding and transmitting video there is a trade-off between high resolution and high frame rate. For some video sources it is more important to transmit high frame rate than high resolution and vice versa. This setting specifies whether to give priority to high frame rate or to high resolution. If a Quad Camera, SpeakerTrack 60 camera, or Precision 60 camera is detected by the device this setting is automatically set to Motion. If a user changes this setting manually, it will be set back to Motion after a restart or a camera reconnect.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Motion",
            "Sharpness"
          ],
          "type": "Literal"
        }
      },
      "id": 33976,
      "normPath": "Video Input Connector Quality",
      "path": "Video Input Connector[6] Quality",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "IfSignal",
        "description": "Define the visibility of the video input connector in the menus on the user interface.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Always",
            "IfSignal",
            "Never"
          ],
          "type": "Literal"
        }
      },
      "id": 32216,
      "normPath": "Video Input Connector Visibility",
      "path": "Video Input Connector[6] Visibility",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "A monitor role is assigned to each screen using the Video Output Connector [n] MonitorRole setting. The monitor role decides which layout (call participants and presentation) will appear on the screen that is connected to this output. Screens with the same monitor role will get the same layout; screens with different monitor roles will have different layouts. The monitor layout mode that is set in the Video Monitors setting should reflect the number of different layouts you want in your room setup. Note that some screens can be reserved for presentations.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Dual",
            "DualPresentationOnly",
            "Single",
            "Triple",
            "TriplePresentationOnly"
          ],
          "type": "Literal"
        }
      },
      "id": 28582,
      "normPath": "Video Monitors",
      "path": "Video Monitors",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "A monitor role is assigned to each screen using the Video Output Connector [n] MonitorRole setting. The monitor role decides which layout (call participants and presentation) will appear on the screen that is connected to this output. Screens with the same monitor role will get the same layout; screens with different monitor roles will have different layouts. The monitor layout mode that is set in the Video Monitors setting should reflect the number of different layouts you want in your room setup. Note that some screens can be reserved for presentations.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Dual",
            "DualPresentationOnly",
            "Single"
          ],
          "type": "Literal"
        }
      },
      "id": 28983,
      "normPath": "Video Monitors",
      "path": "Video Monitors",
      "products": [
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Dual",
            "DualPresentationOnly",
            "Single"
          ],
          "type": "Literal"
        },
        "description": "A monitor role is assigned to each screen using the Video Output Connector [n] MonitorRole setting. The monitor role decides which layout (call participants and presentation) will appear on the screen that is connected to this output. Screens with the same monitor role will get the same layout; screens with different monitor roles will have different layouts. The monitor layout mode that is set in the Video Monitors setting should reflect the number of different layouts you want in your room setup. Note that some screens can be reserved for presentations."
      },
      "id": 29285,
      "normPath": "Video Monitors",
      "path": "Video Monitors",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "A monitor role is assigned to each screen using the Video Output Connector [n] MonitorRole setting. The monitor role decides which layout (call participants and presentation) will appear on the screen that is connected to this output. Screens with the same monitor role will get the same layout; screens with different monitor roles will have different layouts. The monitor layout mode that is set in the Video Monitors setting should reflect the number of different layouts you want in your room setup. Note that some screens can be reserved for presentations.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "TriplePresentationOnly"
          ],
          "type": "Literal"
        }
      },
      "id": 29874,
      "normPath": "Video Monitors",
      "path": "Video Monitors",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32423,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[1..2] CEC Mode",
      "products": [
        "hopen",
        "svea"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: 0; [2]: 1; ",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 34056,
      "normPath": "Video Output Connector Location HorizontalOffset",
      "path": "Video Output Connector[1..2] Location HorizontalOffset",
      "products": [
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 34057,
      "normPath": "Video Output Connector Location VerticalOffset",
      "path": "Video Output Connector[1..2] Location VerticalOffset",
      "products": [
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The monitor role describes which video streams will be shown on the screen connected to this video output. Together the Video Monitors setting and the MonitorRole settings for all outputs define which layout (video streams) will be shown on each screen.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "First",
            "PresentationOnly",
            "Second"
          ],
          "type": "Literal"
        }
      },
      "id": 32426,
      "normPath": "Video Output Connector MonitorRole",
      "path": "Video Output Connector[1..2] MonitorRole",
      "products": [
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the resolution and refresh rate for the connected screen. The formats larger than 1920_1200_60 requires use of high quality display cables. For guaranteed operation, use display cables that are pre-qualified from Cisco for use at 3840_2160_60, or use a cable that has passed the \"Premium HDMI certification\" program. Some UHD TVs/displays only enable 3840_2160_30 (30 Hz) and not 3840_2160_60 (60 Hz) as their default configuration. In such cases the corresponding setting on the TV/display must be reconfigured to allow 3840_2160_60 for the HDMI input where the device is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_50",
            "1920_1080_60",
            "1920_1200_50",
            "1920_1200_60",
            "2560_1440_60",
            "3840_2160_30",
            "3840_2160_60",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 32428,
      "normPath": "Video Output Connector Resolution",
      "path": "Video Output Connector[1..2] Resolution",
      "products": [
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Full",
        "description": "Displays connected to an HDMI output should follow the rules for RGB video quantization range defined in CTA-861. Unfortunately some displays do not follow the standard and this configuration may be used to override the settings to get a perfect image with any display. Most HDMI displays expect full quantization range.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Full",
            "Limited"
          ],
          "type": "Literal"
        }
      },
      "id": 34058,
      "normPath": "Video Output Connector RGBQuantizationRange",
      "path": "Video Output Connector[1..2] RGBQuantizationRange",
      "products": [
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 29802,
      "normPath": "Video Output Connector BrightnessMode",
      "path": "Video Output Connector[1] BrightnessMode",
      "products": [
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32217,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[1] CEC Mode",
      "products": [
        "barents",
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32353,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[1] CEC Mode",
      "products": [
        "barents_70d",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: Off; [2]: Off; [3]: On; [4]: Off; [5]: On; [6]: Off; [7]: On; ",
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32360,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[1] CEC Mode",
      "products": [
        "barents_70i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32370,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[1] CEC Mode",
      "products": [
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: 0; [2]: 1; [3]: 0.5; [4]: 1; [5]: 0.5; [6]: 1; [7]: 0.5; ",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 34009,
      "normPath": "Video Output Connector Location HorizontalOffset",
      "path": "Video Output Connector[1] Location HorizontalOffset",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 34091,
      "normPath": "Video Output Connector Location HorizontalOffset",
      "path": "Video Output Connector[1] Location HorizontalOffset",
      "products": [
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: -1; [2]: 0; [3]: 1; [4]: 0; [5]: 1; [6]: 0; [7]: 1; ",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 34562,
      "normPath": "Video Output Connector Location HorizontalOffset",
      "path": "Video Output Connector[1] Location HorizontalOffset",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 33978,
      "normPath": "Video Output Connector Location VerticalOffset",
      "path": "Video Output Connector[1] Location VerticalOffset",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: 0; [2]: 0; [3]: -1; [4]: 0; [5]: -1; [6]: 0; [7]: -1; ",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 34563,
      "normPath": "Video Output Connector Location VerticalOffset",
      "path": "Video Output Connector[1] Location VerticalOffset",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The monitor role describes which video streams will be shown on the screen connected to this video output. Together the Video Monitors setting and the MonitorRole settings for all outputs define which layout (video streams) will be shown on each screen.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "First",
            "PresentationOnly",
            "Recorder",
            "Second",
            "Third"
          ],
          "type": "Literal"
        }
      },
      "id": 32220,
      "normPath": "Video Output Connector MonitorRole",
      "path": "Video Output Connector[1] MonitorRole",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Not applicable.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "First",
            "PresentationOnly",
            "Second"
          ],
          "type": "Literal"
        }
      },
      "id": 32406,
      "normPath": "Video Output Connector MonitorRole",
      "path": "Video Output Connector[1] MonitorRole",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The monitor role describes which video streams will be shown on the screen connected to this video output. Together the Video Monitors setting and the MonitorRole settings for all outputs define which layout (video streams) will be shown on each screen.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "First",
            "PresentationOnly",
            "Second"
          ],
          "type": "Literal"
        }
      },
      "id": 32694,
      "normPath": "Video Output Connector MonitorRole",
      "path": "Video Output Connector[1] MonitorRole",
      "products": [
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the resolution and refresh rate for the connected screen. The formats larger than 1920_1200_60 requires use of high quality display cables. For guaranteed operation, use display cables that are pre-qualified from Cisco for use at 3840_2160_60, or use a cable that has passed the \"Premium HDMI certification\" program. Some UHD TVs/displays only enable 3840_2160_30 (30 Hz) and not 3840_2160_60 (60 Hz) as their default configuration. In such cases the corresponding setting on the TV/display must be reconfigured to allow 3840_2160_60 for the HDMI input where the device is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_50",
            "1920_1080_60",
            "1920_1200_50",
            "1920_1200_60",
            "2560_1440_60",
            "3840_2160_30",
            "3840_2160_60",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 32222,
      "normPath": "Video Output Connector Resolution",
      "path": "Video Output Connector[1] Resolution",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s",
        "havella",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "[1]: Auto; [2]: Auto; [3]: 3840_2160_30; [4]: Auto; [5]: 3840_2160_30; [6]: Auto; [7]: 3840_2160_30; ",
        "description": "Define the resolution and refresh rate for the connected screen. The formats larger than 1920_1200_60 requires use of high quality display cables. For guaranteed operation, use display cables that are pre-qualified from Cisco for use at 3840_2160_60, or use a cable that has passed the \"Premium HDMI certification\" program. Some UHD TVs/displays only enable 3840_2160_30 (30 Hz) and not 3840_2160_60 (60 Hz) as their default configuration. In such cases the corresponding setting on the TV/display must be reconfigured to allow 3840_2160_60 for the HDMI input where the device is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_50",
            "1920_1080_60",
            "1920_1200_50",
            "1920_1200_60",
            "2560_1440_60",
            "3840_2160_30",
            "3840_2160_60",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 32363,
      "normPath": "Video Output Connector Resolution",
      "path": "Video Output Connector[1] Resolution",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1920_1080_60",
        "description": "The resolution and refresh rate for the integrated screen. This value is fixed and cannot be changed.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_60"
          ],
          "type": "Literal"
        }
      },
      "id": 32394,
      "normPath": "Video Output Connector Resolution",
      "path": "Video Output Connector[1] Resolution",
      "products": [
        "octavio"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "3840_2160_60",
        "description": "Define the resolution and refresh rate for the connected screen. The formats larger than 1920_1200_60 requires use of high quality display cables. For guaranteed operation, use display cables that are pre-qualified from Cisco for use at 3840_2160_60, or use a cable that has passed the \"Premium HDMI certification\" program. Some UHD TVs/displays only enable 3840_2160_30 (30 Hz) and not 3840_2160_60 (60 Hz) as their default configuration. In such cases the corresponding setting on the TV/display must be reconfigured to allow 3840_2160_60 for the HDMI input where the device is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "3840_2160_60"
          ],
          "type": "Literal"
        }
      },
      "id": 32636,
      "normPath": "Video Output Connector Resolution",
      "path": "Video Output Connector[1] Resolution",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "3840_2160_60",
        "description": "The resolution and refresh rate for the integrated screen. This value is fixed and cannot be changed.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "3840_2160_60"
          ],
          "type": "Literal"
        }
      },
      "id": 34028,
      "normPath": "Video Output Connector Resolution",
      "path": "Video Output Connector[1] Resolution",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Full",
        "description": "Displays connected to an HDMI output should follow the rules for RGB video quantization range defined in CTA-861. Unfortunately some displays do not follow the standard and this configuration may be used to override the settings to get a perfect image with any display. Most HDMI displays expect full quantization range.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Full",
            "Limited"
          ],
          "type": "Literal"
        }
      },
      "id": 33979,
      "normPath": "Video Output Connector RGBQuantizationRange",
      "path": "Video Output Connector[1] RGBQuantizationRange",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        },
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi)."
      },
      "id": 28586,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[2] CEC Mode",
      "products": [
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32223,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[2] CEC Mode",
      "products": [
        "barents",
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32354,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[2] CEC Mode",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32371,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[2] CEC Mode",
      "products": [
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        },
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). The integrated screen has HorizontalOffset = \"0\" and VerticalOffset = \"0\" (implicit, not configurable). Example: You have an extra screen (Connector 2) to the right of the device. Then the following settings will apply: Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have an extra screen (Connector 2) above the device. Then the following settings will apply: Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"1\""
      },
      "id": 29774,
      "normPath": "Video Output Connector Location HorizontalOffset",
      "path": "Video Output Connector[2] Location HorizontalOffset",
      "products": [
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 33980,
      "normPath": "Video Output Connector Location HorizontalOffset",
      "path": "Video Output Connector[2] Location HorizontalOffset",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 34011,
      "normPath": "Video Output Connector Location HorizontalOffset",
      "path": "Video Output Connector[2] Location HorizontalOffset",
      "products": [
        "barents_70i",
        "barents_82i",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). The integrated screen has HorizontalOffset = \"0\" and VerticalOffset = \"0\" (implicit, not configurable). Example: You have an extra screen (Connector 2) to the right of the device. Then the following settings will apply: Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have an extra screen (Connector 2) above the device. Then the following settings will apply: Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 34077,
      "normPath": "Video Output Connector Location HorizontalOffset",
      "path": "Video Output Connector[2] Location HorizontalOffset",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        },
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). The integrated screen has HorizontalOffset = \"0\" and VerticalOffset = \"0\" (implicit, not configurable). Example: You have an extra screen (Connector 2) to the right of the device. Then the following settings will apply: Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have an extra screen (Connector 2) to the above of the device. Then the following settings will apply: Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"1\""
      },
      "id": 29769,
      "normPath": "Video Output Connector Location VerticalOffset",
      "path": "Video Output Connector[2] Location VerticalOffset",
      "products": [
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 33981,
      "normPath": "Video Output Connector Location VerticalOffset",
      "path": "Video Output Connector[2] Location VerticalOffset",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). The integrated screen has HorizontalOffset = \"0\" and VerticalOffset = \"0\" (implicit, not configurable). Example: You have an extra screen (Connector 2) to the right of the device. Then the following settings will apply: Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have an extra screen (Connector 2) to the above of the device. Then the following settings will apply: Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 34078,
      "normPath": "Video Output Connector Location VerticalOffset",
      "path": "Video Output Connector[2] Location VerticalOffset",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "First",
            "PresentationOnly",
            "Second"
          ],
          "type": "Literal"
        },
        "description": "The monitor role describes which video streams will be shown on the screen connected to this video output. Together the Video Monitors setting and the MonitorRole settings for all outputs define which layout (video streams) will be shown on each screen."
      },
      "id": 29286,
      "normPath": "Video Output Connector MonitorRole",
      "path": "Video Output Connector[2] MonitorRole",
      "products": [
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The monitor role describes which video streams will be shown on the screen connected to this video output. Together the Video Monitors setting and the MonitorRole settings for all outputs define which layout (video streams) will be shown on each screen.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "First",
            "PresentationOnly",
            "Recorder",
            "Second",
            "Third"
          ],
          "type": "Literal"
        }
      },
      "id": 32226,
      "normPath": "Video Output Connector MonitorRole",
      "path": "Video Output Connector[2] MonitorRole",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The monitor role describes which video streams will be shown on the screen connected to this video output. Together the Video Monitors setting and the MonitorRole settings for all outputs define which layout (video streams) will be shown on each screen.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "First",
            "PresentationOnly",
            "Second"
          ],
          "type": "Literal"
        }
      },
      "id": 32637,
      "normPath": "Video Output Connector MonitorRole",
      "path": "Video Output Connector[2] MonitorRole",
      "products": [
        "spitsbergen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "PresentationOnly",
        "description": "The monitor role describes which video streams will be shown on the screen connected to this video output. Together the Video Monitors setting and the MonitorRole settings for all outputs define which layout (video streams) will be shown on each screen.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "First",
            "PresentationOnly",
            "Second"
          ],
          "type": "Literal"
        }
      },
      "id": 32695,
      "normPath": "Video Output Connector MonitorRole",
      "path": "Video Output Connector[2] MonitorRole",
      "products": [
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the resolution and refresh rate for the connected screen. The formats larger than 1920_1200_60 requires use of high quality display cables. For guaranteed operation, use display cables that are pre-qualified from Cisco for use at 3840_2160_60, or use a cable that has passed the \"Premium HDMI certification\" program. Some UHD TVs/displays only enable 3840_2160_30 (30 Hz) and not 3840_2160_60 (60 Hz) as their default configuration. In such cases the corresponding setting on the TV/display must be reconfigured to allow 3840_2160_60 for the HDMI input where the device is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_50",
            "1920_1080_60",
            "1920_1200_50",
            "1920_1200_60",
            "2560_1440_60",
            "3840_2160_30",
            "3840_2160_60",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 32228,
      "normPath": "Video Output Connector Resolution",
      "path": "Video Output Connector[2] Resolution",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "spitsbergen",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The resolution and refresh rate for the integrated screen. This value is fixed and cannot be changed.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_50",
            "1920_1080_60",
            "1920_1200_50",
            "1920_1200_60",
            "2560_1440_60",
            "3840_2160_30",
            "3840_2160_60",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 34071,
      "normPath": "Video Output Connector Resolution",
      "path": "Video Output Connector[2] Resolution",
      "products": [
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Full",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Full",
            "Limited"
          ],
          "type": "Literal"
        },
        "description": "Displays connected to an HDMI output should follow the rules for RGB video quantization range defined in CTA-861. Unfortunately some displays do not follow the standard and this configuration may be used to override the settings to get a perfect image with any display. Most HDMI displays expect full quantization range."
      },
      "id": 31327,
      "normPath": "Video Output Connector RGBQuantizationRange",
      "path": "Video Output Connector[2] RGBQuantizationRange",
      "products": [
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Full",
        "description": "Displays connected to an HDMI output should follow the rules for RGB video quantization range defined in CTA-861. Unfortunately some displays do not follow the standard and this configuration may be used to override the settings to get a perfect image with any display. Most HDMI displays expect full quantization range.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Full",
            "Limited"
          ],
          "type": "Literal"
        }
      },
      "id": 33982,
      "normPath": "Video Output Connector RGBQuantizationRange",
      "path": "Video Output Connector[2] RGBQuantizationRange",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "spitsbergen",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32229,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[3] CEC Mode",
      "products": [
        "barents",
        "barents_70i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32355,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[3] CEC Mode",
      "products": [
        "barents_70d",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "This video output (HDMI) supports Consumer Electronics Control (CEC). When this setting is On, the video conferencing device will use CEC to set the screen in standby when the device itself enters standby. Likewise the device will wake up the screen when the device itself wakes up from standby. The active video input on a screen is sometimes changed by a user. When a call is started the device detects if the active video input has been switched to another input on the screen. The device then switches the input back so the device is the active video input source. If the device is not the active input source when the device goes into standby the screen will not be set to standby. It's a prerequisite that the screen that is connected to the output is CEC compatible and that CEC is enabled on the screen. Note that the different manufacturers uses different marketing names for CEC, for example Anynet+ (Samsung); Aquos Link (Sharp); BRAVIA Sync (Sony); HDMI-CEC (Hitachi); Kuro Link (Pioneer); CE-Link and Regza Link (Toshiba); RIHD (Onkyo); HDAVI Control, EZ-Sync, VIERA Link (Panasonic); EasyLink (Philips); and NetCommand for HDMI (Mitsubishi).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 32372,
      "normPath": "Video Output Connector CEC Mode",
      "path": "Video Output Connector[3] CEC Mode",
      "products": [
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "1",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 33983,
      "normPath": "Video Output Connector Location HorizontalOffset",
      "path": "Video Output Connector[3] Location HorizontalOffset",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0.5",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 34012,
      "normPath": "Video Output Connector Location HorizontalOffset",
      "path": "Video Output Connector[3] Location HorizontalOffset",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "0",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 33984,
      "normPath": "Video Output Connector Location VerticalOffset",
      "path": "Video Output Connector[3] Location VerticalOffset",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "-1",
        "description": "HorizontalOffset and VerticalOffset settings are associated with each video output. These settings are used to signal the relative position of the displays that are connected to these outputs. HorizontalOffset = \"0\" and VerticalOffset = \"0\" indicates that the display is positioned in center, both horizontally and vertically. A negative horizontal offset indicates that the monitor is left of center, and a positive horizontal offset indicates that the monitor is right of center. A negative vertical offset indicates that the monitor is below center, and a positive vertical offset indicates that the monitor is above center. The magnitude of the offset indicates how far the display is from center (relative to other displays). Example: You have two screens side by side. The left screen is on Connector 1 and the right screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"1\", VerticalOffset = \"0\" Example: You have two screens, one below the other. The upper screen is on Connector 1 and the lower screen on Connector 2. Then the following settings will apply: Video Output Connector 1 Location: HorizontalOffset = \"0\", VerticalOffset = \"0\" Video Output Connector 2 Location: HorizontalOffset = \"0\", VerticalOffset = \"-1\"",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "MaxLength": "12",
          "MinLength": "1",
          "type": "String"
        }
      },
      "id": 34564,
      "normPath": "Video Output Connector Location VerticalOffset",
      "path": "Video Output Connector[3] Location VerticalOffset",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "The monitor role describes which video streams will be shown on the screen connected to this video output. Together the Video Monitors setting and the MonitorRole settings for all outputs define which layout (video streams) will be shown on each screen.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "First",
            "PresentationOnly",
            "Recorder",
            "Second",
            "Third"
          ],
          "type": "Literal"
        }
      },
      "id": 32232,
      "normPath": "Video Output Connector MonitorRole",
      "path": "Video Output Connector[3] MonitorRole",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "Define the resolution and refresh rate for the connected screen. The formats larger than 1920_1200_60 requires use of high quality display cables. For guaranteed operation, use display cables that are pre-qualified from Cisco for use at 3840_2160_60, or use a cable that has passed the \"Premium HDMI certification\" program. Some UHD TVs/displays only enable 3840_2160_30 (30 Hz) and not 3840_2160_60 (60 Hz) as their default configuration. In such cases the corresponding setting on the TV/display must be reconfigured to allow 3840_2160_60 for the HDMI input where the device is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1920_1080_50",
            "1920_1080_60",
            "1920_1200_50",
            "1920_1200_60",
            "2560_1440_60",
            "3840_2160_30",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 32234,
      "normPath": "Video Output Connector Resolution",
      "path": "Video Output Connector[3] Resolution",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "3840_2160_30",
        "description": "Define the resolution and refresh rate for the connected screen. The formats larger than 1920_1200_60 requires use of high quality display cables. For guaranteed operation, use display cables that are pre-qualified from Cisco for use at 3840_2160_60, or use a cable that has passed the \"Premium HDMI certification\" program. Some UHD TVs/displays only enable 3840_2160_30 (30 Hz) and not 3840_2160_60 (60 Hz) as their default configuration. In such cases the corresponding setting on the TV/display must be reconfigured to allow 3840_2160_60 for the HDMI input where the device is connected.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "3840_2160_30"
          ],
          "type": "Literal"
        }
      },
      "id": 32367,
      "normPath": "Video Output Connector Resolution",
      "path": "Video Output Connector[3] Resolution",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Full",
        "description": "Displays connected to an HDMI output should follow the rules for RGB video quantization range defined in CTA-861. Unfortunately some displays do not follow the standard and this configuration may be used to override the settings to get a perfect image with any display. Most HDMI displays expect full quantization range.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Full",
            "Limited"
          ],
          "type": "Literal"
        }
      },
      "id": 33985,
      "normPath": "Video Output Connector RGBQuantizationRange",
      "path": "Video Output Connector[3] RGBQuantizationRange",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "OnStreaming",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "OnConnect",
            "OnStreaming"
          ],
          "type": "Literal"
        },
        "description": "Specify whether to enter USB mode (i.e., do-not-disturb) when you connect video or when you start streaming video."
      },
      "id": 31486,
      "normPath": "Video Output Webcam USBMode",
      "path": "Video Output Webcam USBMode",
      "products": [
        "octavio"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "OnStreaming",
        "description": "Specify whether to enter USB mode (i.e., do-not-disturb) when you connect video or when you start streaming video.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "OnConnect",
            "OnStreaming"
          ],
          "type": "Literal"
        }
      },
      "id": 34045,
      "normPath": "Video Output Webcam USBMode",
      "path": "Video Output Webcam USBMode",
      "products": [
        "havella"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "3",
        "description": "Define which video input source to use as a default presentation source. This setting may be used by the API and third-party user interfaces. It is not relevant when using the user interfaces provided by Cisco.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "type": "Literal"
        }
      },
      "id": 30826,
      "normPath": "Video Presentation DefaultSource",
      "path": "Video Presentation DefaultSource",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "2",
        "description": "Define which video input source to use as a default presentation source. This setting may be used by the API and third-party user interfaces. It is not relevant when using the user interfaces provided by Cisco.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2"
          ],
          "type": "Literal"
        }
      },
      "id": 30949,
      "normPath": "Video Presentation DefaultSource",
      "path": "Video Presentation DefaultSource",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "2",
        "description": "Define which video input source to use as a default presentation source. This setting may be used by the API and third-party user interfaces. It is not relevant when using the user interfaces provided by Cisco.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3"
          ],
          "type": "Literal"
        }
      },
      "id": 30987,
      "normPath": "Video Presentation DefaultSource",
      "path": "Video Presentation DefaultSource",
      "products": [
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Equal",
        "description": "Specify how to distribute the bandwidth between the presentation channel and the main video channel.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Equal",
            "High",
            "Low"
          ],
          "type": "Literal"
        }
      },
      "id": 30629,
      "normPath": "Video Presentation Priority",
      "path": "Video Presentation Priority",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70s",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Equal",
        "description": "Specify how to distribute the bandwidth between the presentation channel and the main video channel.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Equal"
          ],
          "type": "Literal"
        }
      },
      "id": 30863,
      "normPath": "Video Presentation Priority",
      "path": "Video Presentation Priority",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Current",
        "description": "Define if the main video source (self-view) shall be shown in full screen or as a small picture-in-picture (PiP) after a call. The setting only takes effect when self-view is switched on (see the Video Selfview Default Mode setting).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Current",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 27068,
      "normPath": "Video Selfview Default FullscreenMode",
      "path": "Video Selfview Default FullscreenMode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Current",
        "description": "Define if the main video source (self-view) shall be shown in full screen or as a small picture-in-picture (PiP) after a call. The setting only takes effect when self-view is switched on (see the Video Selfview Default Mode setting). If you use the user interface to turn full screen self-view off, it will come back as a PiP if you use the user interface to turn it on again.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Current",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30916,
      "normPath": "Video Selfview Default FullscreenMode",
      "path": "Video Selfview Default FullscreenMode",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Current",
        "description": "Define if the main video source (self-view) shall be displayed on screen after a call, and also after video has been turned off and on again during a call. The position and size of the self-view window is determined by the Video Selfview Default PIPPosition and the Video Selfview Default FullscreenMode settings respectively.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Current",
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33824,
      "normPath": "Video Selfview Default Mode",
      "path": "Video Selfview Default Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Current",
        "description": "Define which screen/output to display the main video source (self-view) after a call. The value reflects the monitor roles set for the different outputs in the Video Output Connector [n] MonitorRole setting. The setting applies both when self-view is displayed in full screen, and when it is displayed as picture-in-picture (PiP).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Current",
            "First",
            "Second",
            "Third"
          ],
          "type": "Literal"
        }
      },
      "id": 28599,
      "normPath": "Video Selfview Default OnMonitorRole",
      "path": "Video Selfview Default OnMonitorRole",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Current",
        "description": "Define which screen/output to display the main video source (self-view) after a call. The value reflects the monitor roles set for the different outputs in the Video Output Connector [n] MonitorRole setting. The setting applies both when self-view is displayed in full screen, and when it is displayed as picture-in-picture (PiP).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Current",
            "First",
            "Second"
          ],
          "type": "Literal"
        }
      },
      "id": 28949,
      "normPath": "Video Selfview Default OnMonitorRole",
      "path": "Video Selfview Default OnMonitorRole",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Current",
        "description": "Define the position on screen of the small self-view picture-in-picture (PiP) after a call. The setting only takes effect when self-view is switched on (see the Video Selfview Default Mode setting) and fullscreen view is switched off (see the Video Selfview Default FullscreenMode setting).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "CenterLeft",
            "CenterRight",
            "Current",
            "LowerLeft",
            "LowerRight",
            "UpperCenter",
            "UpperLeft",
            "UpperRight"
          ],
          "type": "Literal"
        }
      },
      "id": 27071,
      "normPath": "Video Selfview Default PIPPosition",
      "path": "Video Selfview Default PIPPosition",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70s",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "LowerRight",
        "description": "Define the position on screen of the small self-view picture-in-picture (PiP) after a call. The setting only takes effect when self-view is switched on (see the Video Selfview Default Mode setting) and fullscreen view is switched off (see the Video Selfview Default FullscreenMode setting).",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "CenterLeft",
            "CenterRight",
            "Current",
            "LowerLeft",
            "LowerRight",
            "UpperCenter",
            "UpperLeft",
            "UpperRight"
          ],
          "type": "Literal"
        }
      },
      "id": 28830,
      "normPath": "Video Selfview Default PIPPosition",
      "path": "Video Selfview Default PIPPosition",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "10",
        "description": "This setting only has an effect when the Video Selfview OnCall Mode setting is switched On. In this case, the number of seconds set here determines for how long self-view is shown before it is automatically switched off.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Max": "60",
          "Min": "1",
          "Step": "60",
          "type": "Integer"
        }
      },
      "id": 27072,
      "normPath": "Video Selfview OnCall Duration",
      "path": "Video Selfview OnCall Duration",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "This setting is used to switch on self-view for a short while when setting up a call. The Video Selfview OnCall Duration setting determines for how long it remains on. This applies when self-view in general is switched off.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 27073,
      "normPath": "Video Selfview OnCall Mode",
      "path": "Video Selfview OnCall Mode",
      "products": [
        "havella",
        "hopen",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "This setting is used to switch on self-view for a short while when setting up a call. The Video Selfview OnCall Duration setting determines for how long it remains on. This applies when self-view in general is switched off.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 28600,
      "normPath": "Video Selfview OnCall Mode",
      "path": "Video Selfview OnCall Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "Use this setting to enable or disable the wakeword (e.g., \"Ok Webex\") that is used by the Webex Assistant. The Webex Assistant allows you to use the device hands free, and by using the wakeword you can initiate tasks, such as placing a call and starting a presentation. Use the UserInterface Assistant Mode setting to switch on the Webex Assistant.",
        "read": [
          "Admin",
          "Integrator",
          "User"
        ],
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33909,
      "normPath": "VoiceControl Wakeword Mode",
      "path": "VoiceControl Wakeword Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Allowed",
            "NotAllowed",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 35441,
      "normPath": "WebEngine Features LocalWebAppManagement",
      "path": "WebEngine Features LocalWebAppManagement",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "TLSv1.1",
        "description": "Set the lowest version of the TLS (Transport Layer Security) protocol that is allowed for WebEngine.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "TLSv1.0",
            "TLSv1.1",
            "TLSv1.2"
          ],
          "type": "Literal"
        }
      },
      "id": 33825,
      "normPath": "WebEngine MinimumTLSVersion",
      "path": "WebEngine MinimumTLSVersion",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The web engine is a prerequisite for features that use the device's web view, for example digital signage and web apps.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30632,
      "normPath": "WebEngine Mode",
      "path": "WebEngine Mode",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "The web engine is a prerequisite for features that use the device's web view, for example digital signage.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30828,
      "normPath": "WebEngine Mode",
      "path": "WebEngine Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Off",
        "description": "If you encounter a problem with a web page, it can be a good idea to turn on remote debugging. Remote debugging lets you access the Chrome developer console and identify potential issues with a web page. When enabled, a banner is displayed at the bottom of the screen, warning the users that they may be monitored. The banner also shows the URL that you can enter in your local Chrome browser to open the developer console. Make sure to turn off remote debugging after use.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30633,
      "normPath": "WebEngine RemoteDebugging",
      "path": "WebEngine RemoteDebugging",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "On",
        "description": "There are several UseHttpProxy settings that specify if a service shall communicate via an HTTP proxy or not. The WebEngine UseHttpProxy setting applies all web view based features, such as digital signage, API-driven web views, and web apps. For this setting to have any effect, a proxy server for HTTP, HTTPS, and WebSocket traffic must be set up using the NetworkServices HTTP Proxy settings.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 30634,
      "normPath": "WebEngine UseHttpProxy",
      "path": "WebEngine UseHttpProxy",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "default": "Auto",
        "description": "This setting allows you to turn off the guest share feature via share.webex.com.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 34357,
      "normPath": "Webex CloudProximity GuestShare",
      "path": "Webex CloudProximity GuestShare",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Off",
        "description": "Devices registered to an on-premises call manager and linked to Webex Edge for Devices support both on-premises and cloud proximity mode for handling pairing mechanisms like ultrasound, Wi-Fi discovery, and guest sharing. This setting allows you to define which of the two proximity modes to use.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33828,
      "normPath": "Webex CloudProximity Mode",
      "path": "Webex CloudProximity Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "Off",
        "description": "On devices that are registered to an on-premises service and linked to Webex Edge for Devices, you can choose whether to upgrade the software from the on-premises provisioning service or from the Webex cloud service (cloud-managed software upgrade). With cloud-managed software upgrade the device is upgraded automatically when a new RoomOS software version is available, that is at the same time as cloud registered devices are upgraded. You get the latest updates and bug fixes faster without having to upgrade the device manually.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "On"
          ],
          "type": "Literal"
        }
      },
      "id": 33829,
      "normPath": "Webex CloudUpgrades Mode",
      "path": "Webex CloudUpgrades Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "default": "SIP",
        "description": "Devices that are registered to an on-premises service and linked to Webex Edge for Devices may use the Webex cloud service for calling into Webex meetings. Calling via Webex gives you the full set of native Webex Meetings in-call features, such as advanced mute, cohost, transfer host, and face recognition, to name a few. These are the cases when Webex Meetings call routing may be used: When using the Join Webex button, when using the Webex Assistant to join a Personal Room meeting (PMR), and when using the Call button or the Dial API command with a URI with one of the following domains: @webex.com, @*.webex.com, and @meet.ciscospark.com. Other calls will use to the default protocol. Also, native Webex Meetings call routing requires that the device is enabled for cloud-managed software upgrade, configuration from Control Hub is enabled, and the Conference Multipoint Mode is set to Auto. Room Panorama and Room 70 Panorama are not supported in CE 9.15.0.",
        "read": [
          "Admin",
          "User"
        ],
        "role": [
          "Admin"
        ],
        "valuespace": {
          "Values": [
            "SIP",
            "Webex"
          ],
          "type": "Literal"
        }
      },
      "id": 33830,
      "normPath": "Webex Meetings JoinProtocol",
      "path": "Webex Meetings JoinProtocol",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Configuration"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Ethernet": {
            "children": {
              "LoudspeakerActivity": {
                "required": true,
                "valuespace": "int"
              },
              "NoiseLevel": {
                "required": true,
                "valuespace": "int"
              },
              "PPMeter": {
                "required": true,
                "valuespace": "int"
              },
              "SubIdx": {
                "required": true,
                "valuespace": "int"
              },
              "VuMeter": {
                "required": true,
                "valuespace": "int"
              }
            },
            "multiple": true,
            "required": true
          },
          "HDMI": {
            "children": {
              "Left": {
                "children": {
                  "PPMeter": {
                    "required": false,
                    "valuespace": "int"
                  },
                  "VuMeter": {
                    "required": false,
                    "valuespace": "int"
                  }
                },
                "multiple": false,
                "required": false
              },
              "Right": {
                "children": {
                  "PPMeter": {
                    "required": false,
                    "valuespace": "int"
                  },
                  "VuMeter": {
                    "required": false,
                    "valuespace": "int"
                  }
                },
                "multiple": false,
                "required": false
              }
            },
            "multiple": true,
            "required": true
          },
          "Line": {
            "children": {
              "Left": {
                "children": {
                  "PPMeter": {
                    "required": false,
                    "valuespace": "int"
                  },
                  "VuMeter": {
                    "required": false,
                    "valuespace": "int"
                  }
                },
                "multiple": false,
                "required": false
              },
              "Right": {
                "children": {
                  "PPMeter": {
                    "required": false,
                    "valuespace": "int"
                  },
                  "VuMeter": {
                    "required": false,
                    "valuespace": "int"
                  }
                },
                "multiple": false,
                "required": false
              }
            },
            "multiple": true,
            "required": true
          },
          "MicArray": {
            "children": {
              "LoudspeakerActivity": {
                "required": true,
                "valuespace": "int"
              },
              "NoiseLevel": {
                "required": true,
                "valuespace": "int"
              },
              "PPMeter": {
                "required": true,
                "valuespace": "int"
              },
              "VuMeter": {
                "required": true,
                "valuespace": "int"
              }
            },
            "multiple": true,
            "required": true
          },
          "Microphone": {
            "children": {
              "AudioPairingRate": {
                "required": false,
                "valuespace": "int"
              },
              "LoudspeakerActivity": {
                "required": true,
                "valuespace": "int"
              },
              "NoiseLevel": {
                "required": true,
                "valuespace": "int"
              },
              "PPMeter": {
                "required": true,
                "valuespace": "int"
              },
              "UltrasoundLevel": {
                "required": false,
                "valuespace": "int"
              },
              "UltrasoundSNR": {
                "required": false,
                "valuespace": "int"
              },
              "UltrasoundVolume": {
                "required": false,
                "valuespace": "int"
              },
              "VuMeter": {
                "required": true,
                "valuespace": "int"
              }
            },
            "multiple": true,
            "required": true
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32781,
      "normPath": "Audio Input Connectors",
      "path": "Audio Input Connectors",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Reason": {
            "required": false,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32782,
      "normPath": "Audio MicrophonesUnmuteDenied",
      "path": "Audio MicrophonesUnmuteDenied",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32783,
      "normPath": "Audio UsbHeadset CallButton",
      "path": "Audio UsbHeadset CallButton",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32784,
      "normPath": "Audio Volume AlreadyAtLimit",
      "path": "Audio Volume AlreadyAtLimit",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Address": {
            "required": true,
            "valuespace": "string"
          },
          "Name": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "TouchUser"
        ],
        "role": []
      },
      "id": 32785,
      "normPath": "Bluetooth Authorize",
      "path": "Bluetooth Authorize",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "TouchUser"
        ],
        "role": []
      },
      "id": 32786,
      "normPath": "Bluetooth AuthorizeAllow",
      "path": "Bluetooth AuthorizeAllow",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "TouchUser"
        ],
        "role": []
      },
      "id": 32787,
      "normPath": "Bluetooth AuthorizeCancel",
      "path": "Bluetooth AuthorizeCancel",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "TouchUser"
        ],
        "role": []
      },
      "id": 32788,
      "normPath": "Bluetooth AuthorizeDeny",
      "path": "Bluetooth AuthorizeDeny",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Address": {
            "required": true,
            "valuespace": "string"
          },
          "Msg": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32789,
      "normPath": "Bluetooth ConnectError",
      "path": "Bluetooth ConnectError",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Address": {
            "required": true,
            "valuespace": "string"
          },
          "Msg": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32790,
      "normPath": "Bluetooth PairingError",
      "path": "Bluetooth PairingError",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "PositionMs": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32791,
      "normPath": "Bluetooth Streaming PlaybackPosition",
      "path": "Bluetooth Streaming PlaybackPosition",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "BookingRequestUUID": {
            "required": false,
            "valuespace": "string"
          },
          "Duration": {
            "required": true,
            "valuespace": "int"
          },
          "StartTime": {
            "required": true,
            "valuespace": "string"
          },
          "Title": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 33511,
      "normPath": "Bookings BookingRequested",
      "path": "Bookings BookingRequested",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Id": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32794,
      "normPath": "Bookings End",
      "path": "Bookings End",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Id": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32795,
      "normPath": "Bookings EndTimeBuffer",
      "path": "Bookings EndTimeBuffer",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Duration": {
            "required": true,
            "valuespace": "int"
          },
          "NewEndTime": {
            "required": true,
            "valuespace": "string"
          },
          "OriginalMeetingId": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 33512,
      "normPath": "Bookings ExtensionRequested",
      "path": "Bookings ExtensionRequested",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Id": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32798,
      "normPath": "Bookings NotificationSnoozed",
      "path": "Bookings NotificationSnoozed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Id": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32799,
      "normPath": "Bookings Start",
      "path": "Bookings Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Id": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32800,
      "normPath": "Bookings StartTimeBuffer",
      "path": "Bookings StartTimeBuffer",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Id": {
            "required": true,
            "valuespace": "string"
          },
          "Seconds": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32801,
      "normPath": "Bookings TimeRemaining",
      "path": "Bookings TimeRemaining",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32802,
      "normPath": "Bookings Updated",
      "path": "Bookings Updated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Action": {
            "required": true,
            "values": [
              "Restart",
              "Shutdown"
            ],
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 33301,
      "normPath": "BootEvent",
      "path": "BootEvent",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "CallRate": {
            "required": true,
            "valuespace": "int"
          },
          "CallType": {
            "required": true,
            "valuespace": "literal"
          },
          "CauseCode": {
            "required": true,
            "valuespace": "int"
          },
          "CauseOrigin": {
            "required": true,
            "values": [
              "Internal",
              "SIP",
              "Q850",
              "Spark"
            ],
            "valuespace": "literal"
          },
          "CauseString": {
            "required": true,
            "valuespace": "string"
          },
          "CauseType": {
            "required": true,
            "valuespace": "string"
          },
          "CauseValue": {
            "required": true,
            "valuespace": "int"
          },
          "DisplayName": {
            "required": true,
            "valuespace": "string"
          },
          "Duration": {
            "required": true,
            "valuespace": "int"
          },
          "Encryption": {
            "required": true,
            "valuespace": "string"
          },
          "OrigCallDirection": {
            "required": true,
            "valuespace": "string"
          },
          "PeopleCountAverage": {
            "required": true,
            "valuespace": "int"
          },
          "Protocol": {
            "required": true,
            "valuespace": "literal"
          },
          "RemoteURI": {
            "required": true,
            "valuespace": "string"
          },
          "RequestedURI": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 33344,
      "normPath": "CallDisconnect",
      "path": "CallDisconnect",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32805,
      "normPath": "CallHistory Updated",
      "path": "CallHistory Updated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32806,
      "normPath": "CallLog Cleared",
      "path": "CallLog Cleared",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "LogType": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32807,
      "normPath": "CallLog Deleted",
      "path": "CallLog Deleted",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32808,
      "normPath": "CallLog Reloaded",
      "path": "CallLog Reloaded",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "CallRate": {
            "required": true,
            "valuespace": "int"
          },
          "Direction": {
            "required": true,
            "valuespace": "string"
          },
          "EncryptionIn": {
            "required": true,
            "valuespace": "string"
          },
          "EncryptionOut": {
            "required": true,
            "valuespace": "string"
          },
          "Protocol": {
            "required": true,
            "valuespace": "string"
          },
          "RemoteURI": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32809,
      "normPath": "CallSuccessful",
      "path": "CallSuccessful",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "DestinationCallId": {
            "required": true,
            "valuespace": "int"
          },
          "URI": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32810,
      "normPath": "CallTransfer Attended",
      "path": "CallTransfer Attended",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "URI": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32811,
      "normPath": "CallTransfer IncomingTransfer",
      "path": "CallTransfer IncomingTransfer",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "Progress": {
            "required": true,
            "valuespace": "string"
          },
          "ProtocolInfo": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32812,
      "normPath": "CallTransfer ProgressIndication",
      "path": "CallTransfer ProgressIndication",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Reason": {
            "required": true,
            "valuespace": "string"
          },
          "State": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32813,
      "normPath": "CallTransfer TransferReceipt",
      "path": "CallTransfer TransferReceipt",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "URI": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32814,
      "normPath": "CallTransfer Unattended",
      "path": "CallTransfer Unattended",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CameraId": {
            "required": true,
            "valuespace": "int"
          },
          "PresetId": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32815,
      "normPath": "CameraPresetActivated",
      "path": "CameraPresetActivated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32816,
      "normPath": "CameraPresetListUpdated",
      "path": "CameraPresetListUpdated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Details": {
            "required": true,
            "valuespace": "string"
          },
          "TaskName": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32817,
      "normPath": "CameraReboot",
      "path": "CameraReboot",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Image": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32819,
      "normPath": "Cameras BackgroundUpdated",
      "path": "Cameras BackgroundUpdated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Details": {
            "required": true,
            "valuespace": "string"
          },
          "TaskName": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32818,
      "normPath": "CameraUpgrade",
      "path": "CameraUpgrade",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "AuthenticatingPin": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "NumDigitsEntered": {
            "required": true,
            "valuespace": "int"
          },
          "ParticipantRole": {
            "required": true,
            "values": [
              "Host",
              "Guest",
              "Panelist",
              "Cohost",
              "Presenter"
            ],
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 33345,
      "normPath": "Conference Call AuthenticationResponse PinEntered",
      "path": "Conference Call AuthenticationResponse PinEntered",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32821,
      "normPath": "Conference Call AuthenticationResponse PinError",
      "path": "Conference Call AuthenticationResponse PinError",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "DisplayName": {
            "required": true,
            "valuespace": "string"
          },
          "Reason": {
            "required": true,
            "valuespace": "literal"
          },
          "Uri": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32830,
      "normPath": "Conference ParticipantList AddToRemoteConferenceFailed",
      "path": "Conference ParticipantList AddToRemoteConferenceFailed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "DisplayName": {
            "required": true,
            "valuespace": "string"
          },
          "Uri": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32831,
      "normPath": "Conference ParticipantList AddToRemoteConferenceStarted",
      "path": "Conference ParticipantList AddToRemoteConferenceStarted",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "DisplayName": {
            "required": true,
            "valuespace": "string"
          },
          "Uri": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32832,
      "normPath": "Conference ParticipantList AddToRemoteConferenceSucceeded",
      "path": "Conference ParticipantList AddToRemoteConferenceSucceeded",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "DisplayName": {
            "required": true,
            "valuespace": "string"
          },
          "Reason": {
            "required": true,
            "valuespace": "literal"
          },
          "Uri": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32833,
      "normPath": "Conference ParticipantList CancelOngoingAddFailed",
      "path": "Conference ParticipantList CancelOngoingAddFailed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32834,
      "normPath": "Conference ParticipantList ListCleared",
      "path": "Conference ParticipantList ListCleared",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32835,
      "normPath": "Conference ParticipantList NewList",
      "path": "Conference ParticipantList NewList",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "AudioMute": {
            "required": true,
            "valuespace": "string"
          },
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "CoHost": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "Device": {
            "children": {
              "EndToEndEncryption": {
                "children": {
                  "CertificateChain": {
                    "children": {
                      "Certificate": {
                        "children": {
                          "Fingerprint": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "NotAfter": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "NotBefore": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "PrimaryName": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "PublicKeyAlgorithm": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "SerialNumber": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "SignatureAlgorithm": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "Subject": {
                            "children": {
                              "Name": {
                                "required": true,
                                "valuespace": "string"
                              }
                            },
                            "multiple": true,
                            "required": true
                          },
                          "Validity": {
                            "required": true,
                            "valuespace": "string"
                          }
                        },
                        "multiple": true,
                        "required": true
                      }
                    },
                    "multiple": false,
                    "required": true
                  },
                  "Identity": {
                    "required": true,
                    "valuespace": "string"
                  },
                  "Status": {
                    "required": true,
                    "valuespace": "string"
                  },
                  "Verification": {
                    "required": true,
                    "valuespace": "string"
                  }
                },
                "multiple": false,
                "required": false
              },
              "Id": {
                "required": true,
                "valuespace": "string"
              }
            },
            "multiple": true,
            "required": true
          },
          "DisplayName": {
            "required": true,
            "valuespace": "string"
          },
          "Email": {
            "required": true,
            "valuespace": "string"
          },
          "HandRaised": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "HardMuted": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "Importance": {
            "required": false,
            "valuespace": "int"
          },
          "Index": {
            "required": true,
            "valuespace": "int"
          },
          "IsHost": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "IsPairedToHostUser": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "IsPresenter": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "IsSharing": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "ObservesParticipantId": {
            "required": true,
            "valuespace": "string"
          },
          "OrgId": {
            "required": true,
            "valuespace": "string"
          },
          "ParticipantId": {
            "required": true,
            "valuespace": "string"
          },
          "SparkUserId": {
            "required": true,
            "valuespace": "string"
          },
          "Status": {
            "required": true,
            "valuespace": "literal"
          },
          "Type": {
            "required": true,
            "valuespace": "literal"
          },
          "Uri": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 35083,
      "normPath": "Conference ParticipantList ParticipantAdded",
      "path": "Conference ParticipantList ParticipantAdded",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "AudioMute": {
            "required": true,
            "valuespace": "string"
          },
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "CoHost": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "Device": {
            "children": {
              "EndToEndEncryption": {
                "children": {
                  "CertificateChain": {
                    "children": {
                      "Certificate": {
                        "children": {
                          "Fingerprint": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "NotAfter": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "NotBefore": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "PrimaryName": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "PublicKeyAlgorithm": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "SerialNumber": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "SignatureAlgorithm": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "Subject": {
                            "children": {
                              "Name": {
                                "required": true,
                                "valuespace": "string"
                              }
                            },
                            "multiple": true,
                            "required": true
                          },
                          "Validity": {
                            "required": true,
                            "valuespace": "string"
                          }
                        },
                        "multiple": true,
                        "required": true
                      }
                    },
                    "multiple": false,
                    "required": true
                  },
                  "Identity": {
                    "required": true,
                    "valuespace": "string"
                  },
                  "Status": {
                    "required": true,
                    "valuespace": "string"
                  },
                  "Verification": {
                    "required": true,
                    "valuespace": "string"
                  }
                },
                "multiple": false,
                "required": false
              },
              "Id": {
                "required": true,
                "valuespace": "string"
              }
            },
            "multiple": true,
            "required": true
          },
          "DisplayName": {
            "required": true,
            "valuespace": "string"
          },
          "Email": {
            "required": true,
            "valuespace": "string"
          },
          "HandRaised": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "HardMuted": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "Importance": {
            "required": false,
            "valuespace": "int"
          },
          "Index": {
            "required": true,
            "valuespace": "int"
          },
          "IsHost": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "IsPairedToHostUser": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "IsPresenter": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "IsSharing": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "ObservesParticipantId": {
            "required": true,
            "valuespace": "string"
          },
          "OrgId": {
            "required": true,
            "valuespace": "string"
          },
          "ParticipantId": {
            "required": true,
            "valuespace": "string"
          },
          "SparkUserId": {
            "required": true,
            "valuespace": "string"
          },
          "Status": {
            "required": true,
            "valuespace": "literal"
          },
          "Type": {
            "required": true,
            "valuespace": "literal"
          },
          "Uri": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 35084,
      "normPath": "Conference ParticipantList ParticipantDeleted",
      "path": "Conference ParticipantList ParticipantDeleted",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "AudioMute": {
            "required": true,
            "valuespace": "string"
          },
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "CoHost": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "Device": {
            "children": {
              "EndToEndEncryption": {
                "children": {
                  "CertificateChain": {
                    "children": {
                      "Certificate": {
                        "children": {
                          "Fingerprint": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "NotAfter": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "NotBefore": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "PrimaryName": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "PublicKeyAlgorithm": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "SerialNumber": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "SignatureAlgorithm": {
                            "required": true,
                            "valuespace": "string"
                          },
                          "Subject": {
                            "children": {
                              "Name": {
                                "required": true,
                                "valuespace": "string"
                              }
                            },
                            "multiple": true,
                            "required": true
                          },
                          "Validity": {
                            "required": true,
                            "valuespace": "string"
                          }
                        },
                        "multiple": true,
                        "required": true
                      }
                    },
                    "multiple": false,
                    "required": true
                  },
                  "Identity": {
                    "required": true,
                    "valuespace": "string"
                  },
                  "Status": {
                    "required": true,
                    "valuespace": "string"
                  },
                  "Verification": {
                    "required": true,
                    "valuespace": "string"
                  }
                },
                "multiple": false,
                "required": false
              },
              "Id": {
                "required": true,
                "valuespace": "string"
              }
            },
            "multiple": true,
            "required": true
          },
          "DisplayName": {
            "required": true,
            "valuespace": "string"
          },
          "Email": {
            "required": true,
            "valuespace": "string"
          },
          "HandRaised": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "HardMuted": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "Importance": {
            "required": false,
            "valuespace": "int"
          },
          "Index": {
            "required": true,
            "valuespace": "int"
          },
          "IsHost": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "IsPairedToHostUser": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "IsPresenter": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "IsSharing": {
            "required": true,
            "values": [
              "True",
              "False"
            ],
            "valuespace": "literal"
          },
          "ObservesParticipantId": {
            "required": true,
            "valuespace": "string"
          },
          "OrgId": {
            "required": true,
            "valuespace": "string"
          },
          "ParticipantId": {
            "required": true,
            "valuespace": "string"
          },
          "SparkUserId": {
            "required": true,
            "valuespace": "string"
          },
          "Status": {
            "required": true,
            "valuespace": "literal"
          },
          "Type": {
            "required": true,
            "valuespace": "literal"
          },
          "Uri": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 35085,
      "normPath": "Conference ParticipantList ParticipantUpdated",
      "path": "Conference ParticipantList ParticipantUpdated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32840,
      "normPath": "Conference RemoteUnmuteRequested",
      "path": "Conference RemoteUnmuteRequested",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32841,
      "normPath": "Conference SelfMuteAllowed",
      "path": "Conference SelfMuteAllowed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32843,
      "normPath": "CustomVideoLayoutsUpdated",
      "path": "CustomVideoLayoutsUpdated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "DownloadId": {
            "required": true,
            "valuespace": "int"
          },
          "Status": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32845,
      "normPath": "DownloadDone",
      "path": "DownloadDone",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "DownloadId": {
            "required": true,
            "valuespace": "int"
          },
          "FileSize": {
            "required": true,
            "valuespace": "int"
          },
          "PercentComplete": {
            "required": true,
            "valuespace": "int"
          },
          "Received": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32846,
      "normPath": "DownloadProgressReport",
      "path": "DownloadProgressReport",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "DownloadId": {
            "required": true,
            "valuespace": "int"
          },
          "URL": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32847,
      "normPath": "DownloadStarted",
      "path": "DownloadStarted",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "DTMFString": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32844,
      "normPath": "DTMFReceive",
      "path": "DTMFReceive",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "ResponseCode": {
            "required": true,
            "valuespace": "string"
          },
          "Success": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32848,
      "normPath": "ExtensionMobility",
      "path": "ExtensionMobility",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Profile": {
            "children": {
              "Id": {
                "required": true,
                "valuespace": "string"
              },
              "Name": {
                "required": true,
                "valuespace": "string"
              }
            },
            "multiple": true,
            "required": true
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32849,
      "normPath": "ExtensionMobilityProfileSelection",
      "path": "ExtensionMobilityProfileSelection",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Msg": {
            "required": true,
            "valuespace": "string"
          },
          "Type": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator"
        ],
        "role": []
      },
      "id": 32850,
      "normPath": "FarEndMessage Receive",
      "path": "FarEndMessage Receive",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "Message": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32851,
      "normPath": "FarEndMessage SStringReceive",
      "path": "FarEndMessage SStringReceive",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "Message": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32852,
      "normPath": "FarEndMessage TStringReceive",
      "path": "FarEndMessage TStringReceive",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "PresetId": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32853,
      "normPath": "FeccReceive PresetActivate",
      "path": "FeccReceive PresetActivate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "PresetId": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32854,
      "normPath": "FeccReceive PresetStore",
      "path": "FeccReceive PresetStore",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "Focus": {
            "required": true,
            "valuespace": "string"
          },
          "Pan": {
            "required": true,
            "valuespace": "string"
          },
          "Tilt": {
            "required": true,
            "valuespace": "string"
          },
          "Timeout": {
            "required": true,
            "valuespace": "int"
          },
          "Type": {
            "required": true,
            "valuespace": "string"
          },
          "Zoom": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32855,
      "normPath": "FeccReceive Ramp",
      "path": "FeccReceive Ramp",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "SourceId": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32856,
      "normPath": "FeccReceive SelectVideoSource",
      "path": "FeccReceive SelectVideoSource",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "DisplayNameValue": {
            "required": true,
            "valuespace": "string"
          },
          "RemoteURI": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32861,
      "normPath": "IncomingCallIndication",
      "path": "IncomingCallIndication",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Path": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32865,
      "normPath": "LocalImageDisplayed",
      "path": "LocalImageDisplayed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "OutputConnector": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32866,
      "normPath": "LocalLayoutToBeSet",
      "path": "LocalLayoutToBeSet",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "OutputConnectorA": {
            "required": true,
            "valuespace": "int"
          },
          "OutputConnectorB": {
            "required": true,
            "valuespace": "int"
          },
          "OutputConnectorC": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32867,
      "normPath": "LocalLayoutToBeSetOnConnectors",
      "path": "LocalLayoutToBeSetOnConnectors",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32868,
      "normPath": "LocalMuteWarningReceived",
      "path": "LocalMuteWarningReceived",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Level": {
            "required": true,
            "valuespace": "literal"
          },
          "Macro": {
            "required": true,
            "valuespace": "string"
          },
          "Message": {
            "required": true,
            "valuespace": "string"
          },
          "Offset": {
            "required": true,
            "valuespace": "int"
          },
          "Timestamp": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator"
        ],
        "role": []
      },
      "id": 32869,
      "normPath": "Macros Log",
      "path": "Macros Log",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Name": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32870,
      "normPath": "Macros Macro Activated",
      "path": "Macros Macro Activated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Name": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32871,
      "normPath": "Macros Macro Deactivated",
      "path": "Macros Macro Deactivated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Name": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32872,
      "normPath": "Macros Macro Removed",
      "path": "Macros Macro Removed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Name": {
            "required": true,
            "valuespace": "string"
          },
          "NewName": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32873,
      "normPath": "Macros Macro Renamed",
      "path": "Macros Macro Renamed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Name": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32874,
      "normPath": "Macros Macro Saved",
      "path": "Macros Macro Saved",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Name": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32875,
      "normPath": "Macros Macro Started",
      "path": "Macros Macro Started",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32876,
      "normPath": "Macros Runtime Ready",
      "path": "Macros Runtime Ready",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32877,
      "normPath": "Macros Runtime Reloaded",
      "path": "Macros Runtime Reloaded",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32878,
      "normPath": "Macros Runtime Reloading",
      "path": "Macros Runtime Reloading",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "State": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32879,
      "normPath": "MailLEDEvent",
      "path": "MailLEDEvent",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Text": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32880,
      "normPath": "Message Send",
      "path": "Message Send",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32881,
      "normPath": "OutgoingCallIndication",
      "path": "OutgoingCallIndication",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "DeviceIdentifier": {
            "required": true,
            "valuespace": "string"
          },
          "Value": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32882,
      "normPath": "Peripherals ControllableDevice StateChangeRequest",
      "path": "Peripherals ControllableDevice StateChangeRequest",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "DeviceIdentifier": {
            "required": true,
            "valuespace": "string"
          },
          "Event": {
            "required": true,
            "valuespace": "string"
          },
          "EventType": {
            "required": true,
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32883,
      "normPath": "Peripherals ControllableDevice UserInterfaceEvent",
      "path": "Peripherals ControllableDevice UserInterfaceEvent",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Device": {
            "children": {
              "DeviceType": {
                "required": true,
                "valuespace": "literal"
              },
              "MacAddress": {
                "required": true,
                "valuespace": "string"
              },
              "Name": {
                "required": true,
                "valuespace": "string"
              }
            },
            "multiple": true,
            "required": true
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32884,
      "normPath": "Peripherals DeviceDiscovery",
      "path": "Peripherals DeviceDiscovery",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32885,
      "normPath": "Peripherals DeviceDiscoveryEnd",
      "path": "Peripherals DeviceDiscoveryEnd",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Reason": {
            "required": true,
            "valuespace": "string"
          },
          "Status": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32886,
      "normPath": "Peripherals DevicePairEnd",
      "path": "Peripherals DevicePairEnd",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "DeviceIdentifier": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32887,
      "normPath": "Peripherals Unpair",
      "path": "Peripherals Unpair",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Cause": {
            "required": true,
            "values": [
              "userRequested",
              "autoStart",
              "autoStartDesktop",
              "conferenceChanged",
              "restartPreviewAfterCallEnded",
              "startReceiving",
              "floorGranted",
              "unspecified"
            ],
            "valuespace": "literal"
          },
          "Instance": {
            "required": true,
            "valuespace": "int"
          },
          "LocalSource": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 33350,
      "normPath": "PresentationPreviewStarted",
      "path": "PresentationPreviewStarted",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Cause": {
            "required": true,
            "values": [
              "userRequested",
              "unspecified",
              "remoteNormal",
              "callHeld",
              "conferenceChanged",
              "disconnect",
              "remoteVideoLoss",
              "duoStealing",
              "callDeactivation",
              "leavingConference",
              "localSteal",
              "noSignal",
              "enteringPreviewMode",
              "connectorInMuxChanged",
              "startSending",
              "enteringStandby",
              "enteringConference",
              "floorDenied"
            ],
            "valuespace": "literal"
          },
          "Instance": {
            "required": true,
            "valuespace": "int"
          },
          "LocalSource": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 33351,
      "normPath": "PresentationPreviewStopped",
      "path": "PresentationPreviewStopped",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "Cause": {
            "required": true,
            "values": [
              "userRequested",
              "autoStart",
              "autoStartDesktop",
              "conferenceChanged",
              "restartPreviewAfterCallEnded",
              "startReceiving",
              "floorGranted",
              "unspecified"
            ],
            "valuespace": "literal"
          },
          "ConferenceId": {
            "required": true,
            "valuespace": "int"
          },
          "LocalInstance": {
            "required": true,
            "valuespace": "int"
          },
          "LocalSource": {
            "required": true,
            "valuespace": "int"
          },
          "Mode": {
            "required": true,
            "values": [
              "Sending",
              "Receiving"
            ],
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 33352,
      "normPath": "PresentationStarted",
      "path": "PresentationStarted",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "ConferenceId": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32891,
      "normPath": "PresentationStartFailed",
      "path": "PresentationStartFailed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "CallId": {
            "required": true,
            "valuespace": "int"
          },
          "Cause": {
            "required": true,
            "values": [
              "userRequested",
              "unspecified",
              "remoteNormal",
              "callHeld",
              "conferenceChanged",
              "disconnect",
              "remoteVideoLoss",
              "duoStealing",
              "callDeactivation",
              "leavingConference",
              "localSteal",
              "noSignal",
              "enteringPreviewMode",
              "connectorInMuxChanged",
              "startSending",
              "enteringStandby",
              "enteringConference",
              "floorDenied"
            ],
            "valuespace": "literal"
          },
          "ConferenceId": {
            "required": true,
            "valuespace": "int"
          },
          "LocalInstance": {
            "required": true,
            "valuespace": "int"
          },
          "Mode": {
            "required": true,
            "values": [
              "Sending",
              "Receiving"
            ],
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 33353,
      "normPath": "PresentationStopped",
      "path": "PresentationStopped",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32894,
      "normPath": "Provisioning CUCMCustomizationApplied",
      "path": "Provisioning CUCMCustomizationApplied",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Issue": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32895,
      "normPath": "Provisioning CUCMCustomizationFailed",
      "path": "Provisioning CUCMCustomizationFailed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Duration": {
            "required": true,
            "valuespace": "int"
          },
          "Number": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32896,
      "normPath": "Provisioning CUCMCustomizationRetry",
      "path": "Provisioning CUCMCustomizationRetry",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32897,
      "normPath": "RebootPending",
      "path": "RebootPending",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Result": {
            "required": true,
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin"
        ],
        "role": []
      },
      "id": 32898,
      "normPath": "RoomCleanup Complete",
      "path": "RoomCleanup Complete",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "ContentType": {
            "children": {
              "Value": {
                "required": true,
                "valuespace": "literal"
              }
            },
            "multiple": true,
            "required": true
          },
          "Delay": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin"
        ],
        "role": []
      },
      "id": 32899,
      "normPath": "RoomCleanup Impending",
      "path": "RoomCleanup Impending",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin"
        ],
        "role": []
      },
      "id": 32900,
      "normPath": "RoomCleanup Start",
      "path": "RoomCleanup Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32901,
      "normPath": "RoomReset Reset",
      "path": "RoomReset Reset",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "NameNotUsed": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32902,
      "normPath": "RoomReset SecondsToReset",
      "path": "RoomReset SecondsToReset",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32903,
      "normPath": "Shutdown",
      "path": "Shutdown",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Type": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32904,
      "normPath": "SoftwareUpgrade",
      "path": "SoftwareUpgrade",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32907,
      "normPath": "Standby Reset",
      "path": "Standby Reset",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "NameNotUsed": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32908,
      "normPath": "Standby SecondsToStandby",
      "path": "Standby SecondsToStandby",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32909,
      "normPath": "SystemUnit FactoryResetInitiated",
      "path": "SystemUnit FactoryResetInitiated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32910,
      "normPath": "SystemUnit SignInBannerChanged",
      "path": "SystemUnit SignInBannerChanged",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32911,
      "normPath": "SystemUnit UserAbortedFactoryReset",
      "path": "SystemUnit UserAbortedFactoryReset",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32912,
      "normPath": "SystemUnit UserAbortedPowerOff",
      "path": "SystemUnit UserAbortedPowerOff",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32913,
      "normPath": "SystemUnit UserAbortedStandby",
      "path": "SystemUnit UserAbortedStandby",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "SecondsToFactoryReset": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32914,
      "normPath": "SystemUnit UserInitializedFactoryReset",
      "path": "SystemUnit UserInitializedFactoryReset",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "SecondsToPowerOff": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32915,
      "normPath": "SystemUnit UserInitializedPowerOff",
      "path": "SystemUnit UserInitializedPowerOff",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32916,
      "normPath": "SystemUnit UserPowerOff",
      "path": "SystemUnit UserPowerOff",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32917,
      "normPath": "SystemUnit UserStandby",
      "path": "SystemUnit UserStandby",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32923,
      "normPath": "UserInterface AbortInteractiveMode",
      "path": "UserInterface AbortInteractiveMode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32924,
      "normPath": "UserInterface Assistant Cleared",
      "path": "UserInterface Assistant Cleared",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32925,
      "normPath": "UserInterface Assistant Display",
      "path": "UserInterface Assistant Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Backend": {
            "required": true,
            "valuespace": "string"
          },
          "Name": {
            "required": true,
            "valuespace": "string"
          },
          "Value": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32926,
      "normPath": "UserInterface Assistant Emit",
      "path": "UserInterface Assistant Emit",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Name": {
            "required": true,
            "valuespace": "string"
          },
          "Payload": {
            "required": false,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 35388,
      "normPath": "UserInterface Assistant Notification",
      "path": "UserInterface Assistant Notification",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Type": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "User"
        ],
        "role": []
      },
      "id": 32928,
      "normPath": "UserInterface Branding Updated",
      "path": "UserInterface Branding Updated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32929,
      "normPath": "UserInterface CleanPrivateContextRequest",
      "path": "UserInterface CleanPrivateContextRequest",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Signal": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32930,
      "normPath": "UserInterface Extensions Event Changed",
      "path": "UserInterface Extensions Event Changed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Signal": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32931,
      "normPath": "UserInterface Extensions Event Clicked",
      "path": "UserInterface Extensions Event Clicked",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "PageId": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32932,
      "normPath": "UserInterface Extensions Event PageClosed",
      "path": "UserInterface Extensions Event PageClosed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "PageId": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32933,
      "normPath": "UserInterface Extensions Event PageOpened",
      "path": "UserInterface Extensions Event PageOpened",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Signal": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32934,
      "normPath": "UserInterface Extensions Event Pressed",
      "path": "UserInterface Extensions Event Pressed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Signal": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32935,
      "normPath": "UserInterface Extensions Event Released",
      "path": "UserInterface Extensions Event Released",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "PageId": {
            "required": true,
            "valuespace": "string"
          },
          "Type": {
            "required": true,
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32938,
      "normPath": "UserInterface Extensions Page Action",
      "path": "UserInterface Extensions Page Action",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "PanelId": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32939,
      "normPath": "UserInterface Extensions Panel Clicked",
      "path": "UserInterface Extensions Panel Clicked",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32940,
      "normPath": "UserInterface Extensions Panel Close",
      "path": "UserInterface Extensions Panel Close",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "PageId": {
            "required": true,
            "valuespace": "string"
          },
          "PanelId": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32941,
      "normPath": "UserInterface Extensions Panel Open",
      "path": "UserInterface Extensions Panel Open",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Origin": {
            "required": true,
            "valuespace": "string"
          },
          "Value": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32942,
      "normPath": "UserInterface Extensions Web Action",
      "path": "UserInterface Extensions Web Action",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Type": {
            "required": true,
            "valuespace": "string"
          },
          "Value": {
            "required": true,
            "valuespace": "string"
          },
          "WidgetId": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32943,
      "normPath": "UserInterface Extensions Widget Action",
      "path": "UserInterface Extensions Widget Action",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32944,
      "normPath": "UserInterface Extensions Widget LayoutUpdated",
      "path": "UserInterface Extensions Widget LayoutUpdated",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Code": {
            "required": true,
            "valuespace": "int"
          },
          "Key": {
            "required": true,
            "valuespace": "literal"
          },
          "Type": {
            "required": true,
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32945,
      "normPath": "UserInterface InputDevice Key Action",
      "path": "UserInterface InputDevice Key Action",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32946,
      "normPath": "UserInterface Message Alert Cleared",
      "path": "UserInterface Message Alert Cleared",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Duration": {
            "required": true,
            "valuespace": "int"
          },
          "Text": {
            "required": true,
            "valuespace": "string"
          },
          "Title": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32947,
      "normPath": "UserInterface Message Alert Display",
      "path": "UserInterface Message Alert Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32948,
      "normPath": "UserInterface Message ConferenceMessage Cleared",
      "path": "UserInterface Message ConferenceMessage Cleared",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Duration": {
            "required": true,
            "valuespace": "int"
          },
          "Text": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32949,
      "normPath": "UserInterface Message ConferenceMessage Display",
      "path": "UserInterface Message ConferenceMessage Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Text": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32950,
      "normPath": "UserInterface Message Echo",
      "path": "UserInterface Message Echo",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "FeedbackId": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32951,
      "normPath": "UserInterface Message Prompt Cleared",
      "path": "UserInterface Message Prompt Cleared",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Duration": {
            "required": false,
            "valuespace": "int"
          },
          "FeedbackId": {
            "required": false,
            "valuespace": "string"
          },
          "Option.1": {
            "required": false,
            "valuespace": "string"
          },
          "Option.2": {
            "required": false,
            "valuespace": "string"
          },
          "Option.3": {
            "required": false,
            "valuespace": "string"
          },
          "Option.4": {
            "required": false,
            "valuespace": "string"
          },
          "Option.5": {
            "required": false,
            "valuespace": "string"
          },
          "Text": {
            "required": true,
            "valuespace": "string"
          },
          "Title": {
            "required": false,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32952,
      "normPath": "UserInterface Message Prompt Display",
      "path": "UserInterface Message Prompt Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "FeedbackId": {
            "required": true,
            "valuespace": "string"
          },
          "OptionId": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32953,
      "normPath": "UserInterface Message Prompt Response",
      "path": "UserInterface Message Prompt Response",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "FeedbackId": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32954,
      "normPath": "UserInterface Message Rating Cleared",
      "path": "UserInterface Message Rating Cleared",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Duration": {
            "required": false,
            "valuespace": "int"
          },
          "FeedbackId": {
            "required": false,
            "valuespace": "string"
          },
          "SubmitReceiptText": {
            "required": false,
            "valuespace": "string"
          },
          "SubmitReceiptTitle": {
            "required": false,
            "valuespace": "string"
          },
          "Text": {
            "required": true,
            "valuespace": "string"
          },
          "Title": {
            "required": false,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32955,
      "normPath": "UserInterface Message Rating Display",
      "path": "UserInterface Message Rating Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "FeedbackId": {
            "required": true,
            "valuespace": "string"
          },
          "Rating": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32956,
      "normPath": "UserInterface Message Rating Response",
      "path": "UserInterface Message Rating Response",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "RequestType": {
            "required": true,
            "values": [
              "Call"
            ],
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 33564,
      "normPath": "UserInterface Message SparkUserCancelRequest",
      "path": "UserInterface Message SparkUserCancelRequest",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "RequestType": {
            "required": true,
            "values": [
              "Call"
            ],
            "valuespace": "literal"
          },
          "RequestedBy": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 33565,
      "normPath": "UserInterface Message SparkUserRequest",
      "path": "UserInterface Message SparkUserRequest",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "FeedbackId": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32959,
      "normPath": "UserInterface Message TextInput Clear",
      "path": "UserInterface Message TextInput Clear",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Duration": {
            "required": true,
            "valuespace": "int"
          },
          "FeedbackId": {
            "required": false,
            "valuespace": "string"
          },
          "InputText": {
            "required": true,
            "valuespace": "string"
          },
          "InputType": {
            "required": true,
            "valuespace": "string"
          },
          "KeyboardState": {
            "required": true,
            "valuespace": "string"
          },
          "Placeholder": {
            "required": true,
            "valuespace": "string"
          },
          "SubmitText": {
            "required": true,
            "valuespace": "string"
          },
          "Text": {
            "required": true,
            "valuespace": "string"
          },
          "Title": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32960,
      "normPath": "UserInterface Message TextInput Display",
      "path": "UserInterface Message TextInput Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "FeedbackId": {
            "required": true,
            "valuespace": "string"
          },
          "Text": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32961,
      "normPath": "UserInterface Message TextInput Response",
      "path": "UserInterface Message TextInput Response",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32962,
      "normPath": "UserInterface Message TextLine Cleared",
      "path": "UserInterface Message TextLine Cleared",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Duration": {
            "required": true,
            "valuespace": "int"
          },
          "Text": {
            "required": true,
            "valuespace": "string"
          },
          "X": {
            "required": true,
            "valuespace": "int"
          },
          "Y": {
            "required": true,
            "valuespace": "int"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32963,
      "normPath": "UserInterface Message TextLine Display",
      "path": "UserInterface Message TextLine Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "SourceIdentifier": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32970,
      "normPath": "UserInterface Presentation ExternalSource Selected",
      "path": "UserInterface Presentation ExternalSource Selected",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32971,
      "normPath": "UserInterface QueryInteractiveMode",
      "path": "UserInterface QueryInteractiveMode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "RequestId": {
            "required": true,
            "valuespace": "string"
          },
          "Type": {
            "required": true,
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32972,
      "normPath": "UserInterface ScreenShotRequest",
      "path": "UserInterface ScreenShotRequest",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Annotation": {
            "required": true,
            "valuespace": "string"
          },
          "Id": {
            "required": true,
            "valuespace": "int"
          },
          "RequestId": {
            "required": true,
            "valuespace": "string"
          },
          "Type": {
            "required": true,
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32973,
      "normPath": "UserInterface ScreenShotStored",
      "path": "UserInterface ScreenShotStored",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32974,
      "normPath": "UserInterface UnsupportedTouchPanel PairingAttempt",
      "path": "UserInterface UnsupportedTouchPanel PairingAttempt",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32977,
      "normPath": "UserInterface WebView Cleared",
      "path": "UserInterface WebView Cleared",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Headers": {
            "children": {
              "Header": {
                "required": true,
                "valuespace": "string"
              }
            },
            "multiple": true,
            "required": true
          },
          "Options": {
            "required": true,
            "valuespace": "string"
          },
          "Title": {
            "required": true,
            "valuespace": "string"
          },
          "Url": {
            "required": true,
            "valuespace": "string"
          }
        },
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32978,
      "normPath": "UserInterface WebView Display",
      "path": "UserInterface WebView Display",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin"
        ],
        "role": []
      },
      "id": 32980,
      "normPath": "UserManagement RemoteSupportUserModified",
      "path": "UserManagement RemoteSupportUserModified",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User",
          "Integrator",
          "RoomControl"
        ],
        "role": []
      },
      "id": 32981,
      "normPath": "VideoSnapshotTaken",
      "path": "VideoSnapshotTaken",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {
          "Type": {
            "required": false,
            "values": [
              "All",
              "Signage",
              "WebApps"
            ],
            "valuespace": "literal"
          }
        },
        "read": [
          "Admin"
        ],
        "role": []
      },
      "id": 33302,
      "normPath": "WebEngine DeleteStorage",
      "path": "WebEngine DeleteStorage",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "children": {},
        "read": [
          "Admin",
          "User"
        ],
        "role": []
      },
      "id": 32984,
      "normPath": "WebRTC ProviderCurrentDiagnosticsSend",
      "path": "WebRTC ProviderCurrentDiagnosticsSend",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Event"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "None",
            "HFP",
            "A2DP"
          ],
          "type": "Literal"
        }
      },
      "id": 29288,
      "normPath": "Audio Devices Bluetooth ActiveProfile",
      "path": "Audio Devices Bluetooth ActiveProfile",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Connected",
            "NotConnected"
          ],
          "type": "Literal"
        },
        "description": "Shows if a USB handset is connected."
      },
      "id": 27081,
      "normPath": "Audio Devices HandsetUSB ConnectionStatus",
      "path": "Audio Devices HandsetUSB ConnectionStatus",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if a USB handset is connected.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Connected",
            "NotConnected"
          ],
          "type": "Literal"
        }
      },
      "id": 28897,
      "normPath": "Audio Devices HandsetUSB ConnectionStatus",
      "path": "Audio Devices HandsetUSB ConnectionStatus",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "OnHook",
            "OffHook"
          ],
          "type": "Literal"
        },
        "description": "Shows if a USB handset is on hook or off hook."
      },
      "id": 27082,
      "normPath": "Audio Devices HandsetUSB Cradle",
      "path": "Audio Devices HandsetUSB Cradle",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if a USB handset is on hook or off hook.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "OnHook",
            "OffHook"
          ],
          "type": "Literal"
        }
      },
      "id": 28898,
      "normPath": "Audio Devices HandsetUSB Cradle",
      "path": "Audio Devices HandsetUSB Cradle",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Connected",
            "NotConnected"
          ],
          "type": "Literal"
        }
      },
      "id": 28899,
      "normPath": "Audio Devices HeadsetAnalog ConnectionStatus",
      "path": "Audio Devices HeadsetAnalog ConnectionStatus",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Connected",
            "NotConnected"
          ],
          "type": "Literal"
        },
        "description": "Shows if a USB headset is connected."
      },
      "id": 27083,
      "normPath": "Audio Devices HeadsetUSB ConnectionStatus",
      "path": "Audio Devices HeadsetUSB ConnectionStatus",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if a USB headset is connected.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Connected",
            "NotConnected"
          ],
          "type": "Literal"
        }
      },
      "id": 28901,
      "normPath": "Audio Devices HeadsetUSB ConnectionStatus",
      "path": "Audio Devices HeadsetUSB ConnectionStatus",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows a description of the attached USB headset."
      },
      "id": 27084,
      "normPath": "Audio Devices HeadsetUSB Description",
      "path": "Audio Devices HeadsetUSB Description",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows a description of the attached USB headset.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 28902,
      "normPath": "Audio Devices HeadsetUSB Description",
      "path": "Audio Devices HeadsetUSB Description",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Lists the USB headset manufacturer."
      },
      "id": 27085,
      "normPath": "Audio Devices HeadsetUSB Manufacturer",
      "path": "Audio Devices HeadsetUSB Manufacturer",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lists the USB headset manufacturer.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 28903,
      "normPath": "Audio Devices HeadsetUSB Manufacturer",
      "path": "Audio Devices HeadsetUSB Manufacturer",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the audio channel on an Ethernet input connector is muted or not.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 34014,
      "normPath": "Audio Input Connectors Ethernet Mute",
      "path": "Audio Input Connectors Ethernet[n] Mute",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the audio channel on a HDMI input connector is muted or not.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 31896,
      "normPath": "Audio Input Connectors HDMI Mute",
      "path": "Audio Input Connectors HDMI[n] Mute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the audio on a Line input connector is muted or not.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 31897,
      "normPath": "Audio Input Connectors Line Mute",
      "path": "Audio Input Connectors Line[n] Mute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Indicates whether a microphone is detected on the microphone input connector.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Connected",
            "NotConnected",
            "Unknown"
          ],
          "type": "Literal"
        }
      },
      "id": 32407,
      "normPath": "Audio Input Connectors Microphone ConnectionStatus",
      "path": "Audio Input Connectors Microphone[n] ConnectionStatus",
      "products": [
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Returns the detected latency for each loudspeaker to microphone path. The result is in milliseconds."
      },
      "id": 27092,
      "normPath": "Audio Input Connectors Microphone EcReferenceDelay",
      "path": "Audio Input Connectors Microphone[n] EcReferenceDelay",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the detected latency for each loudspeaker to microphone path. The result is in milliseconds.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32235,
      "normPath": "Audio Input Connectors Microphone EcReferenceDelay",
      "path": "Audio Input Connectors Microphone[n] EcReferenceDelay",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the audio on a Microphone input connector is muted or not.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 31898,
      "normPath": "Audio Input Connectors Microphone Mute",
      "path": "Audio Input Connectors Microphone[n] Mute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the audio channel on a USB-C input connector is muted or not.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 31899,
      "normPath": "Audio Input Connectors USBC Mute",
      "path": "Audio Input Connectors USBC[n] Mute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows the AGC (Automatic Gain Control) mode on the local input. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input."
      },
      "id": 28604,
      "normPath": "Audio Input LocalInput AGC",
      "path": "Audio Input LocalInput[n] AGC",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the AGC (Automatic Gain Control) mode on the local input. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33986,
      "normPath": "Audio Input LocalInput AGC",
      "path": "Audio Input LocalInput[n] AGC",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "States if the local input channels are mixed into a mono signal (1) or stereo signal (2). You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input."
      },
      "id": 28605,
      "normPath": "Audio Input LocalInput Channels",
      "path": "Audio Input LocalInput[n] Channels",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "States if the local input channels are mixed into a mono signal (1) or stereo signal (2). You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33987,
      "normPath": "Audio Input LocalInput Channels",
      "path": "Audio Input LocalInput[n] Channels",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "maxOccurrence": "n",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Lists the connectors that are attached to the local input. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input."
      },
      "id": 28606,
      "normPath": "Audio Input LocalInput",
      "path": "Audio Input LocalInput[n] Connector[n]",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lists the connectors that are attached to the local input. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input.",
        "maxOccurrence": "n",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33988,
      "normPath": "Audio Input LocalInput",
      "path": "Audio Input LocalInput[n] Connector[n]",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows whether or not input processing such as acoustic echo cancellation and noise reduction is bypassed on this local input. Bypassing the input processing reduces the audio input delay, which is useful when doing local sound reinforcement. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input."
      },
      "id": 28607,
      "normPath": "Audio Input LocalInput Direct",
      "path": "Audio Input LocalInput[n] Direct",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether or not input processing such as acoustic echo cancellation and noise reduction is bypassed on this local input. Bypassing the input processing reduces the audio input delay, which is useful when doing local sound reinforcement. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32239,
      "normPath": "Audio Input LocalInput Direct",
      "path": "Audio Input LocalInput[n] Direct",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows how the local input connectors have been mixed together. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input."
      },
      "id": 28608,
      "normPath": "Audio Input LocalInput MixerMode",
      "path": "Audio Input LocalInput[n] MixerMode",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows how the local input connectors have been mixed together. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32240,
      "normPath": "Audio Input LocalInput MixerMode",
      "path": "Audio Input LocalInput[n] MixerMode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows the mute mode for the local inputs. A local input is a mix of input connectors. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input."
      },
      "id": 28609,
      "normPath": "Audio Input LocalInput Mute",
      "path": "Audio Input LocalInput[n] Mute",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the mute mode for the local inputs. A local input is a mix of input connectors. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33989,
      "normPath": "Audio Input LocalInput Mute",
      "path": "Audio Input LocalInput[n] Mute",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows the name of the local input. A local input is a mix of input connectors. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input."
      },
      "id": 28610,
      "normPath": "Audio Input LocalInput Name",
      "path": "Audio Input LocalInput[n] Name",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the name of the local input. A local input is a mix of input connectors. You can run the command xStatus Audio Input LocalInput to find the identity [n] of the input.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32242,
      "normPath": "Audio Input LocalInput Name",
      "path": "Audio Input LocalInput[n] Name",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the CallId for the remote audio input. You can run the command xStatus Audio Input RemoteInput to find the identity [n] of the input.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33831,
      "normPath": "Audio Input RemoteInput CallId",
      "path": "Audio Input RemoteInput[n] CallId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether MusicMode is on or off.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 33832,
      "normPath": "Audio Microphones MusicMode",
      "path": "Audio Microphones MusicMode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the microphones are muted.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 27101,
      "normPath": "Audio Microphones Mute",
      "path": "Audio Microphones Mute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Shows the delay of the ARC output."
      },
      "id": 28611,
      "normPath": "Audio Output Connectors ARC DelayMs",
      "path": "Audio Output Connectors ARC[n] DelayMs",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the delay of the ARC output.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32244,
      "normPath": "Audio Output Connectors ARC DelayMs",
      "path": "Audio Output Connectors ARC[n] DelayMs",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        },
        "description": "Shows whether the audio channel on the ARC output connector is enabled or disabled."
      },
      "id": 28612,
      "normPath": "Audio Output Connectors ARC Mode",
      "path": "Audio Output Connectors ARC[n] Mode",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the audio channel on the ARC output connector is enabled or disabled.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32245,
      "normPath": "Audio Output Connectors ARC Mode",
      "path": "Audio Output Connectors ARC[n] Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Shows the delay of the HDMI output."
      },
      "id": 27102,
      "normPath": "Audio Output Connectors HDMI DelayMs",
      "path": "Audio Output Connectors HDMI[n] DelayMs",
      "products": [
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the delay of the HDMI output.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32247,
      "normPath": "Audio Output Connectors HDMI DelayMs",
      "path": "Audio Output Connectors HDMI[n] DelayMs",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off",
            "DelayMeasurement"
          ],
          "type": "Literal"
        },
        "description": "Shows whether the audio channel on the HDMI output connector is enabled or disabled, or if the connector is being used to measure the audio delay through the connected video display."
      },
      "id": 27103,
      "normPath": "Audio Output Connectors HDMI Mode",
      "path": "Audio Output Connectors HDMI[n] Mode",
      "products": [
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the audio channel on the HDMI output connector is enabled or disabled, or if the connector is being used to measure the audio delay through the connected video display.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off",
            "DelayMeasurement"
          ],
          "type": "Literal"
        }
      },
      "id": 32248,
      "normPath": "Audio Output Connectors HDMI Mode",
      "path": "Audio Output Connectors HDMI[n] Mode",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the delay of the internal loudspeaker.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32250,
      "normPath": "Audio Output Connectors InternalSpeaker DelayMs",
      "path": "Audio Output Connectors InternalSpeaker[n] DelayMs",
      "products": [
        "barents",
        "havella",
        "hopen",
        "svea"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the device's integrated speakers are enabled or disabled.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32251,
      "normPath": "Audio Output Connectors InternalSpeaker Mode",
      "path": "Audio Output Connectors InternalSpeaker[n] Mode",
      "products": [
        "barents",
        "havella",
        "svea"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Connected",
            "NotConnected",
            "Unknown"
          ],
          "type": "Literal"
        },
        "description": "Shows whether the audio output line is connected."
      },
      "id": 27108,
      "normPath": "Audio Output Connectors Line ConnectionStatus",
      "path": "Audio Output Connectors Line[n] ConnectionStatus",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the audio output line is connected.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Connected",
            "NotConnected",
            "Unknown"
          ],
          "type": "Literal"
        }
      },
      "id": 32429,
      "normPath": "Audio Output Connectors Line ConnectionStatus",
      "path": "Audio Output Connectors Line[n] ConnectionStatus",
      "products": [
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the delay in milliseconds.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31900,
      "normPath": "Audio Output Connectors Line DelayMs",
      "path": "Audio Output Connectors Line[n] DelayMs",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows whether or not the remote input signal (from far-end) is automatically added to this local output. It can always be added manually using the Audio LocalOutput ConnectInput command."
      },
      "id": 28614,
      "normPath": "Audio Output LocalOutput AutoconnectRemote",
      "path": "Audio Output LocalOutput[n] AutoconnectRemote",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether or not the remote input signal (from far-end) is automatically added to this local output. It can always be added manually using the Audio LocalOutput ConnectInput command.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32254,
      "normPath": "Audio Output LocalOutput AutoconnectRemote",
      "path": "Audio Output LocalOutput[n] AutoconnectRemote",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "States if the local output channels are mixed into a mono signal (1) or stereo signal (2). You can run the command xStatus Audio Output LocalOutput to find the identity [n] of the output."
      },
      "id": 28615,
      "normPath": "Audio Output LocalOutput Channels",
      "path": "Audio Output LocalOutput[n] Channels",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "States if the local output channels are mixed into a mono signal (1) or stereo signal (2). You can run the command xStatus Audio Output LocalOutput to find the identity [n] of the output.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33990,
      "normPath": "Audio Output LocalOutput Channels",
      "path": "Audio Output LocalOutput[n] Channels",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "maxOccurrence": "n",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Lists the connectors that are attached to the local output. You can run the command xStatus Audio Output LocalOutput to find the identity [n] of the output."
      },
      "id": 28616,
      "normPath": "Audio Output LocalOutput",
      "path": "Audio Output LocalOutput[n] Connector[n]",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lists the connectors that are attached to the local output. You can run the command xStatus Audio Output LocalOutput to find the identity [n] of the output.",
        "maxOccurrence": "n",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33991,
      "normPath": "Audio Output LocalOutput",
      "path": "Audio Output LocalOutput[n] Connector[n]",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Shows the gain (dB) on the input, when it is connected to the local output. You can run the command xStatus Audio Output LocalOutput to find the identity [n] of the output and input."
      },
      "id": 28617,
      "normPath": "Audio Output LocalOutput Gain",
      "path": "Audio Output LocalOutput[n] Input[n] Gain",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the gain (dB) on the input, when it is connected to the local output. You can run the command xStatus Audio Output LocalOutput to find the identity [n] of the output and input.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32257,
      "normPath": "Audio Output LocalOutput Gain",
      "path": "Audio Output LocalOutput[n] Input[n] Gain",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows the Loudspeaker mode on the local output. If one or more of the output connectors that are attached to the local output are connected to a loudspeaker, then this signal should be a reference signal to the echo canceler and Loudspeaker should be set to On. You can run the command xStatus Audio Output LocalOutput to find the identity [n] of the output."
      },
      "id": 28618,
      "normPath": "Audio Output LocalOutput Loudspeaker",
      "path": "Audio Output LocalOutput[n] Loudspeaker",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the Loudspeaker mode on the local output. If one or more of the output connectors that are attached to the local output are connected to a loudspeaker, then this signal should be a reference signal to the echo canceler and Loudspeaker should be set to On. You can run the command xStatus Audio Output LocalOutput to find the identity [n] of the output.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33992,
      "normPath": "Audio Output LocalOutput Loudspeaker",
      "path": "Audio Output LocalOutput[n] Loudspeaker",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows the name of the local output. You can run the command xStatus Audio Output LocalOutput to find the identity [n] of the output."
      },
      "id": 28619,
      "normPath": "Audio Output LocalOutput Name",
      "path": "Audio Output LocalOutput[n] Name",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the name of the local output. You can run the command xStatus Audio Output LocalOutput to find the identity [n] of the output.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33993,
      "normPath": "Audio Output LocalOutput Name",
      "path": "Audio Output LocalOutput[n] Name",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows where this output's volume is controlled from."
      },
      "id": 28620,
      "normPath": "Audio Output LocalOutput VolumeControlled",
      "path": "Audio Output LocalOutput[n] VolumeControlled",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows where this output's volume is controlled from.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32260,
      "normPath": "Audio Output LocalOutput VolumeControlled",
      "path": "Audio Output LocalOutput[n] VolumeControlled",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the measured audio delay of the device connected to the HDMI connector. This delay is measured through the HDMI audio return channel, and will secure good lip-synchronization between audio and video.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27111,
      "normPath": "Audio Output MeasuredHdmiArcDelay",
      "path": "Audio Output MeasuredHdmiArcDelay",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the measured audio delay of the device connected to the HDMI connector. This delay is measured from the HDMI output to one of the microphones.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27112,
      "normPath": "Audio Output MeasuredHdmiDelay",
      "path": "Audio Output MeasuredHdmiDelay",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Shows the CallId for the remote audio output. You can run the command xStatus Audio Output RemoteOutput to find the identity [n] of the output."
      },
      "id": 28621,
      "normPath": "Audio Output RemoteOutput CallId",
      "path": "Audio Output RemoteOutput[n] CallId",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the CallId for the remote audio output. You can run the command xStatus Audio Output RemoteOutput to find the identity [n] of the output.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32261,
      "normPath": "Audio Output RemoteOutput CallId",
      "path": "Audio Output RemoteOutput[n] CallId",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Shows the gain (dB) on the input, when input is connected to the remote output. Range from -54 dB to 15 dB, where -54 dB equals Off. You can run the command xStatus Audio Output RemoteOutput to find the identity [n] of the output and input."
      },
      "id": 28622,
      "normPath": "Audio Output RemoteOutput Gain",
      "path": "Audio Output RemoteOutput[n] Input[n] Gain",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the gain (dB) on the input, when input is connected to the remote output. Range from -54 dB to 15 dB, where -54 dB equals Off. You can run the command xStatus Audio Output RemoteOutput to find the identity [n] of the output and input.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33994,
      "normPath": "Audio Output RemoteOutput Gain",
      "path": "Audio Output RemoteOutput[n] Input[n] Gain",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27113,
      "normPath": "Audio Output ReportedHdmiCecDelay",
      "path": "Audio Output ReportedHdmiCecDelay",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Internal",
            "HeadsetUSB",
            "HeadsetAnalog",
            "HeadsetBluetooth",
            "HandsetUSB"
          ],
          "type": "Literal"
        },
        "description": "Shows the audio device that is selected. Only Desk Pro and Desk Limited Edition support Bluetooth headsets or analog headsets."
      },
      "id": 27114,
      "normPath": "Audio SelectedDevice",
      "path": "Audio SelectedDevice",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the audio device that is selected. Only Desk Pro and Desk Limited Edition support Bluetooth headsets or analog headsets.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Internal",
            "HeadsetUSB",
            "HeadsetAnalog",
            "HeadsetBluetooth",
            "HandsetUSB"
          ],
          "type": "Literal"
        }
      },
      "id": 34047,
      "normPath": "Audio SelectedDevice",
      "path": "Audio SelectedDevice",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the volume level (dB) of the loudspeaker output.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27116,
      "normPath": "Audio Volume",
      "path": "Audio Volume",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Shows the volume level of the USB handset."
      },
      "id": 27117,
      "normPath": "Audio VolumeHandsetUsb",
      "path": "Audio VolumeHandsetUsb",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the volume level of the USB handset.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 28905,
      "normPath": "Audio VolumeHandsetUsb",
      "path": "Audio VolumeHandsetUsb",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 29289,
      "normPath": "Audio VolumeHeadsetAnalog",
      "path": "Audio VolumeHeadsetAnalog",
      "products": [
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 29290,
      "normPath": "Audio VolumeHeadsetBluetooth",
      "path": "Audio VolumeHeadsetBluetooth",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27118,
      "normPath": "Audio VolumeHeadsetUsb",
      "path": "Audio VolumeHeadsetUsb",
      "products": [
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Shows the internal volume level."
      },
      "id": 27119,
      "normPath": "Audio VolumeInternal",
      "path": "Audio VolumeInternal",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the internal volume level.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 28909,
      "normPath": "Audio VolumeInternal",
      "path": "Audio VolumeInternal",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the device volume is set to mute.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 30636,
      "normPath": "Audio VolumeMute",
      "path": "Audio VolumeMute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Free",
            "FreeUntil",
            "BookedUntil"
          ],
          "type": "Literal"
        }
      },
      "id": 33295,
      "normPath": "Bookings Availability Status",
      "path": "Bookings Availability Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33296,
      "normPath": "Bookings Availability TimeStamp",
      "path": "Bookings Availability TimeStamp",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The ID of the on going booking event, if any. ",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27136,
      "normPath": "Bookings Current Id",
      "path": "Bookings Current Id",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Indicates if a call is answered, ignored or has been automatically answered by a device.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Answered",
            "Autoanswered",
            "Ignored",
            "Unanswered"
          ],
          "type": "Literal"
        }
      },
      "id": 31901,
      "normPath": "Call AnswerState",
      "path": "Call[n] AnswerState",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the CallId for the call the current call was transferred from.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31902,
      "normPath": "Call AttendedTransferFrom",
      "path": "Call[n] AttendedTransferFrom",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the remote (far end) number or URI of an incoming or outgoing call, including the call protocol, for call back. You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31904,
      "normPath": "Call CallbackNumber",
      "path": "Call[n] CallbackNumber",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the call type of the incoming or outgoing call. You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Audio",
            "AudioCanEscalate",
            "ForwardAllCall",
            "Unknown",
            "Video"
          ],
          "type": "Literal"
        }
      },
      "id": 31903,
      "normPath": "Call CallType",
      "path": "Call[n] CallType",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows where the call is connected to.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Endpoint",
            "MCU"
          ],
          "type": "Literal"
        }
      },
      "id": 31905,
      "normPath": "Call DeviceType",
      "path": "Call[n] DeviceType",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "States the direction of the call initiation. You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Incoming",
            "Outgoing"
          ],
          "type": "Literal"
        }
      },
      "id": 31906,
      "normPath": "Call Direction",
      "path": "Call[n] Direction",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the name of the remote (far end) participant in an incoming or outgoing call. You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31907,
      "normPath": "Call DisplayName",
      "path": "Call[n] DisplayName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the duration of a call (in seconds). You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31908,
      "normPath": "Call Duration",
      "path": "Call[n] Duration",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the encryption type of the call. You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31909,
      "normPath": "Call Encryption Type",
      "path": "Call[n] Encryption Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "When calling a facility service, the facility service id is shown. Otherwise the value 0 is returned.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31910,
      "normPath": "Call FacilityServiceId",
      "path": "Call[n] FacilityServiceId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the reason the current outgoing call was put on hold.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Conference",
            "Transfer",
            "None"
          ],
          "type": "Literal"
        }
      },
      "id": 31911,
      "normPath": "Call HoldReason",
      "path": "Call[n] HoldReason",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "ICE is a feature that enables two sides of a call to send media (video and audio) directly between each other, if a direct network path has been found through ICE negotiation. This status reflects the result of that negotiation.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Passed",
            "Failed"
          ],
          "type": "Literal"
        }
      },
      "id": 31912,
      "normPath": "Call Ice",
      "path": "Call[n] Ice",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the placed on hold status of the call. You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 31913,
      "normPath": "Call PlacedOnHold",
      "path": "Call[n] PlacedOnHold",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the call protocol of the incoming or outgoing call. You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Unknown",
            "H320",
            "H323",
            "SIP",
            "Spark",
            "WebRTC"
          ],
          "type": "Literal"
        }
      },
      "id": 33059,
      "normPath": "Call Protocol",
      "path": "Call[n] Protocol",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the receive bandwidth in the call in kilobits per second (kbps). You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31915,
      "normPath": "Call ReceiveCallRate",
      "path": "Call[n] ReceiveCallRate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the remote (far end) number or URI of an incoming or outgoing call. You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31916,
      "normPath": "Call RemoteNumber",
      "path": "Call[n] RemoteNumber",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the status of a call. You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Connected",
            "Connecting",
            "Dialling",
            "Disconnecting",
            "EarlyMedia",
            "Idle",
            "OnHold",
            "Preserved",
            "RemotePreserved",
            "Ringing"
          ],
          "type": "Literal"
        }
      },
      "id": 31917,
      "normPath": "Call Status",
      "path": "Call[n] Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the transmit bandwidth in the call in kilobits per second (kbps). You can run the command xStatus Call to find the call identity.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31918,
      "normPath": "Call TransmitCallRate",
      "path": "Call[n] TransmitCallRate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Image1",
            "Image2",
            "Image3",
            "Image4",
            "Image5",
            "Image6",
            "Image7",
            "User1",
            "User2",
            "User3"
          ],
          "type": "Literal"
        }
      },
      "id": 30393,
      "normPath": "Cameras Background Image",
      "path": "Cameras Background Image",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Blur",
            "BlurMonochrome",
            "DepthOfField",
            "Monochrome",
            "Hdmi",
            "UsbC",
            "Image"
          ],
          "type": "Literal"
        }
      },
      "id": 30007,
      "normPath": "Cameras Background Mode",
      "path": "Cameras Background Mode",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the camera capabilities (ptzf = pan, tilt, zoom, focus).",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31919,
      "normPath": "Cameras Camera Capabilities Options",
      "path": "Cameras Camera[n] Capabilities Options",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if the camera is connected or not.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 31920,
      "normPath": "Cameras Camera Connected",
      "path": "Cameras Camera[n] Connected",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Shows the connector number the camera has detected it is connected to, or shows 0 if no connection is detected."
      },
      "id": 28623,
      "normPath": "Cameras Camera DetectedConnector",
      "path": "Cameras Camera[n] DetectedConnector",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the connector number the camera has detected it is connected to, or shows 0 if no connection is detected.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32263,
      "normPath": "Cameras Camera DetectedConnector",
      "path": "Cameras Camera[n] DetectedConnector",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        },
        "description": "Shows if the image is flipped upside down."
      },
      "id": 28625,
      "normPath": "Cameras Camera Flip",
      "path": "Cameras Camera[n] Flip",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if the image is flipped upside down.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32264,
      "normPath": "Cameras Camera Flip",
      "path": "Cameras Camera[n] Flip",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27205,
      "normPath": "Cameras Camera Framerate",
      "path": "Cameras Camera[n] Framerate",
      "products": [
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows the hardware identity of the camera."
      },
      "id": 28626,
      "normPath": "Cameras Camera HardwareID",
      "path": "Cameras Camera[n] HardwareID",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the hardware identity of the camera.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32265,
      "normPath": "Cameras Camera HardwareID",
      "path": "Cameras Camera[n] HardwareID",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows how the camera perceives the lighting conditions in the room.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Unknown",
            "Good",
            "Dark",
            "Backlight"
          ],
          "type": "Literal"
        }
      },
      "id": 32267,
      "normPath": "Cameras Camera LightingConditions",
      "path": "Cameras Camera[n] LightingConditions",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows the MAC (Media Access Control) address for the camera."
      },
      "id": 28628,
      "normPath": "Cameras Camera MacAddress",
      "path": "Cameras Camera[n] MacAddress",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the MAC (Media Access Control) address for the camera.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32268,
      "normPath": "Cameras Camera MacAddress",
      "path": "Cameras Camera[n] MacAddress",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the manufacturer of the camera.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31921,
      "normPath": "Cameras Camera Manufacturer",
      "path": "Cameras Camera[n] Manufacturer",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the camera model.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31922,
      "normPath": "Cameras Camera Model",
      "path": "Cameras Camera[n] Model",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Shows the current focus position of the camera. The value range depends on camera type."
      },
      "id": 28629,
      "normPath": "Cameras Camera Position Focus",
      "path": "Cameras Camera[n] Position Focus",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the current focus position of the camera. The value range depends on camera type.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32269,
      "normPath": "Cameras Camera Position Focus",
      "path": "Cameras Camera[n] Position Focus",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the camera's current lens position.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Default",
            "Wide",
            "Center",
            "Left",
            "Right"
          ],
          "type": "Literal"
        }
      },
      "id": 32270,
      "normPath": "Cameras Camera Position Lens",
      "path": "Cameras Camera[n] Position Lens",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the current pan (move left and right) position of the camera. The value range depends on camera type.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32271,
      "normPath": "Cameras Camera Position Pan",
      "path": "Cameras Camera[n] Position Pan",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the current rotation (roll) of the camera view. The observed image is rotated counterclockwise if the value is positive, and clockwise if the value is negative. The unit is 1/100 degree, that is 300 corresponds to 3 degrees.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32272,
      "normPath": "Cameras Camera Position Roll",
      "path": "Cameras Camera[n] Position Roll",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the current tilt (move up and down) position of the camera. The value range depends on camera type.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32273,
      "normPath": "Cameras Camera Position Tilt",
      "path": "Cameras Camera[n] Position Tilt",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the current zoom (zoom in and out) position of the camera. The value range depends on camera type.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32274,
      "normPath": "Cameras Camera Position Zoom",
      "path": "Cameras Camera[n] Position Zoom",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows the camera serial number."
      },
      "id": 28632,
      "normPath": "Cameras Camera SerialNumber",
      "path": "Cameras Camera[n] SerialNumber",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the camera serial number.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32275,
      "normPath": "Cameras Camera SerialNumber",
      "path": "Cameras Camera[n] SerialNumber",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows the software identity of the camera."
      },
      "id": 28633,
      "normPath": "Cameras Camera SoftwareID",
      "path": "Cameras Camera[n] SoftwareID",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the software identity of the camera.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32276,
      "normPath": "Cameras Camera SoftwareID",
      "path": "Cameras Camera[n] SoftwareID",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether presenter tracking is available.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "Unavailable",
            "Available"
          ],
          "type": "Literal"
        }
      },
      "id": 28635,
      "normPath": "Cameras PresenterTrack Availability",
      "path": "Cameras PresenterTrack Availability",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether presenter tracking is currently in use.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 28636,
      "normPath": "Cameras PresenterTrack PresenterDetected",
      "path": "Cameras PresenterTrack PresenterDetected",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the current status for presenter tracking.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "Follow",
            "Diagnostic",
            "Background",
            "Setup",
            "Persistent"
          ],
          "type": "Literal"
        }
      },
      "id": 28637,
      "normPath": "Cameras PresenterTrack Status",
      "path": "Cameras PresenterTrack Status",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Not applicable."
      },
      "id": 27214,
      "normPath": "Cameras SpeakerTrack ActiveConnector",
      "path": "Cameras SpeakerTrack ActiveConnector",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of the connector that a camera with SpeakerTrack support is connected to. If it is a SpeakerTrack 60 camera, it is the connector number for the camera that is currently chosen by the SpeakerTrack algorithm.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 28638,
      "normPath": "Cameras SpeakerTrack ActiveConnector",
      "path": "Cameras SpeakerTrack ActiveConnector",
      "products": [
        "barents"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of the connector that the camera with SpeakerTrack support is connected to.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 28741,
      "normPath": "Cameras SpeakerTrack ActiveConnector",
      "path": "Cameras SpeakerTrack ActiveConnector",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Not applicable.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 28950,
      "normPath": "Cameras SpeakerTrack ActiveConnector",
      "path": "Cameras SpeakerTrack ActiveConnector",
      "products": [
        "havella"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "Unavailable",
            "Available"
          ],
          "type": "Literal"
        },
        "description": "Shows whether or not the best overview feature is available."
      },
      "id": 27215,
      "normPath": "Cameras SpeakerTrack Availability",
      "path": "Cameras SpeakerTrack Availability",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether or not speaker tracking is available.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "Unavailable",
            "Available"
          ],
          "type": "Literal"
        }
      },
      "id": 28639,
      "normPath": "Cameras SpeakerTrack Availability",
      "path": "Cameras SpeakerTrack Availability",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether or not the best overview feature is available.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "Unavailable",
            "Available"
          ],
          "type": "Literal"
        }
      },
      "id": 28951,
      "normPath": "Cameras SpeakerTrack Availability",
      "path": "Cameras SpeakerTrack Availability",
      "products": [
        "havella"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Active",
            "Inactive"
          ],
          "type": "Literal"
        },
        "description": "Shows whether or not best overview is active."
      },
      "id": 27216,
      "normPath": "Cameras SpeakerTrack Status",
      "path": "Cameras SpeakerTrack Status",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether or not speaker tracking is active.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Active",
            "Inactive"
          ],
          "type": "Literal"
        }
      },
      "id": 28640,
      "normPath": "Cameras SpeakerTrack Status",
      "path": "Cameras SpeakerTrack Status",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether or not best overview is active.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Active",
            "Inactive"
          ],
          "type": "Literal"
        }
      },
      "id": 28952,
      "normPath": "Cameras SpeakerTrack Status",
      "path": "Cameras SpeakerTrack Status",
      "products": [
        "havella"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Returns the pan value for the limited maximum camera view that is set by the Cameras SpeakerTrack ViewLimits StorePosition command."
      },
      "id": 30455,
      "normPath": "Cameras SpeakerTrack ViewLimits Pan",
      "path": "Cameras SpeakerTrack ViewLimits Pan",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the pan value for the limited maximum camera view that is set by the Cameras SpeakerTrack ViewLimits StorePosition command.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33995,
      "normPath": "Cameras SpeakerTrack ViewLimits Pan",
      "path": "Cameras SpeakerTrack ViewLimits Pan",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Active",
            "Inactive"
          ],
          "type": "Literal"
        },
        "description": "Shows if a limited maximum camera view is used for speaker tracking (see the Cameras SpeakerTrack ViewLimits StorePosition command)."
      },
      "id": 30456,
      "normPath": "Cameras SpeakerTrack ViewLimits Status",
      "path": "Cameras SpeakerTrack ViewLimits Status",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if a limited maximum camera view is used for speaker tracking (see the Cameras SpeakerTrack ViewLimits StorePosition command).",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Active",
            "Inactive"
          ],
          "type": "Literal"
        }
      },
      "id": 33996,
      "normPath": "Cameras SpeakerTrack ViewLimits Status",
      "path": "Cameras SpeakerTrack ViewLimits Status",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Returns the tilt value for the limited maximum camera view that is set by the Cameras SpeakerTrack ViewLimits StorePosition command."
      },
      "id": 30457,
      "normPath": "Cameras SpeakerTrack ViewLimits Tilt",
      "path": "Cameras SpeakerTrack ViewLimits Tilt",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the tilt value for the limited maximum camera view that is set by the Cameras SpeakerTrack ViewLimits StorePosition command.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33997,
      "normPath": "Cameras SpeakerTrack ViewLimits Tilt",
      "path": "Cameras SpeakerTrack ViewLimits Tilt",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Returns the zoom value for the limited maximum camera view that is set by the Cameras SpeakerTrack ViewLimits StorePosition command."
      },
      "id": 30458,
      "normPath": "Cameras SpeakerTrack ViewLimits Zoom",
      "path": "Cameras SpeakerTrack ViewLimits Zoom",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the zoom value for the limited maximum camera view that is set by the Cameras SpeakerTrack ViewLimits StorePosition command.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33998,
      "normPath": "Cameras SpeakerTrack ViewLimits Zoom",
      "path": "Cameras SpeakerTrack ViewLimits Zoom",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the maximum number of simultaneous active calls. Calls that are set on hold/transfer are not counted as active.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27217,
      "normPath": "Capabilities Conference MaxActiveCalls",
      "path": "Capabilities Conference MaxActiveCalls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the maximum number of simultaneous audio calls that is supported.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27218,
      "normPath": "Capabilities Conference MaxAudioCalls",
      "path": "Capabilities Conference MaxAudioCalls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the maximum number of simultaneous calls.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27219,
      "normPath": "Capabilities Conference MaxCalls",
      "path": "Capabilities Conference MaxCalls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the maximum number of simultaneous video calls that is supported.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27220,
      "normPath": "Capabilities Conference MaxVideoCalls",
      "path": "Capabilities Conference MaxVideoCalls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the CallId of the current active speaker.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27221,
      "normPath": "Conference ActiveSpeaker CallId",
      "path": "Conference ActiveSpeaker CallId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This status is only relevant for Cisco Webex registered devices. When this status has another value than \"None\" the device is waiting for an authentication response. Use the Conference Call AuthenticationResponse command to give the response.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "None",
            "HostPinOrGuest",
            "HostPinOrGuestPin",
            "PanelistPin"
          ],
          "type": "Literal"
        }
      },
      "id": 33833,
      "normPath": "Conference Call AuthenticationRequest",
      "path": "Conference Call[n] AuthenticationRequest",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the booking ID of a conference (if assigned). The booking ID can be used for easy identification of a call or conference.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31926,
      "normPath": "Conference Call BookingId",
      "path": "Conference Call[n] BookingId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Not applicable in this release.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 31934,
      "normPath": "Conference Call Capabilities FarendMessage Mode",
      "path": "Conference Call[n] Capabilities FarendMessage Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether or not you have permission to control the input sources at a far end site.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 31928,
      "normPath": "Conference Call Capabilities FECC Mode",
      "path": "Conference Call[n] Capabilities FECC Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the number of presets available for the input sources at a far end site.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31929,
      "normPath": "Conference Call Capabilities FECC NumberOfPresets",
      "path": "Conference Call[n] Capabilities FECC NumberOfPresets",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the number of input sources that can be connected at a far end site.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31930,
      "normPath": "Conference Call Capabilities FECC NumberOfSources",
      "path": "Conference Call[n] Capabilities FECC NumberOfSources",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the name of an input source that can be connected at a far end site.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31931,
      "normPath": "Conference Call Name",
      "path": "Conference Call[n] Capabilities FECC Source[n] Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows available options for an input source that can be connected at a far end site (for a camera: p=pan; t=tilt; z=zoom; f=focus).",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31932,
      "normPath": "Conference Call Options",
      "path": "Conference Call[n] Capabilities FECC Source[n] Options",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the ID of an input source that can be connected at a far end site.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31933,
      "normPath": "Conference Call SourceId",
      "path": "Conference Call[n] Capabilities FECC Source[n] SourceId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Indicates whether the far-end site can be placed on hold or not.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 31935,
      "normPath": "Conference Call Capabilities Hold",
      "path": "Conference Call[n] Capabilities Hold",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Not applicable in this release.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Active",
            "Failed",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 31936,
      "normPath": "Conference Call Capabilities IxChannel Status",
      "path": "Conference Call[n] Capabilities IxChannel Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Not applicable in this version.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Available",
            "Unavailable"
          ],
          "type": "Literal"
        }
      },
      "id": 33834,
      "normPath": "Conference Call Capabilities MeetingAssistant Start",
      "path": "Conference Call[n] Capabilities MeetingAssistant Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Not applicable in this version.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Available",
            "Unavailable"
          ],
          "type": "Literal"
        }
      },
      "id": 33835,
      "normPath": "Conference Call Capabilities MeetingAssistant Stop",
      "path": "Conference Call[n] Capabilities MeetingAssistant Stop",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if you can disconnect participants on this call.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Available",
            "Unavailable"
          ],
          "type": "Literal"
        }
      },
      "id": 33836,
      "normPath": "Conference Call Capabilities ParticipantDisconnect",
      "path": "Conference Call[n] Capabilities ParticipantDisconnect",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if you can see the participant list on this call or if the list is in the process of syncing.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Available",
            "Syncing",
            "Unavailable"
          ],
          "type": "Literal"
        }
      },
      "id": 33837,
      "normPath": "Conference Call Capabilities ParticipantList",
      "path": "Conference Call[n] Capabilities ParticipantList",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if you can change the mute state on the server for another device (meeting participant). If a device gets muted on the server, it will automatically mute itself. If a device gets unmuted on the server, it will receive a notification that \"You are requested to unmute your audio\". For privacy reasons, a device will always stay muted until locally unmuted.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Available",
            "Unavailable"
          ],
          "type": "Literal"
        }
      },
      "id": 33838,
      "normPath": "Conference Call Capabilities ParticipantMute",
      "path": "Conference Call[n] Capabilities ParticipantMute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lists the presentation capabilities for other participants in the conference.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 31937,
      "normPath": "Conference Call Capabilities Presentation",
      "path": "Conference Call[n] Capabilities Presentation",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if you can start a recording on this call.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Available",
            "Unavailable"
          ],
          "type": "Literal"
        }
      },
      "id": 31938,
      "normPath": "Conference Call Capabilities Recording Start",
      "path": "Conference Call[n] Capabilities Recording Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if you can change your own mute state on the server. This status is only relevant for meetings hosted by CMS.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Available",
            "Unavailable"
          ],
          "type": "Literal"
        }
      },
      "id": 33839,
      "normPath": "Conference Call Capabilities SelfMute",
      "path": "Conference Call[n] Capabilities SelfMute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if the Practice Session mode is currently in use on this call. This status is only available for cloud registered devices.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Normal",
            "PracticeSession"
          ],
          "type": "Literal"
        }
      },
      "id": 31939,
      "normPath": "Conference Call EventCenter Mode",
      "path": "Conference Call[n] EventCenter Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the manufacturer of the device at a far end site.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31941,
      "normPath": "Conference Call Manufacturer",
      "path": "Conference Call[n] Manufacturer",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 33650,
      "normPath": "Conference Call Meeting",
      "path": "Conference Call[n] Meeting",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Not applicable in this version.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 33840,
      "normPath": "Conference Call MeetingAssistantEnabled",
      "path": "Conference Call[n] MeetingAssistantEnabled",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lists the audio mute status for other participants in the conference.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 31942,
      "normPath": "Conference Call MicrophonesMuted",
      "path": "Conference Call[n] MicrophonesMuted",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "None",
            "Recording",
            "Paused"
          ],
          "type": "Literal"
        }
      },
      "id": 30079,
      "normPath": "Conference Call Recording",
      "path": "Conference Call[n] Recording",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30122,
      "normPath": "Conference Call Sip SessionId",
      "path": "Conference Call[n] Sip SessionId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the ID of the software running on the device at a far end site.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31945,
      "normPath": "Conference Call SoftwareID",
      "path": "Conference Call[n] SoftwareID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if the conference is being live streamed.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 31946,
      "normPath": "Conference Call Streamed",
      "path": "Conference Call[n] Streamed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if the call is being transcoded. If the call is transcoded for you, this will report True.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 33841,
      "normPath": "Conference Call Transcoded",
      "path": "Conference Call[n] Transcoded",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether DoNotDisturb mode is switched on or not.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Active",
            "Inactive"
          ],
          "type": "Literal"
        }
      },
      "id": 27289,
      "normPath": "Conference DoNotDisturb",
      "path": "Conference DoNotDisturb",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Available",
            "Unavailable"
          ],
          "type": "Literal"
        }
      },
      "id": 33111,
      "normPath": "Conference EndToEndEncryption Availability",
      "path": "Conference EndToEndEncryption Availability",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35036,
      "normPath": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate Fingerprint",
      "path": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate[n] Fingerprint",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35037,
      "normPath": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate NotAfter",
      "path": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate[n] NotAfter",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35038,
      "normPath": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate NotBefore",
      "path": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate[n] NotBefore",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35039,
      "normPath": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate PrimaryName",
      "path": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate[n] PrimaryName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35040,
      "normPath": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate PublicKeyAlgorithm",
      "path": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate[n] PublicKeyAlgorithm",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35041,
      "normPath": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate SerialNumber",
      "path": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate[n] SerialNumber",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35042,
      "normPath": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate SignatureAlgorithm",
      "path": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate[n] SignatureAlgorithm",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35043,
      "normPath": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate Name",
      "path": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate[n] Subject[n] Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35044,
      "normPath": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate Validity",
      "path": "Conference EndToEndEncryption ExternalIdentity CertificateChain Certificate[n] Validity",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35045,
      "normPath": "Conference EndToEndEncryption ExternalIdentity Identity",
      "path": "Conference EndToEndEncryption ExternalIdentity Identity",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35046,
      "normPath": "Conference EndToEndEncryption ExternalIdentity Status",
      "path": "Conference EndToEndEncryption ExternalIdentity Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35047,
      "normPath": "Conference EndToEndEncryption ExternalIdentity Verification",
      "path": "Conference EndToEndEncryption ExternalIdentity Verification",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35048,
      "normPath": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate Fingerprint",
      "path": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate[n] Fingerprint",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35049,
      "normPath": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate NotAfter",
      "path": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate[n] NotAfter",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35050,
      "normPath": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate NotBefore",
      "path": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate[n] NotBefore",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35051,
      "normPath": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate PrimaryName",
      "path": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate[n] PrimaryName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35052,
      "normPath": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate PublicKeyAlgorithm",
      "path": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate[n] PublicKeyAlgorithm",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35053,
      "normPath": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate SerialNumber",
      "path": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate[n] SerialNumber",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35054,
      "normPath": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate SignatureAlgorithm",
      "path": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate[n] SignatureAlgorithm",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35055,
      "normPath": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate Name",
      "path": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate[n] Subject[n] Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35056,
      "normPath": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate Validity",
      "path": "Conference EndToEndEncryption InternalIdentity CertificateChain Certificate[n] Validity",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35057,
      "normPath": "Conference EndToEndEncryption InternalIdentity Identity",
      "path": "Conference EndToEndEncryption InternalIdentity Identity",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35058,
      "normPath": "Conference EndToEndEncryption InternalIdentity Status",
      "path": "Conference EndToEndEncryption InternalIdentity Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35059,
      "normPath": "Conference EndToEndEncryption InternalIdentity Verification",
      "path": "Conference EndToEndEncryption InternalIdentity Verification",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Indicates whether the device is configured as private or shared line on CUCM.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Private",
            "Shared"
          ],
          "type": "Literal"
        }
      },
      "id": 31951,
      "normPath": "Conference Line Mode",
      "path": "Conference Line[n] Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The multipoint status depends on the Conference Multipoint Mode setting and the MultiSite option key. A device that doesn't have the MultiSite option key cannot host a MultiSite conference regardless of the Conference Multipoint Mode setting.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "CUCMMediaResourceGroupList",
            "MultiSite",
            "Spark",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 34574,
      "normPath": "Conference Multipoint Mode",
      "path": "Conference Multipoint Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the identity of the device that sends the presentation.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 30638,
      "normPath": "Conference Presentation CallId",
      "path": "Conference Presentation CallId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 29571,
      "normPath": "Conference Presentation LocalInstance DirectShare",
      "path": "Conference Presentation LocalInstance[n] DirectShare",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether a presentation source is shared locally or with a remote participant. There can be multiple local presentations which all have their own instance.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "LocalOnly",
            "LocalRemote",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 31952,
      "normPath": "Conference Presentation LocalInstance SendingMode",
      "path": "Conference Presentation LocalInstance[n] SendingMode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the SourceId for a current presentation. There can be multiple local presentations which all have their own instance.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31953,
      "normPath": "Conference Presentation LocalInstance Source",
      "path": "Conference Presentation LocalInstance[n] Source",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the status of the secondary video stream.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Off",
            "Receiving",
            "Sending"
          ],
          "type": "Literal"
        }
      },
      "id": 27304,
      "normPath": "Conference Presentation Mode",
      "path": "Conference Presentation Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Indicates which call protocol is used as default.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "H320",
            "H323",
            "SIP",
            "Spark",
            "Auto"
          ],
          "type": "Literal"
        }
      },
      "id": 29789,
      "normPath": "Conference SelectedCallProtocol",
      "path": "Conference SelectedCallProtocol",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the CallId for the participant locked as the prominent speaker in the conference.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27318,
      "normPath": "Conference SpeakerLock CallId",
      "path": "Conference SpeakerLock CallId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the speaker lock is enabled or not.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Auto",
            "Manual"
          ],
          "type": "Literal"
        }
      },
      "id": 27319,
      "normPath": "Conference SpeakerLock Mode",
      "path": "Conference SpeakerLock Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows a description of the current diagnostics alerts.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31954,
      "normPath": "Diagnostics Message Description",
      "path": "Diagnostics Message[n] Description",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the level of importance of the diagnostics message.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Critical",
            "Error",
            "Warning",
            "Info"
          ],
          "type": "Literal"
        }
      },
      "id": 31955,
      "normPath": "Diagnostics Message Level",
      "path": "Diagnostics Message[n] Level",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Additional information on the diagnostics alert, if available.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31956,
      "normPath": "Diagnostics Message References",
      "path": "Diagnostics Message[n] References",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows information on the results of the latest diagnostics on the device.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "CAPFOperationState",
            "CTLinstallation",
            "CUCMVendorConfigurationFile",
            "CallProtocolDualStackConfig",
            "CallProtocolIPStackPlatformCompatibility",
            "CallProtocolVcsProvisioningCompatibility",
            "CameraId",
            "CameraPairing",
            "CameraSerial",
            "CameraSoftwareVersion",
            "CameraStatus",
            "CameraDetected",
            "CamerasDetected",
            "CertificateExpiry",
            "ConfigurationFile",
            "DefaultCallProtocolRegistered",
            "EthernetDuplexMatches",
            "FanStatus",
            "PresenterTrack",
            "H320GatewayStatus",
            "H323GatekeeperStatus",
            "H323EncrAes256AndDHSize",
            "HasValidReleaseKey",
            "IpCameraStatus",
            "IPv4Assignment",
            "IPv6Assignment",
            "IPv6Mtu",
            "ISDNLinkCompatibility",
            "ISDNLinkIpStack",
            "ITLinstallation",
            "InvalidSIPTransportConfig",
            "LockDown",
            "RoomControl",
            "MediaBlockingDetected",
            "MacrosRuntimeStatus",
            "NetLinkStatus",
            "NetSpeedAutoNegotiated",
            "NetworkQuality",
            "NTPStatus",
            "OSDVideoOutput",
            "OutputConnectorLocations",
            "PeripheralSoftwareVersion",
            "PIILoggingMode",
            "ProvisioningDeveloperOptions",
            "ProvisioningModeAndStatus",
            "ProvisioningStatus",
            "SIPEncryption",
            "SIPProfileRegistration",
            "SIPProfileType",
            "SelectedVideoInputSourceConnected",
            "SipIceAndAnatConflict",
            "SIPListenPortAndRegistration",
            "TCPMediaFallback",
            "TemperatureCheck",
            "TLSVerifyRequiredCerts",
            "TouchPanelConnection",
            "ControlSystemConnection",
            "MediaPortRangeNegative",
            "MediaPortRangeTooSmall",
            "MediaPortRangeOdd",
            "MediaPortRangeValueSpace",
            "MediaPortRangeOverlap",
            "VideoPortRangeNegative",
            "VideoPortRangeTooSmall",
            "VideoPortRangeOdd",
            "VideoPortRangeValueSpace",
            "UltrasoundConfigSettings",
            "UltrasoundSpeakerAvailability",
            "ValidPasswords",
            "VideoFromInternalCamera",
            "VideoInputStability",
            "VideoInputSignalQuality",
            "WebexEdgeAccountPlusProvModeWebex",
            "WebexAccountPlusWebexEdgeEnabled",
            "WebexEdgeAccountPendingCloudRegistration",
            "ProvModeWebexAndWebexEdgeEnabled",
            "WebexConnectivity",
            "WebexOffline",
            "WebexAudioProximityConnectivity",
            "WebexLyraConnectivity",
            "WebexNotificationConnectivity",
            "WebexActivationRequired",
            "WebexShouldUpgradeCeSoftware",
            "WebexMustUpgradeCeSoftware",
            "SpeakerTrackFrontPanelMountedCorrectly",
            "SpeakerTrackMicrophoneConnection",
            "SpeakerTrackVideoInputs",
            "SpeakerTrackEthernetConnection",
            "ANATOnVCS",
            "RoomSchedulingConfiguration",
            "ECReferenceDelay",
            "AudioPairingNoise",
            "AudioPairingRate",
            "AudioPairingSNR",
            "AudioPairingInterference",
            "AudioPairingTokenDecode",
            "AudioInternalSpeakerDisabled",
            "AbnormalCallTermination",
            "HasActiveCallProtocol",
            "SipOrH323ButNotBothEnabled",
            "PresentationSourceSelection",
            "SoftwareUpgrade",
            "SoftwareUpgradeKeepsFailing",
            "PlatformSanity",
            "ContactInfoMismatch",
            "MicrophoneMuteOverride",
            "FirstTimeWizardNotCompleted",
            "CaptivePortalDetected",
            "MonitorDelay",
            "WifiCARequired",
            "MicrophonesConnected",
            "HdmiCecModeNoSound",
            "MicrophoneOverloaded",
            "HTTPFeedbackFailed",
            "HTTPSModeSecurity",
            "SignageTerminatedUnexpectedly",
            "SignageFailedToLoad",
            "EmbeddedWebViewTerminatedUnexpectedly",
            "EmbeddedWebViewFailedToLoad",
            "CompanionModeIncompatibilityLocal",
            "CompanionModeIncompatibilityRemote",
            "KioskMode",
            "AmplifierDetection",
            "CurrentNetworkQuality",
            "AmplifierFanStatus",
            "LowBattery",
            "PeripheralSoftwareUpgrade",
            "MissingDisplay",
            "MissingThirdDisplay",
            "PanoramaView",
            "PanoramaCameraHdmi",
            "WebRTCCalling",
            "CUCMAndCloudConfigurability",
            "DeveloperPreview",
            "MonitorFirmwareVersion",
            "NetworkSwitch",
            "CloudConfigurationWriteback",
            "WirelessConnectionStatus",
            "MicrophonePower",
            "DigitalMicrophoneStatus",
            "CallProtocolInvalidCloudProv",
            "NetworkConnectivity",
            "InternalXapiUsage",
            "USBMicType",
            "USBAudioSeparation",
            "BluetoothAudioInterference",
            "USBInterfaceType",
            "SnmpAvailability"
          ],
          "type": "Literal"
        }
      },
      "id": 36213,
      "normPath": "Diagnostics Message Type",
      "path": "Diagnostics Message[n] Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the current state of each of the four GPIO pins.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "High",
            "Low"
          ],
          "type": "Literal"
        }
      },
      "id": 32282,
      "normPath": "GPIO Pin State",
      "path": "GPIO Pin[n] State",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Returns the IPv4 address of the ISDN Gateway, if the video conferencing device is paired to one.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30831,
      "normPath": "H320 Gateway Address",
      "path": "H320 Gateway Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Returns the unique identification of the H320 Gateway, if the video conferencing device is paired with an ISDN Link.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30832,
      "normPath": "H320 Gateway Id",
      "path": "H320 Gateway Id",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Returns information on the type of calls the ISDN Gateway is configured for, if the video conferencing device is paired with an ISDN Link.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "BRI",
            "External",
            "G703",
            "PRI",
            "Unknown"
          ],
          "type": "Literal"
        }
      },
      "id": 30833,
      "normPath": "H320 Gateway Mode",
      "path": "H320 Gateway Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Returns the IPv6 address of the ISDN Gateway if the video conferencing device is paired to one.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30834,
      "normPath": "H320 Gateway Number",
      "path": "H320 Gateway Number",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the reason for rejected Gateway registration. Only available if the video conferencing device is connected to an ISDN Link.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30835,
      "normPath": "H320 Gateway Reason",
      "path": "H320 Gateway Reason",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Returns the state of the H320 Gateway, if the video conferencing device is paired with an ISDN Link.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Error",
            "Inactive",
            "OK",
            "OKWithWarning",
            "Warning",
            "NoConnection"
          ],
          "type": "Literal"
        }
      },
      "id": 30836,
      "normPath": "H320 Gateway Status",
      "path": "H320 Gateway Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Displays the IP address of the gatekeeper where the device is registered.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30837,
      "normPath": "H323 Gatekeeper Address",
      "path": "H323 Gatekeeper Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the port which is used when connecting to on the gatekeeper.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 28655,
      "normPath": "H323 Gatekeeper Port",
      "path": "H323 Gatekeeper Port",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the reason for rejected registration.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 28656,
      "normPath": "H323 Gatekeeper Reason",
      "path": "H323 Gatekeeper Reason",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the gatekeeper registration status.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Authenticated",
            "Authenticating",
            "Discovered",
            "Discovering",
            "Inactive",
            "Registered",
            "Registering",
            "Rejected",
            "Required"
          ],
          "type": "Literal"
        }
      },
      "id": 28657,
      "normPath": "H323 Gatekeeper Status",
      "path": "H323 Gatekeeper Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows whether there is a conflict between H.323 settings and xStatus H323 Mode Status.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 28658,
      "normPath": "H323 Mode Reason",
      "path": "H323 Mode Reason",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the status for H.323 registration.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Enabled",
            "Disabled"
          ],
          "type": "Literal"
        }
      },
      "id": 28659,
      "normPath": "H323 Mode Status",
      "path": "H323 Mode Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the feedback from the HTTP server. There can be up to 4 slots of servers requesting HTTP feedback and up to 15 expressions for each URL. See the xCommand HttpFeedback commands for more information.",
        "maxOccurrence": "n",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31958,
      "normPath": "HttpFeedback",
      "path": "HttpFeedback[n] Expression[n]",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the format of the HTTP Feedback feedback from the HTTP server.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31959,
      "normPath": "HttpFeedback Format",
      "path": "HttpFeedback[n] Format",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the status of the feedback sent to the HTTP server.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "OK",
            "Failed"
          ],
          "type": "Literal"
        }
      },
      "id": 31960,
      "normPath": "HttpFeedback Status",
      "path": "HttpFeedback[n] Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the URL (Uniform Resource Locator) of the HTTP server. There can be up to three HTTP servers, specified by the URL.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31961,
      "normPath": "HttpFeedback URL",
      "path": "HttpFeedback[n] URL",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the role of the incoming or outgoing audio channel.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Main",
            "Presentation"
          ],
          "type": "Literal"
        }
      },
      "id": 31967,
      "normPath": "MediaChannels Call Audio ChannelRole",
      "path": "MediaChannels Call[n] Channel[n] Audio ChannelRole",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of incoming or outgoing audio channels.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31968,
      "normPath": "MediaChannels Call Audio Channels",
      "path": "MediaChannels Call[n] Channel[n] Audio Channels",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Audio mute status of the incoming audio.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 31969,
      "normPath": "MediaChannels Call Audio Mute",
      "path": "MediaChannels Call[n] Channel[n] Audio Mute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the audio algorithm of the incoming or outgoing audio.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "AACLC",
            "AACLD",
            "AMR",
            "CiscoPCM16",
            "LPCM16",
            "L16-768",
            "ComfortNoise",
            "G711A",
            "G711Mu",
            "G722",
            "G7221",
            "G7221C",
            "G723_1",
            "G728",
            "G729",
            "G729A",
            "G729AB",
            "Off",
            "Opus",
            "Raw"
          ],
          "type": "Literal"
        }
      },
      "id": 31970,
      "normPath": "MediaChannels Call Audio Protocol",
      "path": "MediaChannels Call[n] Channel[n] Audio Protocol",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the direction of the call.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Incoming",
            "Outgoing"
          ],
          "type": "Literal"
        }
      },
      "id": 31971,
      "normPath": "MediaChannels Call Direction",
      "path": "MediaChannels Call[n] Channel[n] Direction",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the encryption status for audio or video on the incoming or outgoing call.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 31972,
      "normPath": "MediaChannels Call Encryption",
      "path": "MediaChannels Call[n] Channel[n] Encryption",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27654,
      "normPath": "MediaChannels Call Netstat Bytes",
      "path": "MediaChannels Call[n] Channel[n] Netstat Bytes",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27655,
      "normPath": "MediaChannels Call Netstat ChannelRate",
      "path": "MediaChannels Call[n] Channel[n] Netstat ChannelRate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27656,
      "normPath": "MediaChannels Call Netstat Jitter",
      "path": "MediaChannels Call[n] Channel[n] Netstat Jitter",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27657,
      "normPath": "MediaChannels Call Netstat LastIntervalLost",
      "path": "MediaChannels Call[n] Channel[n] Netstat LastIntervalLost",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27658,
      "normPath": "MediaChannels Call Netstat LastIntervalReceived",
      "path": "MediaChannels Call[n] Channel[n] Netstat LastIntervalReceived",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27659,
      "normPath": "MediaChannels Call Netstat Loss",
      "path": "MediaChannels Call[n] Channel[n] Netstat Loss",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27660,
      "normPath": "MediaChannels Call Netstat MaxJitter",
      "path": "MediaChannels Call[n] Channel[n] Netstat MaxJitter",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 27661,
      "normPath": "MediaChannels Call Netstat Packets",
      "path": "MediaChannels Call[n] Channel[n] Netstat Packets",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the ID of the Active Control participant on the incoming audio or video channel.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31973,
      "normPath": "MediaChannels Call ParticipantId",
      "path": "MediaChannels Call[n] Channel[n] ParticipantId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the media type on the incoming or outgoing channel.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Audio",
            "Video",
            "Data"
          ],
          "type": "Literal"
        }
      },
      "id": 31974,
      "normPath": "MediaChannels Call Type",
      "path": "MediaChannels Call[n] Channel[n] Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the role of the incoming or outgoing video channel.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Main",
            "Presentation"
          ],
          "type": "Literal"
        }
      },
      "id": 31975,
      "normPath": "MediaChannels Call Video ChannelRole",
      "path": "MediaChannels Call[n] Channel[n] Video ChannelRole",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the frame rate of the incoming or outgoing video channel.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31976,
      "normPath": "MediaChannels Call Video FrameRate",
      "path": "MediaChannels Call[n] Channel[n] Video FrameRate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the video algorithm of the incoming or outgoing video channel.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "H261",
            "H263",
            "H263p",
            "H263pp",
            "H264",
            "HEVC",
            "AV1",
            "JPEG",
            "MP4V",
            "Off",
            "Raw",
            "RDP"
          ],
          "type": "Literal"
        }
      },
      "id": 31977,
      "normPath": "MediaChannels Call Video Protocol",
      "path": "MediaChannels Call[n] Channel[n] Video Protocol",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the width (resolution in direction X) of the incoming or outgoing video.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31978,
      "normPath": "MediaChannels Call Video ResolutionX",
      "path": "MediaChannels Call[n] Channel[n] Video ResolutionX",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the height (resolution in direction Y) of the incoming or outgoing video.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 31979,
      "normPath": "MediaChannels Call Video ResolutionY",
      "path": "MediaChannels Call[n] Channel[n] Video ResolutionY",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of audio channels (none, mono, stereo) received over the channel in question.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32283,
      "normPath": "MediaChannels DirectShare Audio Channels",
      "path": "MediaChannels DirectShare[n] Channel[n] Audio Channels",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the audio codec used for the active incoming share session.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "AACLC",
            "AACLD",
            "AMR",
            "CiscoPCM16",
            "LPCM16",
            "L16-768",
            "ComfortNoise",
            "G711A",
            "G711Mu",
            "G722",
            "G7221",
            "G7221C",
            "G723_1",
            "G728",
            "G729",
            "G729A",
            "G729AB",
            "Off",
            "Opus",
            "Raw"
          ],
          "type": "Literal"
        }
      },
      "id": 32284,
      "normPath": "MediaChannels DirectShare Audio Protocol",
      "path": "MediaChannels DirectShare[n] Channel[n] Audio Protocol",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the encryption status for the incoming audio/video channel in question.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32285,
      "normPath": "MediaChannels DirectShare Encryption",
      "path": "MediaChannels DirectShare[n] Channel[n] Encryption",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the cumulative number of bytes received for the channel in question.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32286,
      "normPath": "MediaChannels DirectShare Netstat Bytes",
      "path": "MediaChannels DirectShare[n] Channel[n] Netstat Bytes",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the current incoming audio/video bandwidth for the channel in question.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32287,
      "normPath": "MediaChannels DirectShare Netstat ChannelRate",
      "path": "MediaChannels DirectShare[n] Channel[n] Netstat ChannelRate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the jitter currently measured for received audio/video on the incoming channel, as specified by RFC 3550.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32288,
      "normPath": "MediaChannels DirectShare Netstat Jitter",
      "path": "MediaChannels DirectShare[n] Channel[n] Netstat Jitter",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of lost audio/video packets during the last interval on the incoming channel in question.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32289,
      "normPath": "MediaChannels DirectShare Netstat LastIntervalLost",
      "path": "MediaChannels DirectShare[n] Channel[n] Netstat LastIntervalLost",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of received audio/video packets during the last interval over the channel in question.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32290,
      "normPath": "MediaChannels DirectShare Netstat LastIntervalReceived",
      "path": "MediaChannels DirectShare[n] Channel[n] Netstat LastIntervalReceived",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of audio/video packets lost for the channel in question.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32291,
      "normPath": "MediaChannels DirectShare Netstat Loss",
      "path": "MediaChannels DirectShare[n] Channel[n] Netstat Loss",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the maximum jitter measured on the channel in question during the last interval (about 5 seconds).",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32292,
      "normPath": "MediaChannels DirectShare Netstat MaxJitter",
      "path": "MediaChannels DirectShare[n] Channel[n] Netstat MaxJitter",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the total number of packets received for the channel in question.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32293,
      "normPath": "MediaChannels DirectShare Netstat Packets",
      "path": "MediaChannels DirectShare[n] Channel[n] Netstat Packets",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the received frame rate for the channel in question. Note: Only applicable to video channels.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32294,
      "normPath": "MediaChannels DirectShare Video FrameRate",
      "path": "MediaChannels DirectShare[n] Channel[n] Video FrameRate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the video codec used for the channel in question.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "H261",
            "H263",
            "H263p",
            "H263pp",
            "H264",
            "HEVC",
            "AV1",
            "JPEG",
            "MP4V",
            "Off",
            "Raw",
            "RDP"
          ],
          "type": "Literal"
        }
      },
      "id": 32295,
      "normPath": "MediaChannels DirectShare Video Protocol",
      "path": "MediaChannels DirectShare[n] Channel[n] Video Protocol",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the width (resolution in the x-direction) of the video stream received. ",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32296,
      "normPath": "MediaChannels DirectShare Video ResolutionX",
      "path": "MediaChannels DirectShare[n] Channel[n] Video ResolutionX",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the height (resolution in y-direction) of the video stream received.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32297,
      "normPath": "MediaChannels DirectShare Video ResolutionY",
      "path": "MediaChannels DirectShare[n] Channel[n] Video ResolutionY",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the first network address of both receiving and sending devices.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31980,
      "normPath": "Network CDP Address",
      "path": "Network[n] CDP Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Describes the functional capability for the switch in form of a device type. See documentation for CDP protocol for more information.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31981,
      "normPath": "Network CDP Capabilities",
      "path": "Network[n] CDP Capabilities",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Identifies the name of the switch in form of a character string.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31982,
      "normPath": "Network CDP DeviceId",
      "path": "Network[n] CDP DeviceId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Indicates the status (duplex configuration) of the CDP broadcast interface. Used by network operators to diagnose connectivity problems between adjacent network elements.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31983,
      "normPath": "Network CDP Duplex",
      "path": "Network[n] CDP Duplex",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the hardware platform name of the switch connected to the device.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31984,
      "normPath": "Network CDP Platform",
      "path": "Network[n] CDP Platform",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the identification the switch uses of the port the device is connected to.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31985,
      "normPath": "Network CDP PortID",
      "path": "Network[n] CDP PortID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the management address used to configure and monitor the switch the device is connected to.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31986,
      "normPath": "Network CDP PrimaryMgmtAddress",
      "path": "Network[n] CDP PrimaryMgmtAddress",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the SysName as configured in the switch the device is connected to.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31987,
      "normPath": "Network CDP SysName",
      "path": "Network[n] CDP SysName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the SysObjectID as configured in the switch the device is connected to.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31988,
      "normPath": "Network CDP SysObjectID",
      "path": "Network[n] CDP SysObjectID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns information about the software release version the switch is running.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31990,
      "normPath": "Network CDP Version",
      "path": "Network[n] CDP Version",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Identifies the VLAN used for VoIP traffic from the device to the switch. For more information see documentation of the IEEE 802.1Q protocol.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31991,
      "normPath": "Network CDP VoIPApplianceVlanID",
      "path": "Network[n] CDP VoIPApplianceVlanID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the switch's configured VTP management domain name-string.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31989,
      "normPath": "Network CDP VTPMgmtDomain",
      "path": "Network[n] CDP VTPMgmtDomain",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the domain name.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31992,
      "normPath": "Network DNS Domain Name",
      "path": "Network[n] DNS Domain Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the IP address of the DNS server.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31993,
      "normPath": "Network Address",
      "path": "Network[n] DNS Server[n] Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the MAC (Media Access Control) address for the Ethernet interface.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31994,
      "normPath": "Network Ethernet MacAddress",
      "path": "Network[n] Ethernet MacAddress",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the Ethernet speed in Mbps. The speed can be in full-duplex or half-duplex.",
        "role": [
          "Admin",
          "Integrator"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31995,
      "normPath": "Network Ethernet Speed",
      "path": "Network[n] Ethernet Speed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the IPv4 address that uniquely identifies this device.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 31996,
      "normPath": "Network IPv4 Address",
      "path": "Network[n] IPv4 Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the address of the IPv4 gateway.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32002,
      "normPath": "Network IPv4 Gateway",
      "path": "Network[n] IPv4 Gateway",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the subnet mask which determines which subnet an IPv4 address belongs to.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32003,
      "normPath": "Network IPv4 SubnetMask",
      "path": "Network[n] IPv4 SubnetMask",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the IPv6 address that uniquely identifies this device.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32004,
      "normPath": "Network IPv6 Address",
      "path": "Network[n] IPv6 Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the address of the IPv6 gateway.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32005,
      "normPath": "Network IPv6 Gateway",
      "path": "Network[n] IPv6 Gateway",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the IPv6 link local address that is displayed on the primary user interface.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32006,
      "normPath": "Network IPv6 LinkLocalAddress",
      "path": "Network[n] IPv6 LinkLocalAddress",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The feedback shows the VLAN Voice ID.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32008,
      "normPath": "Network VLAN Voice VlanId",
      "path": "Network[n] VLAN Voice VlanId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the Basic Service Set Identifiers (BSSID) used for the Wi-Fi connection.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32298,
      "normPath": "Network Wifi BSSID",
      "path": "Network[n] Wifi BSSID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the channel used for the Wi-Fi connection.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32299,
      "normPath": "Network Wifi Channel",
      "path": "Network[n] Wifi Channel",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the frequency corresponding to the Wi-Fi channel.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32300,
      "normPath": "Network Wifi Frequency",
      "path": "Network[n] Wifi Frequency",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Indicates whether the Wi-Fi is enabled (on) or not (off).",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 33842,
      "normPath": "Network Wifi InterfaceEnabled",
      "path": "Network[n] Wifi InterfaceEnabled",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Provides a description of why the Wi-Fi interface is enabled or not.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33843,
      "normPath": "Network Wifi InterfaceReason",
      "path": "Network[n] Wifi InterfaceReason",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the MacAddress used for the Wi-Fi connection.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32301,
      "normPath": "Network Wifi MacAddress",
      "path": "Network[n] Wifi MacAddress",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 34549,
      "normPath": "Network Wifi Noise",
      "path": "Network[n] Wifi Noise",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the Phase2Method used for the Wi-Fi connection, if applicable.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32302,
      "normPath": "Network Wifi Phase2Method",
      "path": "Network[n] Wifi Phase2Method",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the Raw SSID of the Wi-Fi connection.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32304,
      "normPath": "Network Wifi RawSSID",
      "path": "Network[n] Wifi RawSSID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the reason defined for the Wi-Fi connection, if applicable.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32305,
      "normPath": "Network Wifi Reason",
      "path": "Network[n] Wifi Reason",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the region of the Wi-Fi connection.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32306,
      "normPath": "Network Wifi Region",
      "path": "Network[n] Wifi Region",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the Received Signal Strength Indicator (RSSI) used by the Wi-Fi connection.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32303,
      "normPath": "Network Wifi RSSI",
      "path": "Network[n] Wifi RSSI",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33537,
      "normPath": "Network AuthType",
      "path": "Network[n] Wifi ScanResult[n] AuthType",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33538,
      "normPath": "Network BSSID",
      "path": "Network[n] Wifi ScanResult[n] BSSID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns all the RawSSID values found in a scan result. Note that you must run a scan (e.g., \"Network Wifi Scan Start\") before this will yield results.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33844,
      "normPath": "Network RawSSID",
      "path": "Network[n] Wifi ScanResult[n] RawSSID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns all the SignalLevel values found in a scan result. Note that you must run a scan (e.g., \"Network Wifi Scan Start\") before this will yield results.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33846,
      "normPath": "Network SignalLevel",
      "path": "Network[n] Wifi ScanResult[n] SignalLevel",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns all the SSID values found in a scan result. Note that you must run a scan (e.g., \"Network Wifi Scan Start\") before this will yield results.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33845,
      "normPath": "Network SSID",
      "path": "Network[n] Wifi ScanResult[n] SSID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 35065,
      "normPath": "Network Wifi SNR",
      "path": "Network[n] Wifi SNR",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the transmit speed (uplink) of the Wi-Fi connection.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33847,
      "normPath": "Network Wifi Speed",
      "path": "Network[n] Wifi Speed",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the Server Set Identifier (SSID) of the Wi-Fi connection.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32307,
      "normPath": "Network Wifi SSID",
      "path": "Network[n] Wifi SSID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the status of the Wi-Fi network connection.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Associating",
            "Connected",
            "Disconnected",
            "AuthFailed",
            "Failed",
            "Other"
          ],
          "type": "Literal"
        }
      },
      "id": 32313,
      "normPath": "Network Wifi Status",
      "path": "Network[n] Wifi Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the encryption type of the Wi-Fi network connection.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32314,
      "normPath": "Network Wifi Type",
      "path": "Network[n] Wifi Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27758,
      "normPath": "NetworkServices NTP CurrentAddress",
      "path": "NetworkServices NTP CurrentAddress",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Returns the address of the NTP server(s) the device is using.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32009,
      "normPath": "NetworkServices NTP Server Address",
      "path": "NetworkServices NTP Server[n] Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Returns the status of the devices synchronizing with the NTP server.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Discarded",
            "Synced",
            "NotSynced",
            "Unknown",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 30643,
      "normPath": "NetworkServices NTP Status",
      "path": "NetworkServices NTP Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reports whether or not the UPnP service advertises the device's presence on the network. The advertisement permits a touch controller to discover the device automatically, and you do not need to manually enter the device's IP address in order to pair the touch controller.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Running",
            "Stopped"
          ],
          "type": "Literal"
        }
      },
      "id": 33910,
      "normPath": "NetworkServices UPnP Status",
      "path": "NetworkServices UPnP Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows hardware information about connected device.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32010,
      "normPath": "Peripherals ConnectedDevice HardwareInfo",
      "path": "Peripherals ConnectedDevice[n] HardwareInfo",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the MAC-address of the connected device.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32011,
      "normPath": "Peripherals ConnectedDevice ID",
      "path": "Peripherals ConnectedDevice[n] ID",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the product name of connected device.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32012,
      "normPath": "Peripherals ConnectedDevice Name",
      "path": "Peripherals ConnectedDevice[n] Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the network address of connected device.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33848,
      "normPath": "Peripherals ConnectedDevice NetworkAddress",
      "path": "Peripherals ConnectedDevice[n] NetworkAddress",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the air quality index as reported by the Room Navigator with the specified device id. The values are as defined by the German Federal Environmental Agency (UBA).",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33849,
      "normPath": "Peripherals ConnectedDevice RoomAnalytics AirQuality Index",
      "path": "Peripherals ConnectedDevice[n] RoomAnalytics AirQuality Index",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the ambient temperature as reported by the Room Navigator with the specified device id.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33850,
      "normPath": "Peripherals ConnectedDevice RoomAnalytics AmbientTemperature",
      "path": "Peripherals ConnectedDevice[n] RoomAnalytics AmbientTemperature",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the relative humidity as reported by the Room Navigator with the specified device id.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33851,
      "normPath": "Peripherals ConnectedDevice RoomAnalytics RelativeHumidity",
      "path": "Peripherals ConnectedDevice[n] RoomAnalytics RelativeHumidity",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the serial number of a connected peripheral device, for example a touch controller.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33852,
      "normPath": "Peripherals ConnectedDevice SerialNumber",
      "path": "Peripherals ConnectedDevice[n] SerialNumber",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows information of the software version running on the connected device.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32014,
      "normPath": "Peripherals ConnectedDevice SoftwareInfo",
      "path": "Peripherals ConnectedDevice[n] SoftwareInfo",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows peripheral devices that are currently connected to the video conferencing device.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Connected",
            "ResponseTimedOut",
            "Unpairing",
            "LostConnection"
          ],
          "type": "Literal"
        }
      },
      "id": 32015,
      "normPath": "Peripherals ConnectedDevice Status",
      "path": "Peripherals ConnectedDevice[n] Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the type of a peripheral that is connected to the video conferencing device. Note: The Precision 60 and Quad cameras returns the value Camera. A SpeakerTrack 60 camera returns the value SpeakerTracker. Only recognized Cisco headsets returns the value Headset.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "AudioAmplifier",
            "AudioMicrophone",
            "Byod",
            "Camera",
            "ControlSystem",
            "InputDevice",
            "ISDNLink",
            "Other",
            "SpeakerTracker",
            "TouchPanel",
            "Headset",
            "RoomScheduler"
          ],
          "type": "Literal"
        }
      },
      "id": 33020,
      "normPath": "Peripherals ConnectedDevice Type",
      "path": "Peripherals ConnectedDevice[n] Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows that a connected device has failed during an upgrade and provides a reason.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32017,
      "normPath": "Peripherals ConnectedDevice UpgradeFailureReason",
      "path": "Peripherals ConnectedDevice[n] UpgradeFailureReason",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the status of the previous software upgrade on the currently connected peripherals.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Downloading",
            "Failed",
            "Installing",
            "InstallationReady",
            "None",
            "Succeeded",
            "Rebooting",
            "Retrying",
            "Aborted",
            "Paused"
          ],
          "type": "Literal"
        }
      },
      "id": 32018,
      "normPath": "Peripherals ConnectedDevice UpgradeStatus",
      "path": "Peripherals ConnectedDevice[n] UpgradeStatus",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the upgrade URL for the connected device.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32019,
      "normPath": "Peripherals ConnectedDevice UpgradeURL",
      "path": "Peripherals ConnectedDevice[n] UpgradeURL",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "You can provision custom elements to multiple devices by using a customization template (a backup file). This status reports the checksum of the last customization template that has been uploaded to the device. Also see the xCommand Provisioning Service Fetch command.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30839,
      "normPath": "Provisioning CUCM Customization Checksum",
      "path": "Provisioning CUCM Customization Checksum",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows if Extension Mobility is enabled for a CUCM registered device.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 28669,
      "normPath": "Provisioning CUCM ExtensionMobility Enabled",
      "path": "Provisioning CUCM ExtensionMobility Enabled",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Returns the user id that was last logged in to the device. Only in use if CUCM Extension Mobility is enabled, and CUCM is configured to remember the last logged in user on a device.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30840,
      "normPath": "Provisioning CUCM ExtensionMobility LastLoggedInUserId",
      "path": "Provisioning CUCM ExtensionMobility LastLoggedInUserId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows if someone is logged in to Extension Mobility or not.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 28671,
      "normPath": "Provisioning CUCM ExtensionMobility LoggedIn",
      "path": "Provisioning CUCM ExtensionMobility LoggedIn",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Specifies the room type setup configured for this device.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Briefing",
            "Classroom",
            "Standard"
          ],
          "type": "Literal"
        }
      },
      "id": 28680,
      "normPath": "Provisioning RoomType",
      "path": "Provisioning RoomType",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Briefing",
            "Classroom",
            "Standard"
          ],
          "type": "Literal"
        },
        "description": "Specifies the room type setup configured for this device."
      },
      "id": 29346,
      "normPath": "Provisioning RoomType",
      "path": "Provisioning RoomType",
      "products": [
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows date and time for when the current software upgrade was completed.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27778,
      "normPath": "Provisioning Software Current CompletedAt",
      "path": "Provisioning Software Current CompletedAt",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the URL that the current software was uploaded from.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27779,
      "normPath": "Provisioning Software Current URL",
      "path": "Provisioning Software Current URL",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the version ID of the current software.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27780,
      "normPath": "Provisioning Software Current VersionId",
      "path": "Provisioning Software Current VersionId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the date and time for the latest software upgrade.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27786,
      "normPath": "Provisioning Software UpgradeStatus LastChange",
      "path": "Provisioning Software UpgradeStatus LastChange",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the system message for the software upgrade.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27787,
      "normPath": "Provisioning Software UpgradeStatus Message",
      "path": "Provisioning Software UpgradeStatus Message",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the phase of the software upgrade.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "AboutToInstallUpgrade",
            "DownloadDone",
            "DownloadPaused",
            "DownloadPending",
            "Downloading",
            "Installing",
            "InstallingPeripherals",
            "None",
            "Postponed",
            "UpgradingPeripherals"
          ],
          "type": "Literal"
        }
      },
      "id": 30114,
      "normPath": "Provisioning Software UpgradeStatus Phase",
      "path": "Provisioning Software UpgradeStatus Phase",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the ID of the session for the software upgrade.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27791,
      "normPath": "Provisioning Software UpgradeStatus SessionId",
      "path": "Provisioning Software UpgradeStatus SessionId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the status of the software upgrade.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Failed",
            "InProgress",
            "InstallationFailed",
            "None",
            "Succeeded"
          ],
          "type": "Literal"
        }
      },
      "id": 27792,
      "normPath": "Provisioning Software UpgradeStatus Status",
      "path": "Provisioning Software UpgradeStatus Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows how urgently the software needs to be upgraded.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Low",
            "Medium",
            "Critical"
          ],
          "type": "Literal"
        }
      },
      "id": 27794,
      "normPath": "Provisioning Software UpgradeStatus Urgency",
      "path": "Provisioning Software UpgradeStatus Urgency",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the URL that the new software currently is being uploaded and installed from.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27793,
      "normPath": "Provisioning Software UpgradeStatus URL",
      "path": "Provisioning Software UpgradeStatus URL",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the version ID of the software currently being uploaded and installed.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27795,
      "normPath": "Provisioning Software UpgradeStatus VersionId",
      "path": "Provisioning Software UpgradeStatus VersionId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the status of the provisioning.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "AuthenticationFailed",
            "ConfigError",
            "Failed",
            "Idle",
            "NeedConfig",
            "Provisioning",
            "Provisioned"
          ],
          "type": "Literal"
        }
      },
      "id": 27796,
      "normPath": "Provisioning Status",
      "path": "Provisioning Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether proximity services are available on the device.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Available",
            "Deactivated",
            "Disabled"
          ],
          "type": "Literal"
        }
      },
      "id": 30645,
      "normPath": "Proximity Services Availability",
      "path": "Proximity Services Availability",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The device can be set up to estimate the stationary ambient noise level in the room (refer to the RoomAnalytics AmbientNoiseEstimation Mode setting). The result is reported in this status. The value is an A-weighted decibel value (dBA). The value is only a relative value and should not be treated as an absolute SPL (Sound Pressure Level) value. Especially not for third-party microphones that the device doesn't know the sensitivity of.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33853,
      "normPath": "RoomAnalytics AmbientNoise Level A",
      "path": "RoomAnalytics AmbientNoise Level A",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 29860,
      "normPath": "RoomAnalytics AmbientTemperature",
      "path": "RoomAnalytics AmbientTemperature",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        },
        "description": "The device can detect the presence of people at close proximity. This status depends on the camera running. To use, we recommend turning on the configuration \"RoomAnalytics PeopleCountOutOfCall\". This will cause the camera to turn on periodically and CloseProximity will be updated. If not, the status will only be updated in conversation or when self-view is on."
      },
      "id": 29581,
      "normPath": "RoomAnalytics Engagement CloseProximity",
      "path": "RoomAnalytics Engagement CloseProximity",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The device can detect the presence of people at close proximity. This status depends on the camera running. To use, we recommend turning on the configuration \"RoomAnalytics PeopleCountOutOfCall\". This will cause the camera to turn on periodically and CloseProximity will be updated. If not, the status will only be updated in conversation or when self-view is on.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 30950,
      "normPath": "RoomAnalytics Engagement CloseProximity",
      "path": "RoomAnalytics Engagement CloseProximity",
      "products": [
        "havella",
        "hopen",
        "spitsbergen"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33532,
      "normPath": "RoomAnalytics PeopleCount Capacity",
      "path": "RoomAnalytics PeopleCount Capacity",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Shows the number of people who are in the room by use of face detection. The call must have a duration of minimum two minutes in order to get a reliable average. Persons that have not faced the camera will not be counted. If there are objects or pictures in the room that can be detected as faces, these might be counted. The device will not keep record of who was in the room, only the average number of faces that were detected. When the device is in standby, or if the feature is turned off, the number returned is -1. Applies only if you have a Cisco Quad Camera or SpeakerTrack 60 camera."
      },
      "id": 27810,
      "normPath": "RoomAnalytics PeopleCount Current",
      "path": "RoomAnalytics PeopleCount Current",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of people who are in the room by use of face detection. The call must have a duration of minimum two minutes in order to get a reliable average. Persons that have not faced the camera will not be counted. If there are objects or pictures in the room that can be detected as faces, these might be counted. The device will not keep record of who was in the room, only the average number of faces that were detected. When the device is in standby, or if the feature is turned off, the number returned is -1.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 30951,
      "normPath": "RoomAnalytics PeopleCount Current",
      "path": "RoomAnalytics PeopleCount Current",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of people who are in the room by use of face detection. The call must have a duration of minimum two minutes in order to get a reliable average. Persons that have not faced the camera will not be counted. If there are objects or pictures in the room that can be detected as faces, these might be counted. The device will not keep record of who was in the room, only the average number of faces that were detected. When the device is in standby, or if the feature is turned off, the number returned is -1. Applies only if you have a Cisco Quad Camera.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 30994,
      "normPath": "RoomAnalytics PeopleCount Current",
      "path": "RoomAnalytics PeopleCount Current",
      "products": [
        "svea"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of people who are in the room by use of face detection. The call must have a duration of minimum two minutes in order to get a reliable average. Persons that have not faced the camera will not be counted. If there are objects or pictures in the room that can be detected as faces, these might be counted. The device will not keep record of who was in the room, only the average number of faces that were detected. When the device is in standby, or if the feature is turned off, the number returned is -1. Applies only if you have a Cisco Quad Camera or SpeakerTrack 60 camera.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33999,
      "normPath": "RoomAnalytics PeopleCount Current",
      "path": "RoomAnalytics PeopleCount Current",
      "products": [
        "barents"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if there are people present in the room or not. The feature is based on ultrasound. The device will not keep record of who was in the room, only whether or not there are people present in the room. When someone enters the room, the status is updated immediately. After the room gets vacant, it may take up to two minutes for the status to change.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Yes",
            "No",
            "Unknown"
          ],
          "type": "Literal"
        }
      },
      "id": 30843,
      "normPath": "RoomAnalytics PeoplePresence",
      "path": "RoomAnalytics PeoplePresence",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 29822,
      "normPath": "RoomAnalytics RelativeHumidity",
      "path": "RoomAnalytics RelativeHumidity",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the time and date that the most recent reverberation analytics were measured. To enable ReverberationTime analytics, set xconfig RoomAnalytics ReverberationTime Mode to ON.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33854,
      "normPath": "RoomAnalytics ReverberationTime LastRun",
      "path": "RoomAnalytics ReverberationTime LastRun",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the middle RT60, which is the average of the 500 Hz and 1000 Hz value. This is reported in milliseconds. To enable ReverberationTime analytics, set xconfig RoomAnalytics ReverberationTime Mode to ON.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33855,
      "normPath": "RoomAnalytics ReverberationTime Middle RT60",
      "path": "RoomAnalytics ReverberationTime Middle RT60",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33315,
      "normPath": "RoomAnalytics ReverberationTime Octaves CenterFrequency",
      "path": "RoomAnalytics ReverberationTime Octaves[n] CenterFrequency",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 33316,
      "normPath": "RoomAnalytics ReverberationTime Octaves RT60",
      "path": "RoomAnalytics ReverberationTime Octaves[n] RT60",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "If the RoomAnalytics AmbientNoiseEstimation Mode setting is On, the device will in addition to the ambient noise also measure the sound level in the room. The result is reported in this status every 10th second. The value is an A-weighted averaged sound level in decibel (dBA). The value is only a relative value and should not be treated as an absolute SPL (Sound Pressure Level) value. Especially not for third-party microphones that the device doesn't know the sensitivity of.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 30844,
      "normPath": "RoomAnalytics Sound Level A",
      "path": "RoomAnalytics Sound Level A",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if a camera preset is stored at this position.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 32087,
      "normPath": "RoomPreset Defined",
      "path": "RoomPreset[n] Defined",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lists the configured name for the specific preset.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32088,
      "normPath": "RoomPreset Description",
      "path": "RoomPreset[n] Description",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the camera preset type.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "All",
            "Camera"
          ],
          "type": "Literal"
        }
      },
      "id": 32089,
      "normPath": "RoomPreset Type",
      "path": "RoomPreset[n] Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows whether call history logging is set to persistent or non-persistent mode. Persistent is the default mode.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "NonPersistent",
            "Persistent"
          ],
          "type": "Literal"
        }
      },
      "id": 27818,
      "normPath": "Security Persistency CallHistory",
      "path": "Security Persistency CallHistory",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows whether all the device's configurations are set to persistent or non-persistent mode. Persistent is the default mode.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "NonPersistent",
            "Persistent"
          ],
          "type": "Literal"
        }
      },
      "id": 30646,
      "normPath": "Security Persistency Configurations",
      "path": "Security Persistency Configurations",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows whether DHCP logging is set to persistent or non-persistent mode. Persistent is the default mode.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "NonPersistent",
            "Persistent"
          ],
          "type": "Literal"
        }
      },
      "id": 27820,
      "normPath": "Security Persistency DHCP",
      "path": "Security Persistency DHCP",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows whether internal logging is set to persistent or non-persistent mode. Persistent is the default mode.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "NonPersistent",
            "Persistent"
          ],
          "type": "Literal"
        }
      },
      "id": 27821,
      "normPath": "Security Persistency InternalLogging",
      "path": "Security Persistency InternalLogging",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows whether local phone book is set to persistent or non-persistent mode. Persistent is the default mode.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "NonPersistent",
            "Persistent"
          ],
          "type": "Literal"
        }
      },
      "id": 27822,
      "normPath": "Security Persistency LocalPhonebook",
      "path": "Security Persistency LocalPhonebook",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 28685,
      "normPath": "SIP AlternateURI Alias URI",
      "path": "SIP AlternateURI Alias[n] URI",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 28686,
      "normPath": "SIP AlternateURI Primary URI",
      "path": "SIP AlternateURI Primary URI",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows which authentication mechanism is used when registering to the SIP Proxy Server.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Digest",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 28687,
      "normPath": "SIP Authentication",
      "path": "SIP Authentication",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Returns the URI that is displayed on the user interface for the forwarded call.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 28688,
      "normPath": "SIP CallForward DisplayName",
      "path": "SIP CallForward DisplayName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Indicates whether the call forward mode for SIP is set to on or off.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 28689,
      "normPath": "SIP CallForward Mode",
      "path": "SIP CallForward Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Indicates the address the incoming calls are directed to when call forward mode is set on.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 28690,
      "normPath": "SIP CallForward URI",
      "path": "SIP CallForward URI",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Indicates how many new messages are in the mailbox.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 28691,
      "normPath": "SIP Mailbox MessagesWaiting",
      "path": "SIP Mailbox MessagesWaiting",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Returns the URI for your SIP mailbox.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 28692,
      "normPath": "SIP Mailbox URI",
      "path": "SIP Mailbox URI",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the address of the SIP Proxy that the device communicates with.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32090,
      "normPath": "SIP Proxy Address",
      "path": "SIP Proxy[n] Address",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the status of the communication between the device and the SIP Proxy server.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Active",
            "AuthenticationFailed",
            "DNSFailed",
            "Off",
            "Timeout",
            "UnableTCP",
            "UnableTLS",
            "Unknown"
          ],
          "type": "Literal"
        }
      },
      "id": 32091,
      "normPath": "SIP Proxy Status",
      "path": "SIP Proxy[n] Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows which authentication mechanism is used when registering to the SIP Proxy Server.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Digest",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 32092,
      "normPath": "SIP Registration Authentication",
      "path": "SIP Registration[n] Authentication",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows a message to explain the reason why the SIP registration failed.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32093,
      "normPath": "SIP Registration Reason",
      "path": "SIP Registration[n] Reason",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the status of the registration to the SIP Proxy Server.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Deregister",
            "Failed",
            "Inactive",
            "Registered",
            "Registering"
          ],
          "type": "Literal"
        }
      },
      "id": 32094,
      "normPath": "SIP Registration Status",
      "path": "SIP Registration[n] Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the URI used for registration to the SIP Proxy server.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32095,
      "normPath": "SIP Registration URI",
      "path": "SIP Registration[n] URI",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows the encryption status of the signaling with the SIP Proxy server.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 28699,
      "normPath": "SIP Secure",
      "path": "SIP Secure",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "onprem",
        "description": "Shows whether or not the SSL certificate of the server that the device tries to register to is included in the device's trusted CA-list. The server is typically a Cisco VCS or CUCM.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 30845,
      "normPath": "SIP Verified",
      "path": "SIP Verified",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "None",
            "Standby",
            "Networked",
            "DisplayOff"
          ],
          "type": "Literal"
        }
      },
      "id": 35020,
      "normPath": "Standby Level",
      "path": "Standby Level",
      "products": [
        "octavio"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the device is in standby mode or not.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Standby",
            "EnteringStandby",
            "Halfwake",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 30647,
      "normPath": "Standby State",
      "path": "Standby State",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 30119,
      "normPath": "SystemUnit DeveloperPreview Mode",
      "path": "SystemUnit DeveloperPreview Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 32770,
      "normPath": "SystemUnit Hardware HasWifi",
      "path": "SystemUnit Hardware HasWifi",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The devices have different sets of compatibility levels. Please check the release note to find the compatibility levels and minimum software version required for your product.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30649,
      "normPath": "SystemUnit Hardware Module CompatibilityLevel",
      "path": "SystemUnit Hardware Module CompatibilityLevel",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the serial number of the hardware module in the device.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30652,
      "normPath": "SystemUnit Hardware Module SerialNumber",
      "path": "SystemUnit Hardware Module SerialNumber",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "The feedback shows the speed (rpm) for the specified fan.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32020,
      "normPath": "SystemUnit Hardware Monitoring Fan Status",
      "path": "SystemUnit Hardware Monitoring Fan[n] Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the current temperature alarm level. \"High\" is meant to raise attention to the temperature trend since the operating temperature is higher than normal. At \"Critical\" level the device will shut down processes and processors to prevent any damage to the device. To avoid high operating temperatures, make sure the device is operating in a ventilated environment.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Unknown",
            "Normal",
            "High",
            "Critical"
          ],
          "type": "Literal"
        }
      },
      "id": 30847,
      "normPath": "SystemUnit Hardware Monitoring Temperature Status",
      "path": "SystemUnit Hardware Monitoring Temperature Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 29588,
      "normPath": "SystemUnit Hardware USBC Connected",
      "path": "SystemUnit Hardware USBC[n] Connected",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lists text related to important system notifications. Notifications are issued e.g. when a device was rebooted because of a software upgrade, or when a factory reset has been performed. All the notifications can be removed from the list by issuing the xCommand SystemUnit Notifications RemoveAll command.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32021,
      "normPath": "SystemUnit Notifications Notification Text",
      "path": "SystemUnit Notifications Notification[n] Text",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Lists the system notification types. Notifications are issued e.g. when a device is rebooted because of a software upgrade, or when a factory reset is performed. All the notifications can be removed from the list by issuing the xCommand SystemUnit Notifications RemoveAll command.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Other",
            "RebootRequired",
            "SoftwareUpgradeFailed",
            "SoftwareUpgradeOK"
          ],
          "type": "Literal"
        }
      },
      "id": 33856,
      "normPath": "SystemUnit Notifications Notification Type",
      "path": "SystemUnit Notifications Notification[n] Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the product identity.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27994,
      "normPath": "SystemUnit ProductId",
      "path": "SystemUnit ProductId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the product platform.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27995,
      "normPath": "SystemUnit ProductPlatform",
      "path": "SystemUnit ProductPlatform",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the product type.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 27996,
      "normPath": "SystemUnit ProductType",
      "path": "SystemUnit ProductType",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the name of the software that is installed on the device, as it is displayed in the UI.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30654,
      "normPath": "SystemUnit Software DisplayName",
      "path": "SystemUnit Software DisplayName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the name of the software that is installed on the device.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30655,
      "normPath": "SystemUnit Software Name",
      "path": "SystemUnit Software Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        },
        "description": "Shows if the device has the option key or the software installed that supports the encryption functionality."
      },
      "id": 33857,
      "normPath": "SystemUnit Software OptionKeys Encryption",
      "path": "SystemUnit Software OptionKeys Encryption",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if the device has the option key or the software installed that supports the encryption functionality.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 34000,
      "normPath": "SystemUnit Software OptionKeys Encryption",
      "path": "SystemUnit Software OptionKeys Encryption",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if the device has the option key installed that supports the MultiSite functionality.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True",
            "NotApplicable"
          ],
          "type": "Literal"
        }
      },
      "id": 30848,
      "normPath": "SystemUnit Software OptionKeys MultiSite",
      "path": "SystemUnit Software OptionKeys MultiSite",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the device has the remote monitoring option key installed. The remote monitoring option key enables snapshots from the web interface, and from a remote paired touch controller.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 33858,
      "normPath": "SystemUnit Software OptionKeys RemoteMonitoring",
      "path": "SystemUnit Software OptionKeys RemoteMonitoring",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the release date of the software installed on the device.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30659,
      "normPath": "SystemUnit Software ReleaseDate",
      "path": "SystemUnit Software ReleaseDate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the software version installed on the device.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30660,
      "normPath": "SystemUnit Software Version",
      "path": "SystemUnit Software Version",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Closed",
            "Open"
          ],
          "type": "Literal"
        }
      },
      "id": 30030,
      "normPath": "SystemUnit State CameraLid",
      "path": "SystemUnit State CameraLid",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of active calls.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 28004,
      "normPath": "SystemUnit State NumberOfActiveCalls",
      "path": "SystemUnit State NumberOfActiveCalls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of calls in progress.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 28005,
      "normPath": "SystemUnit State NumberOfInProgressCalls",
      "path": "SystemUnit State NumberOfInProgressCalls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of suspended calls.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 28006,
      "normPath": "SystemUnit State NumberOfSuspendedCalls",
      "path": "SystemUnit State NumberOfSuspendedCalls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the number of seconds since the last restart of the device.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 30663,
      "normPath": "SystemUnit Uptime",
      "path": "SystemUnit Uptime",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the date and time set on the device.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30664,
      "normPath": "Time SystemTime",
      "path": "Time SystemTime",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Returns the customid for the image used for the background, if applicable. The background image is displayed as a background on both the main screen and on the touch panel when the video system is in the awake state."
      },
      "id": 33046,
      "normPath": "UserInterface Branding CustomId Background",
      "path": "UserInterface Branding CustomId Background",
      "products": [
        "bandai",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the customid for the image used for the background, if applicable. The background image is displayed as a background on both the main screen and on the touch panel when the video system is in the awake state.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 34001,
      "normPath": "UserInterface Branding CustomId Background",
      "path": "UserInterface Branding CustomId Background",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the customid for the branding logo, if applicable. The branding logo will be displayed on a light background in the bottom right corner on both the main screen and the touch panel during awake state.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33859,
      "normPath": "UserInterface Branding CustomId Branding",
      "path": "UserInterface Branding CustomId Branding",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the customid for the image used for the halfwake background, if applicable. The HalfwakeBackground image is displayed as a background on both the main screen and on the touch panel when the video system is in the halfwake state.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33860,
      "normPath": "UserInterface Branding CustomId HalfwakeBackground",
      "path": "UserInterface Branding CustomId HalfwakeBackground",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33043,
      "normPath": "UserInterface Branding CustomId HalfwakeBranding",
      "path": "UserInterface Branding CustomId HalfwakeBranding",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the device's active contact information. This address is used to reach this device.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32023,
      "normPath": "UserInterface ContactInfo ContactMethod Number",
      "path": "UserInterface ContactInfo ContactMethod[n] Number",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the device's active contact name. The result depends on which protocol, if any, the device is registered on. The automatically set contact name may have been overridden with the command xConfiguration UserInterface ContactInfo Type. This results in a diagnostics warning about contact mismatch.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30665,
      "normPath": "UserInterface ContactInfo Name",
      "path": "UserInterface ContactInfo Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the value for a widget. Widgets are used in custom panels, for example in-room controls, that are added to the user interface. The value space depends on the widget type. The value is an empty string until a value is set with the UserInterface Extensions Widget SetValue command.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32024,
      "normPath": "UserInterface Extensions Widget Value",
      "path": "UserInterface Extensions Widget[n] Value",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the unique identifier for a widget. Widgets are used in custom panels, for example in-room controls, that are added to the user interface.",
        "role": [
          "Admin",
          "Integrator",
          "RoomControl",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32025,
      "normPath": "UserInterface Extensions Widget WidgetId",
      "path": "UserInterface Extensions Widget[n] WidgetId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This status reports whether or not the default End call button is removed from the user interface.",
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Visible",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 28015,
      "normPath": "UserInterface Features Call End",
      "path": "UserInterface Features Call End",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This status reports whether or not the default Join Webex button is removed from the user interface.",
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Visible",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 33861,
      "normPath": "UserInterface Features Call JoinWebex",
      "path": "UserInterface Features Call JoinWebex",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This status reports whether or not the default Keypad button is removed from the user interface.",
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Visible",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 30666,
      "normPath": "UserInterface Features Call Keypad",
      "path": "UserInterface Features Call Keypad",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Visible",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 28017,
      "normPath": "UserInterface Features Call MidCallControls",
      "path": "UserInterface Features Call MidCallControls",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This status reports whether or not the default Call button and the Add participant button are removed from the user interface.",
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Visible",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 28018,
      "normPath": "UserInterface Features Call Start",
      "path": "UserInterface Features Call Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This status reports whether or not the default buttons and other UI elements for sharing and previewing content, both in call and out of call, are removed from the user interface.",
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Visible",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 28019,
      "normPath": "UserInterface Features Share Start",
      "path": "UserInterface Features Share Start",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Visible",
            "Hidden"
          ],
          "type": "Literal"
        },
        "description": "This status reports whether or not the default Whiteboard button is removed from the user interface."
      },
      "id": 28020,
      "normPath": "UserInterface Features Whiteboard Start",
      "path": "UserInterface Features Whiteboard Start",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This status reports whether or not the default Whiteboard button is removed from the user interface.",
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Visible",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 28917,
      "normPath": "UserInterface Features Whiteboard Start",
      "path": "UserInterface Features Whiteboard Start",
      "products": [
        "barents",
        "havella",
        "hopen",
        "svea"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Indicates which monitor on-screen information and indicators (OSD) are displayed on.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 30849,
      "normPath": "UserInterface OSD Output",
      "path": "UserInterface OSD Output",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This status reports whether or not the the device name (or contact information) in the upper left corner of the user interface, and the associated drop down menu and Settings panel, are shown in the user interface.",
        "role": [
          "Admin",
          "Integrator",
          "TouchUser"
        ],
        "valuespace": {
          "Values": [
            "Visible",
            "Hidden"
          ],
          "type": "Literal"
        }
      },
      "id": 30668,
      "normPath": "UserInterface SettingsMenu Visibility",
      "path": "UserInterface SettingsMenu Visibility",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 35073,
      "normPath": "UserInterface Translation Override Checksum",
      "path": "UserInterface Translation Override Checksum",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Visible",
            "Error",
            "NotVisible"
          ],
          "type": "Literal"
        }
      },
      "id": 33616,
      "normPath": "UserInterface WebView Status",
      "path": "UserInterface WebView[n] Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "WebApp",
            "Integration",
            "Signage",
            "ECM",
            "ECMSignIn",
            "Kiosk",
            "Browser",
            "WebRTCMeeting",
            "None"
          ],
          "type": "Literal"
        }
      },
      "id": 33617,
      "normPath": "UserInterface WebView Type",
      "path": "UserInterface WebView[n] Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33618,
      "normPath": "UserInterface WebView URL",
      "path": "UserInterface WebView[n] URL",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the position of the active speaker's image on the screen.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "CenterLeft",
            "CenterRight",
            "LowerLeft",
            "LowerRight",
            "UpperCenter",
            "UpperLeft",
            "UpperRight",
            "DockLowerLeft",
            "DockCenterLeft"
          ],
          "type": "Literal"
        }
      },
      "id": 30669,
      "normPath": "Video ActiveSpeaker PIPPosition",
      "path": "Video ActiveSpeaker PIPPosition",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether is something is connected to the specified connector. Not all connections can be detected.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True",
            "Unknown"
          ],
          "type": "Literal"
        }
      },
      "id": 32026,
      "normPath": "Video Input Connector Connected",
      "path": "Video Input Connector[n] Connected",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows what type of input device is connected.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32317,
      "normPath": "Video Input Connector DeviceType",
      "path": "Video Input Connector[n] ConnectedDevice CEC[n] DeviceType",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the CEC logical address of the connected input device. The address is fixed at 0.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32318,
      "normPath": "Video Input Connector LogicalAddress",
      "path": "Video Input Connector[n] ConnectedDevice CEC[n] LogicalAddress",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the name of the connected input device.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32319,
      "normPath": "Video Input Connector Name",
      "path": "Video Input Connector[n] ConnectedDevice CEC[n] Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the state of the CEC enabled devise connected to the HDMI input.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32320,
      "normPath": "Video Input Connector PowerStatus",
      "path": "Video Input Connector[n] ConnectedDevice CEC[n] PowerStatus",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the vendor ID for the connected input device.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32321,
      "normPath": "Video Input Connector VendorId",
      "path": "Video Input Connector[n] ConnectedDevice CEC[n] VendorId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the signal state for the specified input.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "OK",
            "Unstable",
            "NotFound",
            "Unknown",
            "Unsupported"
          ],
          "type": "Literal"
        }
      },
      "id": 32027,
      "normPath": "Video Input Connector SignalState",
      "path": "Video Input Connector[n] SignalState",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the identifer of the input source that the connector is associated with.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32028,
      "normPath": "Video Input Connector SourceId",
      "path": "Video Input Connector[n] SourceId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows which connector type it is.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Camera",
            "3G-SDI",
            "HD-SDI",
            "USBC-DP",
            "HDMI",
            "USB",
            "Unknown"
          ],
          "type": "Literal"
        }
      },
      "id": 35067,
      "normPath": "Video Input Connector Type",
      "path": "Video Input Connector[n] Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows the IP address of the connected direct share peer."
      },
      "id": 29593,
      "normPath": "Video Input DirectShare Peer Address",
      "path": "Video Input DirectShare[n] Peer Address",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the IP address of the connected direct share peer.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32322,
      "normPath": "Video Input DirectShare Peer Address",
      "path": "Video Input DirectShare[n] Peer Address",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        },
        "description": "Shows a unique identifier of the direct share peer in question."
      },
      "id": 29594,
      "normPath": "Video Input DirectShare Peer PeripheralID",
      "path": "Video Input DirectShare[n] Peer PeripheralID",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows a unique identifier of the direct share peer in question.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32323,
      "normPath": "Video Input DirectShare Peer PeripheralID",
      "path": "Video Input DirectShare[n] Peer PeripheralID",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Proximity"
          ],
          "type": "Literal"
        },
        "description": "Shows the type of direct share peer (currently limited to \"Proximity\" only)."
      },
      "id": 29595,
      "normPath": "Video Input DirectShare Type",
      "path": "Video Input DirectShare[n] Type",
      "products": [
        "bandai",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the type of direct share peer (currently limited to \"Proximity\" only).",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Proximity"
          ],
          "type": "Literal"
        }
      },
      "id": 32324,
      "normPath": "Video Input DirectShare Type",
      "path": "Video Input DirectShare[n] Type",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "havella",
        "hopen",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Indicates whether sending of main video has been stopped by using the Video Input MainVideo Mute command (or, if available, the \"Turn video off\" button on the user interface).",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 28044,
      "normPath": "Video Input MainVideoMute",
      "path": "Video Input MainVideoMute",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the local video input currently used as the main source. The value Composed is returned if the main source is composed of more than one local input. The default main video source is set with the xConfiguration Video DefaultMainSource command. It can be changed using xCommand Video Input SetMainVideoSource.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "Composed"
          ],
          "type": "Literal"
        }
      },
      "id": 33862,
      "normPath": "Video Input MainVideoSource",
      "path": "Video Input MainVideoSource",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the identifier of the connector that is associated with the input source.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32030,
      "normPath": "Video Input Source ConnectorId",
      "path": "Video Input Source[n] ConnectorId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the resolution format status for the video input source.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "NotFound",
            "OutOfRange",
            "Error",
            "Interlaced",
            "Ok",
            "Unknown"
          ],
          "type": "Literal"
        }
      },
      "id": 32031,
      "normPath": "Video Input Source FormatStatus",
      "path": "Video Input Source[n] FormatStatus",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the resolution format type for the video input source.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "AnalogCEABlanking",
            "AnalogCVTBlanking",
            "AnalogCVTReducedBlanking",
            "AnalogDMTBlanking",
            "AnalogDiscreteTiming",
            "AnalogGTFDefault",
            "AnalogGTFSecondary",
            "Digital",
            "Unknown"
          ],
          "type": "Literal"
        }
      },
      "id": 32032,
      "normPath": "Video Input Source FormatType",
      "path": "Video Input Source[n] FormatType",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "For internal use only.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32033,
      "normPath": "Video Input Source MediaChannelId",
      "path": "Video Input Source[n] MediaChannelId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the resolution height (in pixels) for the video input source.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32034,
      "normPath": "Video Input Source Resolution Height",
      "path": "Video Input Source[n] Resolution Height",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the resolution refresh rate (Hz) for the video input source.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32035,
      "normPath": "Video Input Source Resolution RefreshRate",
      "path": "Video Input Source[n] Resolution RefreshRate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the resolution width (in pixels) for the video input source.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32036,
      "normPath": "Video Input Source Resolution Width",
      "path": "Video Input Source[n] Resolution Width",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 34285,
      "normPath": "Video Layout CurrentLayouts ActiveLayout",
      "path": "Video Layout CurrentLayouts ActiveLayout",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 34286,
      "normPath": "Video Layout CurrentLayouts AvailableLayouts LayoutName",
      "path": "Video Layout CurrentLayouts AvailableLayouts[n] LayoutName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 34287,
      "normPath": "Video Layout CurrentLayouts DefaultLayout",
      "path": "Video Layout CurrentLayouts DefaultLayout",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the local screen layout family.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 28056,
      "normPath": "Video Layout LayoutFamily Local",
      "path": "Video Layout LayoutFamily Local",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the remote screen layout family.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 28057,
      "normPath": "Video Layout LayoutFamily Remote",
      "path": "Video Layout LayoutFamily Remote",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the monitor layout mode.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Dual",
            "DualPresentationOnly",
            "Single",
            "Triple",
            "TriplePresentationOnly"
          ],
          "type": "Literal"
        }
      },
      "id": 28114,
      "normPath": "Video Monitors",
      "path": "Video Monitors",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Describes whether a device (for example a display) is connected to the output connector or not. When a display enters standby mode, the video conferencing device may not be able to detect it. The connector status will then return False/Unknown even if the display is physically connected.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True",
            "Unknown"
          ],
          "type": "Literal"
        }
      },
      "id": 32057,
      "normPath": "Video Output Connector Connected",
      "path": "Video Output Connector[n] Connected",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the type of CEC enabled device connected to the HDMI output that the video conferencing device has detected. This information is only available when the device connected to the HDMI output has the CEC feature configured on and the video conferencing device has the configuration xConfiguration Video Output Connector [n] CEC Mode set to on.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33863,
      "normPath": "Video Output Connector DeviceType",
      "path": "Video Output Connector[n] ConnectedDevice CEC[n] DeviceType",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the CEC logical address of the device.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32059,
      "normPath": "Video Output Connector LogicalAddress",
      "path": "Video Output Connector[n] ConnectedDevice CEC[n] LogicalAddress",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the name of the connected device.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32060,
      "normPath": "Video Output Connector Name",
      "path": "Video Output Connector[n] ConnectedDevice CEC[n] Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the state of the CEC enabled devise connected to the HDMI output. This information is only available when the device connected to the HDMI output has the CEC feature configured on and the video conferencing device has the configuration xConfiguration Video Output Connector CEC Mode set to on.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32061,
      "normPath": "Video Output Connector PowerStatus",
      "path": "Video Output Connector[n] ConnectedDevice CEC[n] PowerStatus",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the vendor ID for the connected device.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32062,
      "normPath": "Video Output Connector VendorId",
      "path": "Video Output Connector[n] ConnectedDevice CEC[n] VendorId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the name of the monitor connected to the HDMI port as defined in the monitors EDID.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32063,
      "normPath": "Video Output Connector ConnectedDevice Name",
      "path": "Video Output Connector[n] ConnectedDevice Name",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the preferred input format of the monitor connected to the HDMI port as defined in the monitors EDID. This is not necessarily the format the video conferencing device is sending out.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32064,
      "normPath": "Video Output Connector ConnectedDevice PreferredFormat",
      "path": "Video Output Connector[n] ConnectedDevice PreferredFormat",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the screen size of the connected device in inches. If this information is not available, the default value is set to 0.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32065,
      "normPath": "Video Output Connector ConnectedDevice ScreenSize",
      "path": "Video Output Connector[n] ConnectedDevice ScreenSize",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Describes which video stream is shown on the device that is connected to the video output connector.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "First",
            "InternalSetup",
            "PresentationOnly",
            "Recorder",
            "Second",
            "Third"
          ],
          "type": "Literal"
        }
      },
      "id": 32066,
      "normPath": "Video Output Connector MonitorRole",
      "path": "Video Output Connector[n] MonitorRole",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the resolution height (in pixels) for the video output connector.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32067,
      "normPath": "Video Output Connector Resolution Height",
      "path": "Video Output Connector[n] Resolution Height",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the resolution refresh rate (Hz) for the video output connector.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32068,
      "normPath": "Video Output Connector Resolution RefreshRate",
      "path": "Video Output Connector[n] Resolution RefreshRate",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the resolution width (in pixels) for the video output connector.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32069,
      "normPath": "Video Output Connector Resolution Width",
      "path": "Video Output Connector[n] Resolution Width",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the type of connector.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "HDMI",
            "LCD",
            "Legacy",
            "Internal",
            "USBC-DP"
          ],
          "type": "Literal"
        }
      },
      "id": 35068,
      "normPath": "Video Output Connector Type",
      "path": "Video Output Connector[n] Type",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        },
        "description": "Returns the monitors backlight level, that has been set with xCommand Video Output Monitor Backlight Set."
      },
      "id": 28742,
      "normPath": "Video Output Monitor Backlight",
      "path": "Video Output Monitor[n] Backlight",
      "products": [
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the monitors backlight level, that has been set with xCommand Video Output Monitor Backlight Set.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 32356,
      "normPath": "Video Output Monitor Backlight",
      "path": "Video Output Monitor[n] Backlight",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 30295,
      "normPath": "Video Output Monitor Calibrated",
      "path": "Video Output Monitor[n] Calibrated",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Returns the monitors color temperature, that has been set with xCommand Video Output Monitor Color Select.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "4900",
            "5500",
            "6500",
            "7200",
            "9300",
            "10500",
            "12000",
            "User"
          ],
          "type": "Literal"
        }
      },
      "id": 32357,
      "normPath": "Video Output Monitor ColorTemperature Selected",
      "path": "Video Output Monitor[n] ColorTemperature Selected",
      "products": [
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "False",
            "True"
          ],
          "type": "Literal"
        }
      },
      "id": 30296,
      "normPath": "Video Output Monitor Configured",
      "path": "Video Output Monitor[n] Configured",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the firmware version of the monitor. This status field is only populated when connecting with a supported LG monitor.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32325,
      "normPath": "Video Output Monitor FirmwareVersion",
      "path": "Video Output Monitor[n] FirmwareVersion",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30297,
      "normPath": "Video Output Monitor IpAddress",
      "path": "Video Output Monitor[n] IpAddress",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 30300,
      "normPath": "Video Output Monitor Manufacturer",
      "path": "Video Output Monitor[n] Manufacturer",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 30298,
      "normPath": "Video Output Monitor MDC Id",
      "path": "Video Output Monitor[n] MDC Id",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "Integer"
        }
      },
      "id": 30299,
      "normPath": "Video Output Monitor MDC Port",
      "path": "Video Output Monitor[n] MDC Port",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the model name of the monitor. This status field is only populated when connecting with a supported LG monitor.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32326,
      "normPath": "Video Output Monitor ModelName",
      "path": "Video Output Monitor[n] ModelName",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether the monitor is positioned on the left or the right. Applicable for dual screen devices only.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Left",
            "Right"
          ],
          "type": "Literal"
        }
      },
      "id": 32327,
      "normPath": "Video Output Monitor Position",
      "path": "Video Output Monitor[n] Position",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the serial number of the monitor. This status field is only populated when connecting with a supported LG monitor.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 32328,
      "normPath": "Video Output Monitor SerialNumber",
      "path": "Video Output Monitor[n] SerialNumber",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the temperature of the monitor. This status field is only populated when connecting with a supported LG monitor.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Normal",
            "High"
          ],
          "type": "Literal"
        }
      },
      "id": 32329,
      "normPath": "Video Output Monitor Temperature",
      "path": "Video Output Monitor[n] Temperature",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Disconnected",
            "Connected",
            "Streaming",
            "StreamingAudioOnly"
          ],
          "type": "Literal"
        },
        "description": "In order to use the system as a webcam, one must establish a USB connection. This status shows the current state of the USB connection and whether audio or video is being streamed across it. \"Video streaming\" means that the frames that are captured by the camera of the device are continuously being transmitted across the USB connection as a video stream. "
      },
      "id": 31489,
      "normPath": "Video Output Webcam Mode",
      "path": "Video Output Webcam Mode",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "In order to use the system as a webcam, one must establish a USB connection. This status shows the current state of the USB connection and whether audio or video is being streamed across it. \"Video streaming\" means that the frames that are captured by the camera of the device are continuously being transmitted across the USB connection as a video stream. ",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Disconnected",
            "Connected",
            "Streaming",
            "StreamingAudioOnly"
          ],
          "type": "Literal"
        }
      },
      "id": 34048,
      "normPath": "Video Output Webcam Mode",
      "path": "Video Output Webcam Mode",
      "products": [
        "havella"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Active",
            "Inactive"
          ],
          "type": "Literal"
        },
        "description": "When operating as a webcam, the device is set into do-not-disturb mode. This status indicates whether or not the endpoint currently is operating as a webcam. On Desk Pro and Desk Limited Edition, it will enter this state only when video is being streamed across the USB connection. On other endpoints, there is a config for controlling whether to enter the state when the endpoint is streaming content or to enter the state already when the USB connection is established. "
      },
      "id": 31490,
      "normPath": "Video Output Webcam Status",
      "path": "Video Output Webcam Status",
      "products": [
        "octavio",
        "polaris"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "When operating as a webcam, the device is set into do-not-disturb mode. This status indicates whether or not the endpoint currently is operating as a webcam. On Desk Pro and Desk Limited Edition, it will enter this state only when video is being streamed across the USB connection. On other endpoints, there is a config for controlling whether to enter the state when the endpoint is streaming content or to enter the state already when the USB connection is established. ",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Active",
            "Inactive"
          ],
          "type": "Literal"
        }
      },
      "id": 34049,
      "normPath": "Video Output Webcam Status",
      "path": "Video Output Webcam Status",
      "products": [
        "havella"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the position of the presentation image on the screen.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "CenterLeft",
            "CenterRight",
            "LowerLeft",
            "LowerRight",
            "UpperCenter",
            "UpperLeft",
            "UpperRight",
            "DockLowerLeft",
            "DockCenterLeft"
          ],
          "type": "Literal"
        }
      },
      "id": 30324,
      "normPath": "Video Presentation PIPPosition",
      "path": "Video Presentation PIPPosition",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether selfview is set on full screen mode or not.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 28144,
      "normPath": "Video Selfview FullscreenMode",
      "path": "Video Selfview FullscreenMode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows whether selfview mode is set on or not.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 28145,
      "normPath": "Video Selfview Mode",
      "path": "Video Selfview Mode",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Identifies which monitor(s) contains the selfview, if present.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "First",
            "Second",
            "Third"
          ],
          "type": "Literal"
        }
      },
      "id": 28146,
      "normPath": "Video Selfview OnMonitorRole",
      "path": "Video Selfview OnMonitorRole",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows the position of the selfview image on the screen.",
        "role": [
          "Admin",
          "Integrator",
          "User"
        ],
        "valuespace": {
          "Values": [
            "CenterLeft",
            "CenterRight",
            "LowerLeft",
            "LowerRight",
            "UpperCenter",
            "UpperLeft",
            "UpperRight",
            "DockLowerLeft",
            "DockCenterLeft"
          ],
          "type": "Literal"
        }
      },
      "id": 30325,
      "normPath": "Video Selfview PIPPosition",
      "path": "Video Selfview PIPPosition",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reports whether or not the digital signage feature is enabled. It is enabled (On) only when both the WebEngine Mode and Standby Signage Mode settings are On.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 30670,
      "normPath": "WebEngine Features Signage",
      "path": "WebEngine Features Signage",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reports whether or not the web engine is enabled. It is enabled (On) when the WebEngine Mode setting is On.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 30671,
      "normPath": "WebEngine Features WebEngine",
      "path": "WebEngine Features WebEngine",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reports whether or not the WebRTC feature is enabled on the device. Through WebRTC, Webex devices and participants with devices in Personal mode, when invited to a Microsoft Teams meeting, can join the meeting directly from their devices with One Button to Push (OBTP).",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "On",
            "Off"
          ],
          "type": "Literal"
        }
      },
      "id": 33864,
      "normPath": "WebEngine Features WebRTC",
      "path": "WebEngine Features WebRTC",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This an id can be used to send cloud xAPI calls to devices through developer.webex.com. The cloud xAPI allows you to send commands and status requests to devices that are registered to the Webex cloud service or to an on-premises service and linked to Webex Edge for Devices. Most xAPI requests require a deviceId which can be obtained using this status.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 33865,
      "normPath": "Webex DeveloperId",
      "path": "Webex DeveloperId",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Shows if the device can join Webex Meetings using the Webex cloud service for calling.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "SIP",
            "Webex"
          ],
          "type": "Literal"
        }
      },
      "id": 33866,
      "normPath": "Webex Meetings JoinProtocol",
      "path": "Webex Meetings JoinProtocol",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Provides the device-specific code that can be used with share.webex.com. Note that the code will change periodically. The status is only available for cloud-registered devices.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "type": "String"
        }
      },
      "id": 34358,
      "normPath": "Webex Services Proximity GuestToken",
      "path": "Webex Services Proximity GuestToken",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Reports the status of the connection between the device and the Cisco Webex cloud service. If the could service is up and running, the status reports Registered. If the device is registered to an on-premise service such as CUCM or VCS, the status reports Disabled.",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Disabled",
            "Error",
            "Registered",
            "Registering",
            "Stopped"
          ],
          "type": "Literal"
        }
      },
      "id": 30673,
      "normPath": "Webex Status",
      "path": "Webex Status",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "octavio",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Available",
            "Unavailable"
          ],
          "type": "Literal"
        }
      },
      "id": 35232,
      "normPath": "WebRTC Provider GoogleMeet Availability",
      "path": "WebRTC Provider GoogleMeet Availability",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "role": [
          "Admin",
          "User"
        ],
        "valuespace": {
          "Values": [
            "Available",
            "Unavailable"
          ],
          "type": "Literal"
        }
      },
      "id": 33619,
      "normPath": "WebRTC Provider MicrosoftTeams Availability",
      "path": "WebRTC Provider MicrosoftTeams Availability",
      "products": [
        "bandai",
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Status"
    }
  ]
}