{
  "objects": [
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command sends out a noise signal sequentially on all audio output connectors and measures the room impulse response (RIR) between the output and the microphones. If a RIR is detected, the detected number of microphones (input), the detected number of output connectors, and the detected delay between the output and input is reported back. Example: xCommand Audio Diagnostics Advanced Run Volume: 50 MeasurementLength: 1 Result returned -> OK *r AdvancedRunResult (status=OK): *r AdvancedRunResult HdmiSpeakersDelay: \"100 ms\" *r AdvancedRunResult NumHdmiSpeakersDetected: 2 *r AdvancedRunResult NumMicsDetected: 1 ** end",
        "params": [
          {
            "default": "0",
            "description": "The channel number, from left to right, of the selected output.",
            "name": "Channel",
            "required": false,
            "valuespace": {
              "Max": "13",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "3",
            "description": "The length of the measurement in number of seconds. In a noisy environment a longer measurement duration will give a more reliable and robust result.",
            "name": "MeasurementLength",
            "required": false,
            "valuespace": {
              "Max": "100",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "All",
            "description": "The output where the test signal should be directed. HDMI: Measure the room impulse response (RIR)  of the device connected to the HDMI output. Line: Measure the RIR of the device connected to the Line output (only available on video conferencing devices that have a Line output). Internal: Measure the RIR of the internal loudspeaker (only available on video conferencing devices that have an internal loudspeaker). Headset: Measure the RIR of the headset (only available on video conferencing devices that have a headset). All: Measure the RIR on all outputs.",
            "name": "Output",
            "required": false,
            "valuespace": {
              "Values": [
                "HDMI",
                "Line",
                "Internal",
                "Headset",
                "All"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "20",
            "description": "The volume of the test signal. In a noisy environment a higher volume gives more reliable and robust results.",
            "name": "Volume",
            "required": false,
            "valuespace": {
              "Max": "50",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31497,
      "normPath": "Audio Diagnostics Advanced Run",
      "path": "Audio Diagnostics Advanced Run",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30403,
      "normPath": "Audio Diagnostics AecReverb Reset",
      "path": "Audio Diagnostics AecReverb Reset",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "params": [],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 30404,
      "normPath": "Audio Diagnostics AecReverb Run",
      "path": "Audio Diagnostics AecReverb Run",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command measures the audio delay/latency in a device that is connected to the video conferencing device. A typical use case it to measure the delay in a TV connected to the video conferencing device via the HDMI connector. If the delay in a TV is too high, the real-time experience of a video call will be substantially degraded. If the delay is more than 50 ms we recommend the user to find a TV setting that has shorter delay. Typical TV settings that can reduce the delay are: Gaming Mode and PC Mode. This command will measure the delay between output and input (microphone). This means that if you are using an external acoustic echo canceller or audio mixer, this command will also measure the delay of these devices.",
        "params": [
          {
            "default": "6",
            "description": "The length of the measurement in number of seconds. In a noisy environment a longer measurement duration will give a more reliable and robust result.",
            "name": "MeasurementLength",
            "required": false,
            "valuespace": {
              "Max": "100",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "default": "HDMI",
            "description": "HDMI: Measure the delay of the device connected to the HDMI output. Line: Measure the delay of the device connected to the Line output (only available on video conferencing devices that have a Line output). Internal: Measure the delay of the internal loudspeaker (only available on video conferencing devices that have an internal loudspeaker). Headset: Measure the delay of the headset (only available on video conferencing devices that have a headset). All: Measure the maximum delay of all outputs.",
            "name": "Output",
            "required": false,
            "valuespace": {
              "Values": [
                "HDMI",
                "Line",
                "Internal",
                "Headset",
                "All"
              ],
              "type": "Literal"
            }
          },
          {
            "default": "20",
            "description": "The volume of the test signal. In a noisy environment a higher volume gives more reliable and robust results.",
            "name": "Volume",
            "required": false,
            "valuespace": {
              "Max": "50",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin",
          "User"
        ]
      },
      "id": 31498,
      "normPath": "Audio Diagnostics MeasureDelay",
      "path": "Audio Diagnostics MeasureDelay",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i",
        "darling_10_55",
        "darling_10_70",
        "darling_15_55",
        "darling_15_70",
        "darling_15_85",
        "havella",
        "hopen",
        "polaris",
        "spitsbergen",
        "svea",
        "svea_55d",
        "svea_70d",
        "svea_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command lists the current equalizer parameters. If no EqualizerId is specified, the command lists all 8 equalizers.",
        "params": [
          {
            "description": "Each EqualizerId has 6 second-order filter sections with these parameters: FilterType, Frequency, Gain and Q-value.",
            "name": "EqualizerId",
            "required": false,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31649,
      "normPath": "Audio Equalizer List",
      "path": "Audio Equalizer List",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "This command sets the equalizer parameters for the selected EqualizerId and Section. Each of the 8 available equalizers consist of 6 cascaded second-order IIR filters.",
        "params": [
          {
            "name": "Enabled",
            "required": false,
            "valuespace": {
              "Values": [
                "False",
                "True"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "EqualizerId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "name": "FilterType",
            "required": true,
            "valuespace": {
              "Values": [
                "highpass",
                "highshelf",
                "lowpass",
                "lowshelf",
                "none",
                "peaking"
              ],
              "type": "Literal"
            }
          },
          {
            "name": "Frequency",
            "required": true,
            "valuespace": {
              "MaxLength": "32",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "Gain",
            "required": true,
            "valuespace": {
              "MaxLength": "32",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "Q",
            "required": true,
            "valuespace": {
              "MaxLength": "32",
              "MinLength": "0",
              "type": "String"
            }
          },
          {
            "name": "Section",
            "required": true,
            "valuespace": {
              "Max": "6",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31358,
      "normPath": "Audio Equalizer Update",
      "path": "Audio Equalizer Update",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Create a virtual local input, and generate an identifier for it (InputId). A local input is associated with a set of input connectors, and you can specify the following: a name for the local input, how to mix the signals from the associated input connectors, the use of Automatic Gain Control (AGC) and mute, whether to make a mono or stereo signal, and whether to use direct mode to bypass input processing.  The maximum number of local input modules is 8. You get an error message if you exceed the limit. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "On: Adjusts the gain continuously to maintain a constant sound level (default). Off: No automatic gain control.",
            "name": "AGC",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "1: Mixes the input signals into a mono signal (default). 2: Mixes the input signals into a stereo signal.",
            "name": "Channels",
            "required": false,
            "valuespace": {
              "Max": "2",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "On: Bypass input processing such as acoustic echo cancellation and noise reduction, regardless of the configuration for each connected input connector. Bypassing the input processing reduces the audio input delay, which is useful when doing local sound reinforcement. Off: All regular input processing is performed, according to the configuration of each connector (default).",
            "name": "Direct",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "A unique identifier for the local input. If you don't specify an InputID, the device will automatically create one for you. We recommend that you specify the InputId yourself in case you need to refer to the local input at a later stage.",
            "name": "InputId",
            "required": false,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Auto: If one input signal is dominating, the signal on the other connectors are attenuated with 20 dB each. Fixed: The input signals all have the same weight, and consequently they are mixed together with equal gains (default).  GainShared: If one or some of the input signals dominate, the rest of the input signals are attenuated by a few dB so that the total gain of the mixed signal remains the same all the time. Auto and GainShared are intended for the microphone inputs; Fixed is recommended for Line and HDMI inputs.",
            "name": "MixerMode",
            "required": false,
            "valuespace": {
              "Values": [
                "Auto",
                "Fixed",
                "GainShared"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "On: Mutes the mix of input signals (default). Off: No muting.",
            "name": "Mute",
            "required": false,
            "valuespace": {
              "Values": [
                "On",
                "Off"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "Choose a name that describes the local input. If you don't specify a name, the string will be empty.",
            "name": "Name",
            "required": false,
            "valuespace": {
              "MaxLength": "255",
              "MinLength": "0",
              "type": "String"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31650,
      "normPath": "Audio LocalInput Add",
      "path": "Audio LocalInput Add",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Attach an input connector to the local input given by the input ID. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. A connector can only be attached to one local input. Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type. HDMI: HDMI cable input connector. ARC: HDMI with ARC (Audio Return Channel) is input connector. Microphone: Microphone input connector. WebView: WebView input connector. ",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone",
                "ARC",
                "WebView"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier of the local input. It was generated when the local input was created with the xCommand Audio LocalInput Add command.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31651,
      "normPath": "Audio LocalInput AddConnector",
      "path": "Audio LocalInput AddConnector",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Attach an input connector to the local input given by the input ID. You have to specify both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector. A connector can only be attached to one local input. Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type. HDMI: HDMI cable input connector. ARC: HDMI with ARC (Audio Return Channel) is input connector. Microphone: Microphone input connector. WebView: WebView input connector. ",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone",
                "ARC",
                "WebView",
                "Ethernet"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier of the local input. It was generated when the local input was created with the xCommand Audio LocalInput Add command.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31723,
      "normPath": "Audio LocalInput AddConnector",
      "path": "Audio LocalInput AddConnector",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Remove the local input given by the input ID. Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "The unique identifier of the local input. It was generated when the local input was created with the xCommand Audio LocalInput Add command.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31652,
      "normPath": "Audio LocalInput Remove",
      "path": "Audio LocalInput Remove",
      "products": [
        "barents",
        "barents_70d",
        "barents_70i",
        "barents_70s",
        "barents_82i"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Detach an input connector from the local input given by the input ID. You need to enter both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector.  Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type. HDMI: HDMI cable input connector. ARC: HDMI with ARC (Audio Return Channel) is input connector. Microphone: Microphone input connector. WebView: WebView input connector. ",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone",
                "ARC",
                "WebView"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier for the local input. It was generated when the local input was created with the xCommand Audio LocalInput Add command.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31653,
      "normPath": "Audio LocalInput RemoveConnector",
      "path": "Audio LocalInput RemoveConnector",
      "products": [
        "barents",
        "barents_70d",
        "barents_70s"
      ],
      "type": "Command"
    },
    {
      "attributes": {
        "access": "public-api",
        "backend": "any",
        "description": "Detach an input connector from the local input given by the input ID. You need to enter both the connector's type and number (ConnectorType, ConnectorId) to uniquely identify the connector.  Run xStatus Audio Input LocalInput to get an overview of all local inputs. This command is mainly intended for internal use by the Audio Console. If you don't use Audio Console, you need to manually add the command in a startup script, or use the macro framework, in order to make the definition persistent over a reboot.",
        "params": [
          {
            "description": "Select a connector. The connectors' numbers are printed on the codec connector panel.",
            "name": "ConnectorId",
            "required": true,
            "valuespace": {
              "Max": "8",
              "Min": "1",
              "Step": "1",
              "type": "Integer"
            }
          },
          {
            "description": "Select the connector type. HDMI: HDMI cable input connector. ARC: HDMI with ARC (Audio Return Channel) is input connector. Microphone: Microphone input connector. WebView: WebView input connector. ",
            "name": "ConnectorType",
            "required": true,
            "valuespace": {
              "Values": [
                "HDMI",
                "Microphone",
                "ARC",
                "WebView",
                "Ethernet"
              ],
              "type": "Literal"
            }
          },
          {
            "description": "The unique identifier for the local input. It was generated when the local input was created with the xCommand Audio LocalInput Add command.",
            "name": "InputId",
            "required": true,
            "valuespace": {
              "Max": "65534",
              "Min": "0",
              "Step": "1",
              "type": "Integer"
            }
          }
        ],
        "read": [],
        "role": [
          "Admin"
        ]
      },
      "id": 31724,
      "normPath": "Audio LocalInput RemoveConnector",
      "path": "Audio LocalInput RemoveConnector",
      "products": [
        "barents_70i",
        "barents_82i"
      ],
      "type": "Command"
    }
  ]
}